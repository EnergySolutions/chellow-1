<project name="Chellow" default="prepare" basedir="." xmlns:tc="antlib:tomcat.apache.org">

	<property file="build.properties" />
	<property file="${user.home}/build.properties" />
	<property name="app.name" value="chellow" />
	<property name="app.path" value="/${app.name}" />
	<property name="app.version" value="0.1-dev" />
	<property name="build.home" value="${basedir}/build" />
	<property name="dist.home" value="${basedir}/dist" />
	<property name="docs.home" value="${basedir}/docs" />
	<property name="manager.url" value="http://localhost:8080/manager/text" />
	<property name="catalina.home" value="/usr/share/tomcat7" />
	<property name="src.home" value="${basedir}/src" />
	<property name="web.home" value="${basedir}/web" />
	<property name="javalib.home" value="${user.home}/java" />
	<property name="manager.username" value="admin" />
	<!-- Requires Imprimatur from http://imprimatur.sourceforge.net/ -->

	<property name="imprimatur.jar" value="${javalib.home}\imprimatur-022\imprimatur.jar" />
	<property name="test.home" value="${basedir}/test" />

	<taskdef uri="antlib:tomcat.apache.org" resource="org/apache/catalina/ant/catalina.tasks" classpath="${catalina.home}/lib/catalina-ant.jar:${catalina.home}/lib/jasper.jar:${catalina.home}/lib/servlet-api.jar:${catalina.home}/bin/tomcat-juli.jar:${catalina.home}/lib/tomcat-coyote.jar:${catalina.home}/lib/tomcat-util.jar" />

	<property name="compile.debug" value="true" />
	<property name="compile.deprecation" value="true" />
	<property name="compile.optimize" value="true" />
	<property name="build.lib" value="${build.home}/WEB-INF/lib" />

	<path id="compile.classpath">
		<fileset dir="${build.lib}">
			<include name="*.jar" />
		</fileset>

		<fileset dir="${catalina.home}/bin">
			<include name="*.jar" />
		</fileset>
		<pathelement location="${catalina.home}/lib" />
		<fileset dir="${catalina.home}/lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="all" depends="clean,compile" description="Clean build and dist directories, then compile" />


	<target name="clean" description="Delete old build and dist directories">
		<delete dir="${build.home}" />
		<delete dir="${dist.home}" />
	</target>

	<target name="compile" depends="prepare" description="Compile Java sources">
		<mkdir dir="${build.home}/WEB-INF/classes" />
		<javac includeantruntime="false" source="1.7" target="1.7" srcdir="${src.home}" destdir="${build.home}/WEB-INF/classes" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}">
			<classpath refid="compile.classpath" />
		</javac>

		<jar jarfile="${build.lib}/monad.jar" basedir="${build.home}/WEB-INF/classes" includes="net/sf/chellow/monad/**/*" />

		<copy todir="${build.home}/WEB-INF/classes">
			<fileset dir="${src.home}" excludes="**/*.java" />
		</copy>
		<copy todir="${build.home}/WEB-INF/lib-python/jinja2">
			<fileset dir="${user.home}/venv/lib/python2.5/site-packages/jinja2" />
		</copy>
		<copy todir="${build.home}/WEB-INF/lib-python/dateutil">
			<fileset dir="${user.home}/venv/lib/python2.5/site-packages/dateutil" />
		</copy>
		<copy todir="${build.home}/WEB-INF/lib-python/sqlalchemy">
			<fileset dir="${user.home}/venv/lib/python2.5/site-packages/sqlalchemy" />
		</copy>
		<copy todir="${build.home}/WEB-INF/lib-python/pg8000">
			<fileset dir="${user.home}/venv/lib/python2.5/site-packages/pg8000" />
		</copy>
		<copy todir="${build.home}/WEB-INF/lib-python/pytz">
			<fileset dir="${user.home}/venv/lib/python2.5/site-packages/pytz" />
		</copy>

		<copy overwrite="true" todir="${build.home}/WEB-INF/lib-python/pg8000" file="${web.home}/WEB-INF/protocol.py" />
		<copy overwrite="true" todir="${build.home}/WEB-INF/lib-python/pg8000" file="${web.home}/WEB-INF/types.py" />

		<taskdef name="instrument" classname="org.hibernate.tool.instrument.javassist.InstrumentTask" classpath="${javalib.home}/hibernate-distribution-3.6.10.Final/hibernate3.jar:${javalib.home}/slf4j-1.7.2/slf4j-api-1.7.2.jar:${javalib.home}/slf4j-1.7.2/slf4j-nop-1.7.2.jar" />

		<instrument verbose="true">
			<fileset dir="${build.home}">
				<!-- substitute the package where you keep your domain objs -->
				<include name="/WEB-INF/classes/net/sf/chellow/physical/*.class" />
			</fileset>
		</instrument>

	</target>

	<target name="dist" depends="compile" description="Create binary distribution">
		<mkdir dir="${dist.home}" />

		<jar jarfile="${dist.home}/${app.name}.war" basedir="${build.home}" excludes="net/sf/chellow/monad/**/*" />

		<copy todir="${dist.home}" file="${basedir}/readme.md" />
	</target>

	<target name="install" depends="dist" description="Install application to servlet container">
		<tc:deploy url="${manager.url}" username="${manager.username}" password="${manager.password}" path="${app.path}" war="file://${dist.home}/chellow.war" />
	</target>

	<target name="reset-db" description="Drop existing db and create a fresh new one.">
		<exec osfamily="windows" executable="C:\Program Files\PostgreSQL\8.3\bin\dropdb">
			<arg line="-U postgres chellow" />
		</exec>
		<exec osfamily="windows" executable="C:\Program Files\PostgreSQL\8.3\bin\createdb" failonerror="true">
			<arg line="-U postgres -T template0 chellow" />
		</exec>

		<exec osfamily="unix" executable="dropdb">
			<arg line="-U postgres chellow" />
		</exec>
		<exec osfamily="unix" executable="createdb" failonerror="true">
			<arg line="-U postgres -T template0 chellow" />
		</exec>
	</target>

	<target name="javadoc" depends="compile" description="Create Javadoc API documentation">

		<mkdir dir="${dist.home}/docs/api" />
		<javadoc sourcepath="${src.home}" destdir="${dist.home}/docs/api" packagenames="*">
			<classpath refid="compile.classpath" />
		</javadoc>

	</target>


	<target name="test" description="Test" depends="reset-db, install">
		<copy file="${test.home}/imprimatur.pre.xml" tofile="${test.home}/imprimatur.xml" />
		<replace file="${test.home}/imprimatur.xml" token="@@test.port@@" value="${test.port}" />
		<java jar="${imprimatur.jar}" fork="true" failonerror="true">
			<arg value="${test.home}/imprimatur.xml" />
		</java>
	</target>

	<target name="imprimatur" description="Imprimatur">
		<copy file="${test.home}/imprimatur.pre.xml" tofile="${test.home}/imprimatur.xml" />
		<replace file="${test.home}/imprimatur.xml" token="@@test.port@@" value="${test.port}" />
		<java jar="${imprimatur.jar}" fork="true" failonerror="true">
			<arg value="${test.home}/imprimatur.xml" />
		</java>
	</target>

	<target name="prepare">
		<mkdir dir="${build.home}" />
		<mkdir dir="${build.home}/WEB-INF" />
		<mkdir dir="${build.home}/WEB-INF/classes" />

		<copy todir="${build.home}">
			<fileset dir="${web.home}" />
		</copy>

		<exec dir="${basedir}" executable="hg" output="${build.home}/WEB-INF/VERSION">
			<arg value="log" />
			<arg value="--rev=tip" />
			<arg value="--template={node}" />
		</exec>

		<mkdir dir="${build.lib}" />


		<copy todir="${build.lib}">
			<fileset dir="${javalib.home}/hibernate-distribution-3.6.10.Final/lib/required" />
			<filelist dir="${javalib.home}/hibernate-distribution-3.6.10.Final/">
				<file name="hibernate3.jar" />
			</filelist>
			<filelist dir="${javalib.home}/hibernate-distribution-3.6.10.Final/lib/jpa">
				<file name="hibernate-jpa-2.0-api-1.0.1.Final.jar" />
			</filelist>
			<filelist dir="/usr/share/java">
				<file name="commons-fileupload.jar" />
				<file name="commons-io.jar" />
				<file name="commons-net.jar" />
				<file name="commons-logging.jar" />
				<file name="httpclient.jar" />
				<file name="httpcore.jar" />
			</filelist>
			<filelist dir="${javalib.home}">
				<file name="jython-standalone-2.5.3.jar" />
				<file name="javasysmon-0.3.3.jar" />
			</filelist>
			<filelist dir="${javalib.home}/javamail-1.4.5">
				<file name="mail.jar" />
			</filelist>
			<filelist dir="${javalib.home}/ostermillerutils-1.08.02">
				<file name="ostermillerutils-1.08.02.jar" />
			</filelist>
			<filelist dir="${javalib.home}/slf4j-1.7.2">
				<file name="slf4j-nop-1.7.2.jar" />
				<file name="slf4j-api-1.7.2.jar" />
			</filelist>
			<filelist dir="${javalib.home}/jakarta-oro-2.0.8">
				<file name="jakarta-oro-2.0.8.jar" />
			</filelist>
		</copy>
	</target>


	<target name="remove" description="Remove application on servlet container">

		<tc:undeploy url="${manager.url}" username="${manager.username}" password="${manager.password}" path="${app.path}" />

	</target>
</project>
