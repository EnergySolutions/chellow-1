<?xml version="1.0"?>
<csv>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[43]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[POOL]]></value>
        <value><![CDATA[aahedc]]></value>
        <value><![CDATA[2000-11-26T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def hh(bill, supply_source):
    hh_data = supply_source.hh_data
    rate_script = contract.rateScript(HhStartDate(hh_data[0]['start-date']))

    bill['aahedc-gsp-kwh'] = sum(datum['gsp-kwh'] for datum in hh_data)
    bill['aahedc-msp-kwh'] = sum(datum['msp-kwh'] for datum in hh_data)
    bill['aahedc-rate'] = supply_source.comterp.get('rate')(rate_script, 'aahedc_gbp_per_gsp_kwh')
    bill['aahedc-gbp'] = bill['aahedc-gsp-kwh'] * bill['aahedc-rate']]]></value>
        <value><![CDATA[def aahedc_gbp_per_gsp_kwh():
    return 0.00016456]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[aahedc]]></value>
        <value><![CDATA[107]]></value>
        <value><![CDATA[2010-04-01T00:00Z]]></value>
        <value><![CDATA[def aahedc_gbp_per_gsp_kwh():
    return 0.00016265]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[57]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[bill-parser-bgb.edi]]></value>
        <value><![CDATA[2010-05-25T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[from net.sf.chellow.billing import BillParser, RawBill, NonCoreContract
from net.sf.chellow.physical import ReadType, HhStartDate, Units, RawRegisterRead
from org.python.util import PythonInterpreter
from net.sf.chellow.monad import Hiber, UserException
from java.math import BigDecimal


read_type_map = {'00': ReadType.TYPE_ROUTINE, '01': ReadType.TYPE_ESTIMATE, '02': ReadType.TYPE_ESTIMATE, '03': ReadType.TYPE_ROUTINE, '04': ReadType.TYPE_CUSTOMER, '05': ReadType.TYPE_ROUTINE, '06': ReadType.TYPE_ROUTINE, '07': ReadType.TYPE_INITIAL}

bill_type_map = {"A": "AMENDED", "F": "FINAL", "N": "NORMAL", "I": "INTEREST", "R": "RECONCILIATION", "P": "PREPAID", "O": "INFORMATION", "W": "WITHDRAWAL"}


class Parser(BillParser):
    def __init__(self, reader):
        computer = NonCoreContract.getNonCoreContract('computer')
        comterp = PythonInterpreter()
        comterp.exec(computer.getChargeScript())
        self.parser = comterp.get('get_edi_parser')(reader)
        self.debug_str = ''


    def getRawBills(self):
        raw_bills = []
        Hiber.flush();
        code = self.parser.next_segment()
        while code != None:
            if code == "CLO":
                cloc = self.parser.elements[0]
                account_reference = cloc[1]
            elif code == "BCD":
                ivdt = self.parser.elements[0]
                invn = self.parser.elements[2]
                btcd = self.parser.elements[5]
                    
                invoice_number = invn[0]
                bill_type = bill_type_map[btcd[0]]
                issue_date = self.parser.to_date(ivdt[0]).getDate()
            elif code == "MHD":
                type = self.parser.elements[1]
                message_type = type[0]
                if message_type == "UTLBIL":
                    issue_date = None
                    start_date = None
                    finish_date = None
                    account_reference = None
                    invoice_number = None
                    net = BigDecimal(0)
                    vat = BigDecimal(0)
                    reads = []
                    bill_type = None
                    mpan_strings = []
            elif code == "CCD":
                ccde = self.parser.elements[1]
                consumption_charge_indicator = ccde[0]
                charge_type = ccde[2]
                if consumption_charge_indicator != "5" and charge_type in ["7", "8", "9"]:
                    previous_read_date = self.parser.to_date(self.parser.elements[7][0])
                if HhStartDate.isAfter(start_date, previous_read_date):
                    start_date = previous_read_date
                register_finish_date = self.parser.to_date(self.parser.elements[6][0])
                if finish_date is None or finish_date.before(register_finish_date):
                    finish_date = register_finish_date
                if charge_type == "7":
                    tmod = self.parser.elements[3]
                    mtnr = self.parser.elements[4]
                    mloc = self.parser.elements[5]
                    prrd = self.parser.elements[9]
                    adjf = self.parser.elements[12]
                    present_read_type = read_type_map[prrd[1]]
                    previous_read_type = read_type_map[prrd[3]]
                    coefficient = BigDecimal(adjf[1]).divide(BigDecimal(100000))
                    present_read_value = BigDecimal(prrd[0]).divide(BigDecimal(1000))
                    previous_read_value = BigDecimal(prrd[2]).divide(BigDecimal(1000))
                    meter_serial_number = mtnr[0]
                    tpr = self.parser.to_int(tmod[0])
                    reads.append({'meter-serial-number': meter_serial_number, 'mpan': mloc[0], 'coefficient': coefficient, 'units': Units.KWH, 'tpr': tpr, 'previous-date': previous_read_date, 'previous-value': previous_read_value, 'previous-type': ReadType.getReadType(previous_read_type), 'present-date': register_finish_date, 'present-value': present_read_value, 'present-type': ReadType.getReadType(present_read_type)})
            elif code == "MTR":
                if message_type == "UTLBIL":
                    register_reads = []
                    for read in reads:
                        #self.debug_str += "  " + str(read['previous-type'])
                        register_reads.append(RawRegisterRead(read['meter-serial-number'], read['mpan'], read['coefficient'], read['units'], read['tpr'], read['previous-date'], read['previous-value'], read['previous-type'], read['present-date'], read['present-value'], read['present-type']))

                    raw_bills.append(RawBill(bill_type, account_reference, mpan_strings, invoice_number, issue_date, start_date, finish_date, BigDecimal(0), net, vat, '', register_reads))
            elif code == "MAN":
                madn = self.parser.elements[2]
                pc_code = "0" + madn[3]
                mtc_code = madn[4]
                llfc_code = madn[5]

                mpan_strings.append(pc_code + " " + mtc_code + " " + llfc_code + " " + madn[0] + " " + madn[1] + madn[2])
            elif code == "VAT":
                uvla = self.parser.elements[5]
                net = self.parser.to_big_decimal(uvla)
                uvtt = self.parser.elements[6]
                vat = self.parser.to_big_decimal(uvtt)
            code = self.parser.next_segment()
        self.parser.close();
        Hiber.flush();
        return raw_bills

    def getProgress(self):
        return "Reached line " + str(self.parser.lreader.getLineNumber()) + " of first passs. " + self.debug_str]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[59]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[bill-parser-csv]]></value>
        <value><![CDATA[2010-05-26T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[from net.sf.chellow.billing import BillParser, RawBill
from java.text import SimpleDateFormat
from java.util import Locale, TimeZone
from com.Ostermiller.util import CSVParser
from net.sf.chellow.physical import ReadType, Units, HhStartDate, RawRegisterRead
from java.math import BigDecimal
from net.sf.chellow.monad.types import MonadDate
from net.sf.chellow.monad import HttpException, UserException
from java.lang import NumberFormatException
from java.io import IOException


class Parser(BillParser):
    def __init__(self, reader):
        date_format = SimpleDateFormat("yyyy'-'MM'-'dd", Locale.UK)
        date_format.setTimeZone(TimeZone.getTimeZone("GMT"));

        self.shredder = CSVParser(reader);
        self.shredder.setCommentStart("#;!");
        self.shredder.setEscapes("nrtf", "\n\r\t\f");
        self.debug_str = ''


    def getRawBills(self):
        raw_bills = []
        values = self.shredder.getLine()
        while values != None:
            if len(values) < 7:
                raise UserException("Problem at line number " + self.shredder.getLastLineNumber() + "; there aren't enough fields, there should be 7")
            reads = []
            for i in range(9, len(values), 11):
                reads.append(RawRegisterRead(values[i], values[i + 1], BigDecimal(values[i + 2]), Units.getUnits(values[i + 3]), Integer.parseInt(values[i + 4]), HhStartDate(values[i + 5]), BigDecimal(values[i + 6]), ReadType.getReadType(values[i + 7]), HhStartDate(values[i + 8]), BigDecimal(values[i + 9]), ReadType.getReadType(values[i + 10])))
            mpan_strings = values[2].split(",")
            raw_bills.append(RawBill(values[0], values[1], mpan_strings, values[3], MonadDate(values[4]).getDate(), HhStartDate(values[5]), HhStartDate(values[6]), BigDecimal(values[7]), BigDecimal(values[8]), reads))
            values = self.shredder.getLine()
        self.shredder.close()
        return raw_bills


    def getProgress(self):
        return "Reached line " + str(self.shredder.getLastLineNumber()) + " of first passs. " + self.debug_str]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[55]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[bill-parser-mm]]></value>
        <value><![CDATA[2010-05-25T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[from net.sf.chellow.billing import BillParser, RawBill
from java.io import LineNumberReader, IOException
from java.text import SimpleDateFormat, ParseException
from java.util import TimeZone, Locale
from net.sf.chellow.monad import Hiber, UserException
from java.math import BigDecimal
from net.sf.chellow.physical import HhStartDate


class Parser(BillParser):
    def __init__(self, reader):
        self.lreader = LineNumberReader(reader)
        self.date_format = SimpleDateFormat("yyyyMMdd", Locale.UK)
        self.date_format.setTimeZone(TimeZone.getTimeZone("GMT"))


    def getRawBills(self):
        Hiber.flush()
        raw_bills = []
        try:
            line = self.lreader.readLine()
            while line != None:
                record_type = line[62:66]
                if record_type == "0100":
                    account_reference = line[33:41]
                    invoice_number = line[41:46]
                    start_date = None
                    finish_date = None
                    net = BigDecimal(0)
                    vat = BigDecimal(0)
                    mpan_strings = []
                elif record_type == "1460":
                    net = net.add(BigDecimal(line[67:79]).divide(BigDecimal(100)))
                    vat = vat.add(BigDecimal(line[85:97]).divide(BigDecimal(100)))
                elif record_type == "0461":
                    mpan_str = line[148:156] + line[135:148]
                    if mpan_str not in mpan_strings:
                        mpan_strings.append(mpan_str)
                elif record_type == "0101":
                    start_date = self.parse_date(line[66:74])
                    finish_date = self.parse_date(line[74:82])
                elif record_type == "1500":
                    raw_bills.append(RawBill("NORMAL", account_reference, mpan_strings, invoice_number, start_date.getDate(), start_date, finish_date, BigDecimal(0), net, vat, '', None))
                line = self.lreader.readLine()
            self.lreader.close();
            Hiber.flush();
        except IOException, e:
            raise UserException("Can't read EDF Energy mm file.")

        return raw_bills;


    def parse_date(self, date_string):
        try:
            return HhStartDate(self.date_format.parse(date_string))
        except ParseException, e:
            raise UserException("Can't parse the date: '" + e.getMessage() + "'.")


    def getProgress(self):
        return "Reached line " + str(self.lreader.getLineNumber()) + " of first passs."]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[53]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[bill-parser-sse.edi]]></value>
        <value><![CDATA[2010-05-24T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[from java.io import LineNumberReader
from org.python.util import PythonInterpreter
from net.sf.chellow.physical import ReadType, HhStartDate, Units, RawRegisterRead
from net.sf.chellow.billing import NonCoreContract, BillParser, RawBill
from net.sf.chellow.monad import UserException, Hiber
from java.math import BigDecimal

read_type_map = {'00': ReadType.TYPE_ROUTINE, '02': ReadType.TYPE_ESTIMATE, '04': ReadType.TYPE_CUSTOMER, '09': ReadType.TYPE_ROUTINE}

bill_types = {"A": "AMENDED", "F": "FINAL", "N": "NORMAL", "I": "INTEREST", "R": "RECONCILIATION", "P": "PREPAID", "O": "INFORMATION", "W": "WITHDRAWAL"}

tmod_map = {'0001': 2, 'A153': 3, 'A154': 1, 'CMACU': 20, 'CMACUF': 20, 'URQ1': 2, 'URC1': 2, 'DQ22': 3, 'EQ32': 4, 'NQ32': 6, 'NQ22': 1, 'NIQ2': 1, 'NIE7': 1, 'NAC2': 1, 'NDC2': 3, 'NNC2': 1, 'DAE7': 3, 'MNC2': 20, 'DAC2': 3, 'DAQ2': 3, 'D7P2': 3, 'N7P2': 1, 'WDQ3': 6, 'EWQ3': 4, 'MDC1': 20, 'MAC2': 20, 'OEC2': 2, 'OPAC': 2, '10': 2, 'Z012': 2, '39': 3, '0039': 3, '40': 3, '0040': 3, '43': 3, '0043': 3, '0071': 4, '71': 4, '72': 4, '73': 11, '80': 4, '080A': 4, '84': 2, '92': 9, '93': 9, '148': 6, '148A': 6, '151': 2, '0151': 2, '0044': 3, '0208': 1, '160': 1, 'U393': 2, '0160': 1, '0183': 6, '183': 6, '184': 6, '184A': 6, '187': 4, '187A': 4, '206': 1, '0206': 1, '208': 1, '210': 1, '0210': 1, '210E': 2, '210J': 1, '212': 2, '221B': 1, '0221': 1, '0221B': 1, '239': 10, '240': 10, '244': 11, '248': 7, '249': 7, '251': 8, '252': 8, '276': 6, '0276': 6, '277': 4, '0277': 4, '1059': 3, '1060': 1, '1071': 3, '1072': 1, '1073': 6, '1074': 4, '1075': 1, '1076': 6, '1077': 4, '1078': 3, '1079': 1, '1088': 2, '1139': 3, '1140': 1, '1141': 3, '1142': 1, '1149': 3, '1150': 1, '1151': 3, '1152': 1, '1153': 3, '1154': 1, '0249': 7, '0252': 8, '0240': 10, '0244': 11, '0092': 9, '210A': 1, 'MDM1': 20, 'MDM3': 20, 'NIM3': 1, 'OTM3': 9, 'P1M3': 7, 'P2M3': 8, 'W1M3': 10, 'W2M3': 11, '0153': 2, 'WQ42': 6, 'NQ42': 1, 'EQ42': 4, 'WDQ4': 6, 'EWQ4': 4, 'NIQ4': 1, 'URQD': 2, 'OPE3': 2, 'SG1U': 2, 'N179': 1, 'D179': 3, 'O212': 2, 'URM1': 2, 'D244': 3, 'N244': 1, 'DM22': 3, 'NM22': 1, 'MM22': 20, '0184': 6, '0072': 4}

class Parser(BillParser):
    def __init__(self, reader):
        computer = NonCoreContract.getNonCoreContract('computer')
        comterp = PythonInterpreter()
        comterp.exec(computer.getChargeScript())
        self.parser = comterp.get('get_edi_parser')(reader)
        self.debug_str = ''

    def getRawBills(self):
        #self.debug_str += 'starting to get raw bills'
        raw_bills = []
        Hiber.flush()
        code = self.parser.next_segment()
        while code is not None:
            if code == "BCD":
                ivdt = self.parser.elements[0]
                issue_date = self.parser.to_date(ivdt[0])

                invn = self.parser.elements[2]
                invoice_number = invn[0]
                account_reference = 'SA' + invoice_number[:-4]

                btcd = self.parser.elements[5]
                bill_type_code = btcd[0]

                sumo = self.parser.elements[7]
                start_date = self.parser.to_date(sumo[0])
                finish_date = self.parser.to_date(sumo[1])

            elif code == "MHD":
                type = self.parser.elements[1]
                message_type = type[0]
                if message_type == "UTLBIL":
                    issue_date = None
                    start_date = None
                    finish_date = None
                    account_reference = None
                    invoice_number = None
                    net = BigDecimal(0)
                    vat = BigDecimal(0)
                    reads = []
                    bill_type_code = None
                    mpan_strings = []
            elif code == "CCD":
                ccde = self.parser.elements[1]
                consumption_charge_indicator = ccde[0]

                if consumption_charge_indicator in ["1", "2"]:
                    prdt = self.parser.elements[6]
                    pvdt = self.parser.elements[7]

                    present_read_date = self.parser.to_date(prdt[0])
                    previous_read_date = self.parser.to_date(pvdt[0])
               
                    tmod = self.parser.elements[3]
                    mtnr = self.parser.elements[4]
                    mloc = self.parser.elements[5]

                    mpan = mloc[0]
                    mpan = mpan[13:15] + ' ' + mpan[15:18] + ' ' + mpan[18:] + ' ' + mpan[:2] + ' ' + mpan[2:6] + ' ' + mpan[6:10] + ' ' + mpan[10:13]

                    prrd = self.parser.elements[9]
                    present_read_type = ReadType.getReadType(read_type_map[prrd[1]])
                    previous_read_type = ReadType.getReadType(read_type_map[prrd[3]])

                    adjf = self.parser.elements[12]
                    coefficient = BigDecimal(adjf[1]).divide(BigDecimal(100000))
                    present_reading_value = BigDecimal(prrd[0])
                    previous_reading_value = BigDecimal(prrd[2])
                    meter_serial_number = mtnr[0]
                    tpr = tmod_map[tmod[0]]

                    reads.append({'meter-serial-number': meter_serial_number, 'mpan': mpan, 'coefficient': coefficient, 'units': Units.KWH, 'tpr': tpr, 'previous-date': previous_read_date, 'previous-value': previous_reading_value, 'previous-type': previous_read_type, 'present-date': present_read_date, 'present-value': present_reading_value, 'present-type': present_read_type})
            elif code == "MTR":
                if message_type == "UTLBIL":
                    register_reads = []
                    for read in reads:
                        register_reads.append(RawRegisterRead(read['meter-serial-number'], read['mpan'], read['coefficient'], read['units'], read['tpr'], read['previous-date'], read['previous-value'], read['previous-type'], read['present-date'], read['present-value'], read['present-type']))
                    bill_type = bill_types[bill_type_code]
                    bill_raw = RawBill(bill_type, account_reference, mpan_strings, invoice_number, issue_date.getDate(), start_date, finish_date, BigDecimal(0), net, vat, '', register_reads)
                    raw_bills.append(bill_raw)
            elif code == "MAN":
                madn = self.parser.elements[2]
                pc_code = madn[3]
                mtc_code = madn[4]
                llfc_code = madn[5]

                mpan_strings.append(pc_code + " " + mtc_code + " " + llfc_code + " " + madn[0] + " " + madn[1] + madn[2])
            elif code == "VAT":
                uvla = self.parser.elements[5]
                net = net.add(self.parser.to_big_decimal(uvla).divide(BigDecimal('100')))
                uvtt = self.parser.elements[6]
                vat = vat.add(self.parser.to_big_decimal(uvtt).divide(BigDecimal('100')))
            code = self.parser.next_segment()
        self.parser.close()
        Hiber.flush()
        return raw_bills


    def getProgress(self):
        return "Reached line " + str(self.parser.lreader.getLineNumber()) + "." + self.debug_str]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[51]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[bsuos]]></value>
        <value><![CDATA[2009-03-01T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def hh(bill, supply_source, hh_data):
    rate_script = contract.rateScript(HhStartDate(hh_data[0]['start-date']))
    rates = supply_source.comterp.get('rate')(rate_script, 'rates')
    bill['bsuos-actual-gbp'] = sum(datum['gsp-kwh'] * rates.get(('%02d' % datum['utc-day']) + ' ' + ('%02d' % datum['utc-hour']) + ':' + ('%02d' % datum['utc-minute']) + ' Z', 0) for datum in hh_data)]]></value>
        <value><![CDATA[def rates():
    return {
'2009-03-01 00:00 Z': 0.00034693,
'2009-03-01 00:30 Z': 0.0002985,
'2009-03-01 01:00 Z': 0.00041586,
'2009-03-01 01:30 Z': 0.00037479,
'2009-03-01 02:00 Z': 0.00039442,
'2009-03-01 02:30 Z': 0.00043975,
'2009-03-01 03:00 Z': 0.00031546,
'2009-03-01 03:30 Z': 0.00027268,
'2009-03-01 04:00 Z': 0.0000492,
'2009-03-01 04:30 Z': -0.00000818,
'2009-03-01 05:00 Z': 0.00004029,
'2009-03-01 05:30 Z': 0.00003839,
'2009-03-01 06:00 Z': 0.00022044,
'2009-03-01 06:30 Z': 0.0000284,
'2009-03-01 07:00 Z': -0.00012585,
'2009-03-01 07:30 Z': -0.00017828,
'2009-03-01 08:00 Z': 0.00007832,
'2009-03-01 08:30 Z': 0.00019293,
'2009-03-01 09:00 Z': 0.00025774,
'2009-03-01 09:30 Z': 0.00039723,
'2009-03-01 10:00 Z': 0.00051984,
'2009-03-01 10:30 Z': 0.00095707,
'2009-03-01 11:00 Z': 0.00097757,
'2009-03-01 11:30 Z': 0.00111011,
'2009-03-01 12:00 Z': 0.00111025,
'2009-03-01 12:30 Z': 0.00100647,
'2009-03-01 13:00 Z': 0.00093997,
'2009-03-01 13:30 Z': 0.00061276,
'2009-03-01 14:00 Z': 0.00053123,
'2009-03-01 14:30 Z': 0.00058279,
'2009-03-01 15:00 Z': 0.00066173,
'2009-03-01 15:30 Z': 0.00055573,
'2009-03-01 16:00 Z': 0.00060228,
'2009-03-01 16:30 Z': 0.0009243,
'2009-03-01 17:00 Z': 0.00127767,
'2009-03-01 17:30 Z': 0.00162232,
'2009-03-01 18:00 Z': 0.00284738,
'2009-03-01 18:30 Z': 0.00269766,
'2009-03-01 19:00 Z': 0.00253855,
'2009-03-01 19:30 Z': 0.00192591,
'2009-03-01 20:00 Z': 0.00181115,
'2009-03-01 20:30 Z': 0.00134907,
'2009-03-01 21:00 Z': 0.00132035,
'2009-03-01 21:30 Z': 0.00065228,
'2009-03-01 22:00 Z': 0.00046196,
'2009-03-01 22:30 Z': 0.00027318,
'2009-03-01 23:00 Z': 0.0003888,
'2009-03-01 23:30 Z': 0.00022805,
'2009-03-02 00:00 Z': 0.00048032,
'2009-03-02 00:30 Z': 0.00045543,
'2009-03-02 01:00 Z': 0.00040524,
'2009-03-02 01:30 Z': 0.00035299,
'2009-03-02 02:00 Z': 0.00026627,
'2009-03-02 02:30 Z': 0.00019838,
'2009-03-02 03:00 Z': 0.00004163,
'2009-03-02 03:30 Z': -0.00002122,
'2009-03-02 04:00 Z': -0.00012811,
'2009-03-02 04:30 Z': -0.0001636,
'2009-03-02 05:00 Z': 0.0000961,
'2009-03-02 05:30 Z': 0.0000448,
'2009-03-02 06:00 Z': 0.00071559,
'2009-03-02 06:30 Z': 0.00081029,
'2009-03-02 07:00 Z': 0.00095684,
'2009-03-02 07:30 Z': 0.00099777,
'2009-03-02 08:00 Z': 0.00087697,
'2009-03-02 08:30 Z': 0.00078669,
'2009-03-02 09:00 Z': 0.00057182,
'2009-03-02 09:30 Z': 0.00055799,
'2009-03-02 10:00 Z': 0.00049965,
'2009-03-02 10:30 Z': 0.00045127,
'2009-03-02 11:00 Z': 0.00035551,
'2009-03-02 11:30 Z': 0.0002932,
'2009-03-02 12:00 Z': 0.00035429,
'2009-03-02 12:30 Z': 0.00035671,
'2009-03-02 13:00 Z': 0.00045061,
'2009-03-02 13:30 Z': 0.00014213,
'2009-03-02 14:00 Z': 0.00015015,
'2009-03-02 14:30 Z': 0.00009066,
'2009-03-02 15:00 Z': -0.00003849,
'2009-03-02 15:30 Z': 0.00012454,
'2009-03-02 16:00 Z': 0.00030333,
'2009-03-02 16:30 Z': 0.00084898,
'2009-03-02 17:00 Z': 0.00058525,
'2009-03-02 17:30 Z': 0.00048488,
'2009-03-02 18:00 Z': 0.00190697,
'2009-03-02 18:30 Z': 0.00163101,
'2009-03-02 19:00 Z': 0.00097441,
'2009-03-02 19:30 Z': 0.00126409,
'2009-03-02 20:00 Z': 0.00086008,
'2009-03-02 20:30 Z': 0.00058117,
'2009-03-02 21:00 Z': 0.00055949,
'2009-03-02 21:30 Z': 0.00021744,
'2009-03-02 22:00 Z': 0.00028648,
'2009-03-02 22:30 Z': 0.00023426,
'2009-03-02 23:00 Z': 0.00027804,
'2009-03-02 23:30 Z': 0.00034014,
'2009-03-03 00:00 Z': 0.00095608,
'2009-03-03 00:30 Z': 0.00092966,
'2009-03-03 01:00 Z': 0.00086897,
'2009-03-03 01:30 Z': 0.00084249,
'2009-03-03 02:00 Z': 0.00073808,
'2009-03-03 02:30 Z': 0.00076625,
'2009-03-03 03:00 Z': 0.00079714,
'2009-03-03 03:30 Z': 0.00069684,
'2009-03-03 04:00 Z': 0.00063528,
'2009-03-03 04:30 Z': 0.00058117,
'2009-03-03 05:00 Z': 0.00088216,
'2009-03-03 05:30 Z': 0.00121664,
'2009-03-03 06:00 Z': 0.00141188,
'2009-03-03 06:30 Z': 0.00144952,
'2009-03-03 07:00 Z': 0.00151672,
'2009-03-03 07:30 Z': 0.00146472,
'2009-03-03 08:00 Z': 0.00149133,
'2009-03-03 08:30 Z': 0.00139783,
'2009-03-03 09:00 Z': 0.00175898,
'2009-03-03 09:30 Z': 0.00187679,
'2009-03-03 10:00 Z': 0.00172082,
'2009-03-03 10:30 Z': 0.00165472,
'2009-03-03 11:00 Z': 0.00229543,
'2009-03-03 11:30 Z': 0.00292945,
'2009-03-03 12:00 Z': 0.00368644,
'2009-03-03 12:30 Z': 0.00292128,
'2009-03-03 13:00 Z': 0.00292727,
'2009-03-03 13:30 Z': 0.00270342,
'2009-03-03 14:00 Z': 0.00307885,
'2009-03-03 14:30 Z': 0.0024037,
'2009-03-03 15:00 Z': 0.00172794,
'2009-03-03 15:30 Z': 0.00240131,
'2009-03-03 16:00 Z': 0.00220331,
'2009-03-03 16:30 Z': 0.00225937,
'2009-03-03 17:00 Z': 0.00258424,
'2009-03-03 17:30 Z': 0.00275113,
'2009-03-03 18:00 Z': 0.00297279,
'2009-03-03 18:30 Z': 0.00253152,
'2009-03-03 19:00 Z': 0.00228223,
'2009-03-03 19:30 Z': 0.00184327,
'2009-03-03 20:00 Z': 0.00196106,
'2009-03-03 20:30 Z': 0.00124587,
'2009-03-03 21:00 Z': 0.00131834,
'2009-03-03 21:30 Z': 0.00114771,
'2009-03-03 22:00 Z': 0.00115172,
'2009-03-03 22:30 Z': 0.00133405,
'2009-03-03 23:00 Z': 0.00158031,
'2009-03-03 23:30 Z': 0.0011363,
'2009-03-04 00:00 Z': 0.0011367,
'2009-03-04 00:30 Z': 0.0010576,
'2009-03-04 01:00 Z': 0.00096208,
'2009-03-04 01:30 Z': 0.00082279,
'2009-03-04 02:00 Z': 0.0007597,
'2009-03-04 02:30 Z': 0.00091177,
'2009-03-04 03:00 Z': 0.00078887,
'2009-03-04 03:30 Z': 0.00062941,
'2009-03-04 04:00 Z': 0.00065372,
'2009-03-04 04:30 Z': 0.0006918,
'2009-03-04 05:00 Z': 0.00086303,
'2009-03-04 05:30 Z': 0.0010744,
'2009-03-04 06:00 Z': 0.00142647,
'2009-03-04 06:30 Z': 0.00115949,
'2009-03-04 07:00 Z': 0.00213769,
'2009-03-04 07:30 Z': 0.00254807,
'2009-03-04 08:00 Z': 0.00235021,
'2009-03-04 08:30 Z': 0.00226875,
'2009-03-04 09:00 Z': 0.00214779,
'2009-03-04 09:30 Z': 0.00168983,
'2009-03-04 10:00 Z': 0.00137685,
'2009-03-04 10:30 Z': 0.00089952,
'2009-03-04 11:00 Z': 0.00100101,
'2009-03-04 11:30 Z': 0.00106034,
'2009-03-04 12:00 Z': 0.00118514,
'2009-03-04 12:30 Z': 0.00107802,
'2009-03-04 13:00 Z': 0.00122829,
'2009-03-04 13:30 Z': 0.00079785,
'2009-03-04 14:00 Z': 0.00080071,
'2009-03-04 14:30 Z': 0.00076602,
'2009-03-04 15:00 Z': 0.00092259,
'2009-03-04 15:30 Z': 0.00076514,
'2009-03-04 16:00 Z': 0.00070193,
'2009-03-04 16:30 Z': 0.00092913,
'2009-03-04 17:00 Z': 0.00100262,
'2009-03-04 17:30 Z': 0.0009238,
'2009-03-04 18:00 Z': 0.00211488,
'2009-03-04 18:30 Z': 0.00220332,
'2009-03-04 19:00 Z': 0.00185126,
'2009-03-04 19:30 Z': 0.0019003,
'2009-03-04 20:00 Z': 0.00156671,
'2009-03-04 20:30 Z': 0.00108282,
'2009-03-04 21:00 Z': 0.00188134,
'2009-03-04 21:30 Z': 0.00158195,
'2009-03-04 22:00 Z': 0.00150644,
'2009-03-04 22:30 Z': 0.00111719,
'2009-03-04 23:00 Z': 0.00085549,
'2009-03-04 23:30 Z': 0.00103086,
'2009-03-05 00:00 Z': 0.00156133,
'2009-03-05 00:30 Z': 0.00174104,
'2009-03-05 01:00 Z': 0.00139589,
'2009-03-05 01:30 Z': 0.00115699,
'2009-03-05 02:00 Z': 0.00073737,
'2009-03-05 02:30 Z': 0.00068937,
'2009-03-05 03:00 Z': 0.00059083,
'2009-03-05 03:30 Z': 0.00057314,
'2009-03-05 04:00 Z': 0.0006958,
'2009-03-05 04:30 Z': 0.00053244,
'2009-03-05 05:00 Z': 0.00075331,
'2009-03-05 05:30 Z': 0.00103951,
'2009-03-05 06:00 Z': 0.00131248,
'2009-03-05 06:30 Z': 0.00123155,
'2009-03-05 07:00 Z': 0.00136489,
'2009-03-05 07:30 Z': 0.00134692,
'2009-03-05 08:00 Z': 0.00120559,
'2009-03-05 08:30 Z': 0.00098005,
'2009-03-05 09:00 Z': 0.00099919,
'2009-03-05 09:30 Z': 0.00116735,
'2009-03-05 10:00 Z': 0.00085575,
'2009-03-05 10:30 Z': 0.00086925,
'2009-03-05 11:00 Z': 0.00128861,
'2009-03-05 11:30 Z': 0.00104102,
'2009-03-05 12:00 Z': 0.0009954,
'2009-03-05 12:30 Z': 0.00094335,
'2009-03-05 13:00 Z': 0.00083763,
'2009-03-05 13:30 Z': 0.00064693,
'2009-03-05 14:00 Z': 0.00066128,
'2009-03-05 14:30 Z': 0.00052671,
'2009-03-05 15:00 Z': 0.00042104,
'2009-03-05 15:30 Z': 0.00043901,
'2009-03-05 16:00 Z': 0.00051122,
'2009-03-05 16:30 Z': 0.00082713,
'2009-03-05 17:00 Z': 0.00084546,
'2009-03-05 17:30 Z': 0.00081474,
'2009-03-05 18:00 Z': 0.00132134,
'2009-03-05 18:30 Z': 0.00198214,
'2009-03-05 19:00 Z': 0.00149576,
'2009-03-05 19:30 Z': 0.00118003,
'2009-03-05 20:00 Z': 0.00153659,
'2009-03-05 20:30 Z': 0.0011175,
'2009-03-05 21:00 Z': 0.00104363,
'2009-03-05 21:30 Z': 0.00114181,
'2009-03-05 22:00 Z': 0.00129512,
'2009-03-05 22:30 Z': 0.00094678,
'2009-03-05 23:00 Z': 0.00086436,
'2009-03-05 23:30 Z': 0.00075229,
'2009-03-06 00:00 Z': 0.00079228,
'2009-03-06 00:30 Z': 0.00065151,
'2009-03-06 01:00 Z': 0.00059419,
'2009-03-06 01:30 Z': 0.00060167,
'2009-03-06 02:00 Z': 0.00057258,
'2009-03-06 02:30 Z': 0.00060252,
'2009-03-06 03:00 Z': 0.00053241,
'2009-03-06 03:30 Z': 0.00047001,
'2009-03-06 04:00 Z': 0.000338,
'2009-03-06 04:30 Z': 0.00036161,
'2009-03-06 05:00 Z': 0.00042755,
'2009-03-06 05:30 Z': 0.00058681,
'2009-03-06 06:00 Z': 0.00061551,
'2009-03-06 06:30 Z': 0.00070334,
'2009-03-06 07:00 Z': 0.00091426,
'2009-03-06 07:30 Z': 0.00071431,
'2009-03-06 08:00 Z': 0.00135817,
'2009-03-06 08:30 Z': 0.00080167,
'2009-03-06 09:00 Z': 0.0009816,
'2009-03-06 09:30 Z': 0.00083695,
'2009-03-06 10:00 Z': 0.00085701,
'2009-03-06 10:30 Z': 0.00076189,
'2009-03-06 11:00 Z': 0.00074589,
'2009-03-06 11:30 Z': 0.00068779,
'2009-03-06 12:00 Z': 0.00056715,
'2009-03-06 12:30 Z': 0.00052604,
'2009-03-06 13:00 Z': 0.00041808,
'2009-03-06 13:30 Z': 0.00024125,
'2009-03-06 14:00 Z': 0.00037133,
'2009-03-06 14:30 Z': 0.00036862,
'2009-03-06 15:00 Z': 0.0001155,
'2009-03-06 15:30 Z': 0.00024589,
'2009-03-06 16:00 Z': 0.00084342,
'2009-03-06 16:30 Z': 0.00123758,
'2009-03-06 17:00 Z': 0.00113317,
'2009-03-06 17:30 Z': 0.00110174,
'2009-03-06 18:00 Z': 0.00132412,
'2009-03-06 18:30 Z': 0.00158025,
'2009-03-06 19:00 Z': 0.00173383,
'2009-03-06 19:30 Z': 0.00147287,
'2009-03-06 20:00 Z': 0.00146835,
'2009-03-06 20:30 Z': 0.00096829,
'2009-03-06 21:00 Z': 0.00137591,
'2009-03-06 21:30 Z': 0.00096887,
'2009-03-06 22:00 Z': 0.00048043,
'2009-03-06 22:30 Z': 0.0003024,
'2009-03-06 23:00 Z': 0.00052519,
'2009-03-06 23:30 Z': 0.0009427,
'2009-03-07 00:00 Z': 0.00133379,
'2009-03-07 00:30 Z': 0.00121023,
'2009-03-07 01:00 Z': 0.0012487,
'2009-03-07 01:30 Z': 0.00093653,
'2009-03-07 02:00 Z': 0.00066373,
'2009-03-07 02:30 Z': 0.00042939,
'2009-03-07 03:00 Z': 0.00030975,
'2009-03-07 03:30 Z': 0.00022405,
'2009-03-07 04:00 Z': 0.00022988,
'2009-03-07 04:30 Z': 0.00025653,
'2009-03-07 05:00 Z': 0.00027126,
'2009-03-07 05:30 Z': 0.00031173,
'2009-03-07 06:00 Z': 0.00041117,
'2009-03-07 06:30 Z': 0.00025468,
'2009-03-07 07:00 Z': 0.0005052,
'2009-03-07 07:30 Z': 0.00062519,
'2009-03-07 08:00 Z': 0.00077108,
'2009-03-07 08:30 Z': 0.00088507,
'2009-03-07 09:00 Z': 0.00109118,
'2009-03-07 09:30 Z': 0.00121592,
'2009-03-07 10:00 Z': 0.00152841,
'2009-03-07 10:30 Z': 0.00149298,
'2009-03-07 11:00 Z': 0.00128722,
'2009-03-07 11:30 Z': 0.00109848,
'2009-03-07 12:00 Z': 0.00165455,
'2009-03-07 12:30 Z': 0.00132564,
'2009-03-07 13:00 Z': 0.00174818,
'2009-03-07 13:30 Z': 0.00133055,
'2009-03-07 14:00 Z': 0.00087239,
'2009-03-07 14:30 Z': 0.00063771,
'2009-03-07 15:00 Z': 0.00072159,
'2009-03-07 15:30 Z': 0.00085222,
'2009-03-07 16:00 Z': 0.00107743,
'2009-03-07 16:30 Z': 0.00143513,
'2009-03-07 17:00 Z': 0.00192176,
'2009-03-07 17:30 Z': 0.00216748,
'2009-03-07 18:00 Z': 0.00302912,
'2009-03-07 18:30 Z': 0.00230271,
'2009-03-07 19:00 Z': 0.00187109,
'2009-03-07 19:30 Z': 0.00149506,
'2009-03-07 20:00 Z': 0.00171395,
'2009-03-07 20:30 Z': 0.00099046,
'2009-03-07 21:00 Z': 0.00064409,
'2009-03-07 21:30 Z': 0.00015639,
'2009-03-07 22:00 Z': -0.00019191,
'2009-03-07 22:30 Z': 0.00062689,
'2009-03-07 23:00 Z': 0.00040182,
'2009-03-07 23:30 Z': 0.00019561,
'2009-03-08 00:00 Z': 0.0005275,
'2009-03-08 00:30 Z': 0.00049644,
'2009-03-08 01:00 Z': 0.00056885,
'2009-03-08 01:30 Z': 0.00059289,
'2009-03-08 02:00 Z': 0.00071237,
'2009-03-08 02:30 Z': 0.00068141,
'2009-03-08 03:00 Z': 0.00063822,
'2009-03-08 03:30 Z': 0.0005701,
'2009-03-08 04:00 Z': 0.00050348,
'2009-03-08 04:30 Z': 0.0005219,
'2009-03-08 05:00 Z': 0.00058346,
'2009-03-08 05:30 Z': 0.00083862,
'2009-03-08 06:00 Z': 0.00104955,
'2009-03-08 06:30 Z': 0.00084272,
'2009-03-08 07:00 Z': 0.00075986,
'2009-03-08 07:30 Z': 0.0006151,
'2009-03-08 08:00 Z': 0.00097047,
'2009-03-08 08:30 Z': 0.00118423,
'2009-03-08 09:00 Z': 0.0010929,
'2009-03-08 09:30 Z': 0.00103131,
'2009-03-08 10:00 Z': 0.00133548,
'2009-03-08 10:30 Z': 0.00158962,
'2009-03-08 11:00 Z': 0.00136007,
'2009-03-08 11:30 Z': 0.00129499,
'2009-03-08 12:00 Z': 0.00216464,
'2009-03-08 12:30 Z': 0.00218766,
'2009-03-08 13:00 Z': 0.00183886,
'2009-03-08 13:30 Z': 0.0014832,
'2009-03-08 14:00 Z': 0.00156155,
'2009-03-08 14:30 Z': 0.00147119,
'2009-03-08 15:00 Z': 0.00130469,
'2009-03-08 15:30 Z': 0.00114305,
'2009-03-08 16:00 Z': 0.0013689,
'2009-03-08 16:30 Z': 0.00159816,
'2009-03-08 17:00 Z': 0.00166183,
'2009-03-08 17:30 Z': 0.00218032,
'2009-03-08 18:00 Z': 0.00317076,
'2009-03-08 18:30 Z': 0.00416526,
'2009-03-08 19:00 Z': 0.00385906,
'2009-03-08 19:30 Z': 0.0030158,
'2009-03-08 20:00 Z': 0.00217702,
'2009-03-08 20:30 Z': 0.00208541,
'2009-03-08 21:00 Z': 0.00186192,
'2009-03-08 21:30 Z': 0.00113009,
'2009-03-08 22:00 Z': 0.00096962,
'2009-03-08 22:30 Z': 0.0005188,
'2009-03-08 23:00 Z': 0.00089193,
'2009-03-08 23:30 Z': 0.00075006,
'2009-03-09 00:00 Z': 0.00081385,
'2009-03-09 00:30 Z': 0.00093657,
'2009-03-09 01:00 Z': 0.00070522,
'2009-03-09 01:30 Z': 0.00064186,
'2009-03-09 02:00 Z': 0.00057773,
'2009-03-09 02:30 Z': 0.00060522,
'2009-03-09 03:00 Z': 0.00097474,
'2009-03-09 03:30 Z': 0.00080509,
'2009-03-09 04:00 Z': 0.00078039,
'2009-03-09 04:30 Z': 0.00056255,
'2009-03-09 05:00 Z': 0.00115748,
'2009-03-09 05:30 Z': 0.00074499,
'2009-03-09 06:00 Z': 0.00118443,
'2009-03-09 06:30 Z': 0.00133384,
'2009-03-09 07:00 Z': 0.00259978,
'2009-03-09 07:30 Z': 0.00286723,
'2009-03-09 08:00 Z': 0.00212719,
'2009-03-09 08:30 Z': 0.0012636,
'2009-03-09 09:00 Z': 0.00189826,
'2009-03-09 09:30 Z': 0.00241462,
'2009-03-09 10:00 Z': 0.00239093,
'2009-03-09 10:30 Z': 0.00220053,
'2009-03-09 11:00 Z': 0.00134306,
'2009-03-09 11:30 Z': 0.00107432,
'2009-03-09 12:00 Z': 0.0011504,
'2009-03-09 12:30 Z': 0.00102231,
'2009-03-09 13:00 Z': 0.00113264,
'2009-03-09 13:30 Z': 0.00102991,
'2009-03-09 14:00 Z': 0.00094582,
'2009-03-09 14:30 Z': 0.00087025,
'2009-03-09 15:00 Z': 0.00075082,
'2009-03-09 15:30 Z': 0.00079313,
'2009-03-09 16:00 Z': 0.00088941,
'2009-03-09 16:30 Z': 0.00118978,
'2009-03-09 17:00 Z': 0.00112493,
'2009-03-09 17:30 Z': 0.00139682,
'2009-03-09 18:00 Z': 0.00179774,
'2009-03-09 18:30 Z': 0.00192668,
'2009-03-09 19:00 Z': 0.00217109,
'2009-03-09 19:30 Z': 0.00203918,
'2009-03-09 20:00 Z': 0.00148396,
'2009-03-09 20:30 Z': 0.00101069,
'2009-03-09 21:00 Z': 0.00120365,
'2009-03-09 21:30 Z': 0.0014387,
'2009-03-09 22:00 Z': 0.00094053,
'2009-03-09 22:30 Z': 0.00072829,
'2009-03-09 23:00 Z': 0.00084547,
'2009-03-09 23:30 Z': 0.00099294,
'2009-03-10 00:00 Z': 0.00120143,
'2009-03-10 00:30 Z': 0.0012181,
'2009-03-10 01:00 Z': 0.00147485,
'2009-03-10 01:30 Z': 0.00100828,
'2009-03-10 02:00 Z': 0.00073662,
'2009-03-10 02:30 Z': 0.00089059,
'2009-03-10 03:00 Z': 0.00101653,
'2009-03-10 03:30 Z': 0.00078911,
'2009-03-10 04:00 Z': 0.00072996,
'2009-03-10 04:30 Z': 0.00059967,
'2009-03-10 05:00 Z': 0.00056747,
'2009-03-10 05:30 Z': 0.00071855,
'2009-03-10 06:00 Z': 0.00119812,
'2009-03-10 06:30 Z': 0.00061368,
'2009-03-10 07:00 Z': 0.00177781,
'2009-03-10 07:30 Z': 0.00133619,
'2009-03-10 08:00 Z': 0.00129538,
'2009-03-10 08:30 Z': 0.00102243,
'2009-03-10 09:00 Z': 0.00079922,
'2009-03-10 09:30 Z': 0.00068019,
'2009-03-10 10:00 Z': 0.00067255,
'2009-03-10 10:30 Z': 0.00104454,
'2009-03-10 11:00 Z': 0.00116323,
'2009-03-10 11:30 Z': 0.00107638,
'2009-03-10 12:00 Z': 0.00093794,
'2009-03-10 12:30 Z': 0.00082438,
'2009-03-10 13:00 Z': 0.00113453,
'2009-03-10 13:30 Z': 0.00116894,
'2009-03-10 14:00 Z': 0.00113927,
'2009-03-10 14:30 Z': 0.00087416,
'2009-03-10 15:00 Z': 0.00039524,
'2009-03-10 15:30 Z': 0.00045725,
'2009-03-10 16:00 Z': 0.00089509,
'2009-03-10 16:30 Z': 0.00120115,
'2009-03-10 17:00 Z': 0.00113953,
'2009-03-10 17:30 Z': 0.00128677,
'2009-03-10 18:00 Z': 0.00178417,
'2009-03-10 18:30 Z': 0.00221525,
'2009-03-10 19:00 Z': 0.00248792,
'2009-03-10 19:30 Z': 0.00223937,
'2009-03-10 20:00 Z': 0.00164773,
'2009-03-10 20:30 Z': 0.00145716,
'2009-03-10 21:00 Z': 0.00100812,
'2009-03-10 21:30 Z': 0.00080296,
'2009-03-10 22:00 Z': 0.00091787,
'2009-03-10 22:30 Z': 0.00109427,
'2009-03-10 23:00 Z': 0.00090452,
'2009-03-10 23:30 Z': 0.00068987,
'2009-03-11 00:00 Z': 0.00184614,
'2009-03-11 00:30 Z': 0.00188072,
'2009-03-11 01:00 Z': 0.00183509,
'2009-03-11 01:30 Z': 0.00167857,
'2009-03-11 02:00 Z': 0.00153735,
'2009-03-11 02:30 Z': 0.00140778,
'2009-03-11 03:00 Z': 0.00165125,
'2009-03-11 03:30 Z': 0.00151927,
'2009-03-11 04:00 Z': 0.0014122,
'2009-03-11 04:30 Z': 0.00149396,
'2009-03-11 05:00 Z': 0.00185175,
'2009-03-11 05:30 Z': 0.00182335,
'2009-03-11 06:00 Z': 0.00240663,
'2009-03-11 06:30 Z': 0.00197871,
'2009-03-11 07:00 Z': 0.00196518,
'2009-03-11 07:30 Z': 0.00177991,
'2009-03-11 08:00 Z': 0.00189191,
'2009-03-11 08:30 Z': 0.00178156,
'2009-03-11 09:00 Z': 0.00224382,
'2009-03-11 09:30 Z': 0.00199087,
'2009-03-11 10:00 Z': 0.00185817,
'2009-03-11 10:30 Z': 0.00182262,
'2009-03-11 11:00 Z': 0.00168363,
'2009-03-11 11:30 Z': 0.00173049,
'2009-03-11 12:00 Z': 0.00191833,
'2009-03-11 12:30 Z': 0.00176251,
'2009-03-11 13:00 Z': 0.00176497,
'2009-03-11 13:30 Z': 0.00158575,
'2009-03-11 14:00 Z': 0.00153028,
'2009-03-11 14:30 Z': 0.00149167,
'2009-03-11 15:00 Z': 0.00141419,
'2009-03-11 15:30 Z': 0.00153271,
'2009-03-11 16:00 Z': 0.00167489,
'2009-03-11 16:30 Z': 0.00186796,
'2009-03-11 17:00 Z': 0.00228353,
'2009-03-11 17:30 Z': 0.00231573,
'2009-03-11 18:00 Z': 0.00271198,
'2009-03-11 18:30 Z': 0.00315469,
'2009-03-11 19:00 Z': 0.0026988,
'2009-03-11 19:30 Z': 0.00258607,
'2009-03-11 20:00 Z': 0.00211979,
'2009-03-11 20:30 Z': 0.0017975,
'2009-03-11 21:00 Z': 0.00192039,
'2009-03-11 21:30 Z': 0.00156484,
'2009-03-11 22:00 Z': 0.00201707,
'2009-03-11 22:30 Z': 0.00190595,
'2009-03-11 23:00 Z': 0.00205816,
'2009-03-11 23:30 Z': 0.0020772,
'2009-03-12 00:00 Z': 0.00096262,
'2009-03-12 00:30 Z': 0.00088204,
'2009-03-12 01:00 Z': 0.00089085,
'2009-03-12 01:30 Z': 0.00095118,
'2009-03-12 02:00 Z': 0.00086193,
'2009-03-12 02:30 Z': 0.00114035,
'2009-03-12 03:00 Z': 0.00116724,
'2009-03-12 03:30 Z': 0.00077657,
'2009-03-12 04:00 Z': 0.00069344,
'2009-03-12 04:30 Z': 0.00072369,
'2009-03-12 05:00 Z': 0.0011497,
'2009-03-12 05:30 Z': 0.00145469,
'2009-03-12 06:00 Z': 0.00133493,
'2009-03-12 06:30 Z': 0.0008823,
'2009-03-12 07:00 Z': 0.00122034,
'2009-03-12 07:30 Z': 0.00096819,
'2009-03-12 08:00 Z': 0.00104896,
'2009-03-12 08:30 Z': 0.00116502,
'2009-03-12 09:00 Z': 0.00154541,
'2009-03-12 09:30 Z': 0.00114694,
'2009-03-12 10:00 Z': 0.0010955,
'2009-03-12 10:30 Z': 0.00112436,
'2009-03-12 11:00 Z': 0.0011314,
'2009-03-12 11:30 Z': 0.00112702,
'2009-03-12 12:00 Z': 0.00117702,
'2009-03-12 12:30 Z': 0.00119262,
'2009-03-12 13:00 Z': 0.00112451,
'2009-03-12 13:30 Z': 0.00076369,
'2009-03-12 14:00 Z': 0.0007534,
'2009-03-12 14:30 Z': 0.00081418,
'2009-03-12 15:00 Z': 0.00067088,
'2009-03-12 15:30 Z': 0.00101883,
'2009-03-12 16:00 Z': 0.00100443,
'2009-03-12 16:30 Z': 0.0014219,
'2009-03-12 17:00 Z': 0.0015879,
'2009-03-12 17:30 Z': 0.00176771,
'2009-03-12 18:00 Z': 0.00264584,
'2009-03-12 18:30 Z': 0.00350284,
'2009-03-12 19:00 Z': 0.00275115,
'2009-03-12 19:30 Z': 0.00218934,
'2009-03-12 20:00 Z': 0.00234174,
'2009-03-12 20:30 Z': 0.00144691,
'2009-03-12 21:00 Z': 0.00220039,
'2009-03-12 21:30 Z': 0.00123323,
'2009-03-12 22:00 Z': 0.00134633,
'2009-03-12 22:30 Z': 0.00093396,
'2009-03-12 23:00 Z': 0.00100081,
'2009-03-12 23:30 Z': 0.00092196,
'2009-03-13 00:00 Z': 0.001678,
'2009-03-13 00:30 Z': 0.00188149,
'2009-03-13 01:00 Z': 0.00187317,
'2009-03-13 01:30 Z': 0.00159938,
'2009-03-13 02:00 Z': 0.00134389,
'2009-03-13 02:30 Z': 0.00143548,
'2009-03-13 03:00 Z': 0.00126982,
'2009-03-13 03:30 Z': 0.00095326,
'2009-03-13 04:00 Z': 0.00134746,
'2009-03-13 04:30 Z': 0.00172875,
'2009-03-13 05:00 Z': 0.00232143,
'2009-03-13 05:30 Z': 0.00309573,
'2009-03-13 06:00 Z': 0.00312224,
'2009-03-13 06:30 Z': 0.00270524,
'2009-03-13 07:00 Z': 0.00255749,
'2009-03-13 07:30 Z': 0.00298445,
'2009-03-13 08:00 Z': 0.00345312,
'2009-03-13 08:30 Z': 0.00300233,
'2009-03-13 09:00 Z': 0.00269991,
'2009-03-13 09:30 Z': 0.00202747,
'2009-03-13 10:00 Z': 0.00186592,
'2009-03-13 10:30 Z': 0.00188059,
'2009-03-13 11:00 Z': 0.00184612,
'2009-03-13 11:30 Z': 0.00157172,
'2009-03-13 12:00 Z': 0.00157412,
'2009-03-13 12:30 Z': 0.00164051,
'2009-03-13 13:00 Z': 0.00203571,
'2009-03-13 13:30 Z': 0.00155445,
'2009-03-13 14:00 Z': 0.00143699,
'2009-03-13 14:30 Z': 0.00157154,
'2009-03-13 15:00 Z': 0.00134618,
'2009-03-13 15:30 Z': 0.001344,
'2009-03-13 16:00 Z': 0.00185244,
'2009-03-13 16:30 Z': 0.00216429,
'2009-03-13 17:00 Z': 0.00219359,
'2009-03-13 17:30 Z': 0.00216123,
'2009-03-13 18:00 Z': 0.00230603,
'2009-03-13 18:30 Z': 0.00224157,
'2009-03-13 19:00 Z': 0.0017088,
'2009-03-13 19:30 Z': 0.00174054,
'2009-03-13 20:00 Z': 0.00141318,
'2009-03-13 20:30 Z': 0.00063763,
'2009-03-13 21:00 Z': 0.00092906,
'2009-03-13 21:30 Z': 0.001003,
'2009-03-13 22:00 Z': 0.00115972,
'2009-03-13 22:30 Z': 0.00108968,
'2009-03-13 23:00 Z': 0.00203455,
'2009-03-13 23:30 Z': 0.00186265,
'2009-03-14 00:00 Z': 0.00283022,
'2009-03-14 00:30 Z': 0.00284968,
'2009-03-14 01:00 Z': 0.00287979,
'2009-03-14 01:30 Z': 0.00216228,
'2009-03-14 02:00 Z': 0.00217408,
'2009-03-14 02:30 Z': 0.00209831,
'2009-03-14 03:00 Z': 0.00203249,
'2009-03-14 03:30 Z': 0.00174827,
'2009-03-14 04:00 Z': 0.00138219,
'2009-03-14 04:30 Z': 0.00098139,
'2009-03-14 05:00 Z': 0.00072031,
'2009-03-14 05:30 Z': 0.00081784,
'2009-03-14 06:00 Z': 0.00092017,
'2009-03-14 06:30 Z': 0.00058445,
'2009-03-14 07:00 Z': 0.00075535,
'2009-03-14 07:30 Z': 0.00119262,
'2009-03-14 08:00 Z': 0.00171435,
'2009-03-14 08:30 Z': 0.00222065,
'2009-03-14 09:00 Z': 0.00147345,
'2009-03-14 09:30 Z': 0.00138141,
'2009-03-14 10:00 Z': 0.00136168,
'2009-03-14 10:30 Z': 0.00151204,
'2009-03-14 11:00 Z': 0.00170685,
'2009-03-14 11:30 Z': 0.00187516,
'2009-03-14 12:00 Z': 0.00215764,
'2009-03-14 12:30 Z': 0.00199074,
'2009-03-14 13:00 Z': 0.00208231,
'2009-03-14 13:30 Z': 0.0014741,
'2009-03-14 14:00 Z': 0.00127488,
'2009-03-14 14:30 Z': 0.0014371,
'2009-03-14 15:00 Z': 0.00159781,
'2009-03-14 15:30 Z': 0.0015942,
'2009-03-14 16:00 Z': 0.00151769,
'2009-03-14 16:30 Z': 0.00187629,
'2009-03-14 17:00 Z': 0.00187724,
'2009-03-14 17:30 Z': 0.00242422,
'2009-03-14 18:00 Z': 0.00306499,
'2009-03-14 18:30 Z': 0.00518436,
'2009-03-14 19:00 Z': 0.00483763,
'2009-03-14 19:30 Z': 0.00398811,
'2009-03-14 20:00 Z': 0.00267988,
'2009-03-14 20:30 Z': 0.00266479,
'2009-03-14 21:00 Z': 0.00262684,
'2009-03-14 21:30 Z': 0.00163332,
'2009-03-14 22:00 Z': 0.00085608,
'2009-03-14 22:30 Z': 0.00126182,
'2009-03-14 23:00 Z': 0.00166868,
'2009-03-14 23:30 Z': 0.00101539,
'2009-03-15 00:00 Z': 0.001172,
'2009-03-15 00:30 Z': 0.0013428,
'2009-03-15 01:00 Z': 0.0013257,
'2009-03-15 01:30 Z': 0.0014292,
'2009-03-15 02:00 Z': 0.00162485,
'2009-03-15 02:30 Z': 0.00212588,
'2009-03-15 03:00 Z': 0.00225258,
'2009-03-15 03:30 Z': 0.00176827,
'2009-03-15 04:00 Z': 0.00156992,
'2009-03-15 04:30 Z': 0.00134671,
'2009-03-15 05:00 Z': 0.00168717,
'2009-03-15 05:30 Z': 0.00200491,
'2009-03-15 06:00 Z': 0.00200453,
'2009-03-15 06:30 Z': 0.00179325,
'2009-03-15 07:00 Z': 0.00206304,
'2009-03-15 07:30 Z': 0.00140193,
'2009-03-15 08:00 Z': 0.00200879,
'2009-03-15 08:30 Z': 0.00229459,
'2009-03-15 09:00 Z': 0.00208067,
'2009-03-15 09:30 Z': 0.00181854,
'2009-03-15 10:00 Z': 0.00194971,
'2009-03-15 10:30 Z': 0.00171487,
'2009-03-15 11:00 Z': 0.00087322,
'2009-03-15 11:30 Z': 0.00076723,
'2009-03-15 12:00 Z': 0.00074699,
'2009-03-15 12:30 Z': 0.00055033,
'2009-03-15 13:00 Z': 0.00089655,
'2009-03-15 13:30 Z': 0.00030253,
'2009-03-15 14:00 Z': 0.00032087,
'2009-03-15 14:30 Z': 0.00021271,
'2009-03-15 15:00 Z': 0.0002249,
'2009-03-15 15:30 Z': 0.00040436,
'2009-03-15 16:00 Z': 0.0004904,
'2009-03-15 16:30 Z': 0.00080097,
'2009-03-15 17:00 Z': 0.00166714,
'2009-03-15 17:30 Z': 0.00121467,
'2009-03-15 18:00 Z': 0.00272991,
'2009-03-15 18:30 Z': 0.00428389,
'2009-03-15 19:00 Z': 0.00410778,
'2009-03-15 19:30 Z': 0.00319369,
'2009-03-15 20:00 Z': 0.00247461,
'2009-03-15 20:30 Z': 0.0021586,
'2009-03-15 21:00 Z': 0.00148937,
'2009-03-15 21:30 Z': 0.00074867,
'2009-03-15 22:00 Z': 0.00065959,
'2009-03-15 22:30 Z': 0.00068868,
'2009-03-15 23:00 Z': 0.00158901,
'2009-03-15 23:30 Z': 0.00105417,
'2009-03-16 00:00 Z': 0.00146647,
'2009-03-16 00:30 Z': 0.00135689,
'2009-03-16 01:00 Z': 0.00135976,
'2009-03-16 01:30 Z': 0.001155,
'2009-03-16 02:00 Z': 0.00069781,
'2009-03-16 02:30 Z': 0.00056792,
'2009-03-16 03:00 Z': 0.00086481,
'2009-03-16 03:30 Z': 0.00090245,
'2009-03-16 04:00 Z': 0.00128094,
'2009-03-16 04:30 Z': 0.00144219,
'2009-03-16 05:00 Z': 0.00173126,
'2009-03-16 05:30 Z': 0.00171838,
'2009-03-16 06:00 Z': 0.00193096,
'2009-03-16 06:30 Z': 0.00205993,
'2009-03-16 07:00 Z': 0.00233372,
'2009-03-16 07:30 Z': 0.00241157,
'2009-03-16 08:00 Z': 0.00268158,
'2009-03-16 08:30 Z': 0.00278151,
'2009-03-16 09:00 Z': 0.00267308,
'2009-03-16 09:30 Z': 0.00273749,
'2009-03-16 10:00 Z': 0.00333122,
'2009-03-16 10:30 Z': 0.0035217,
'2009-03-16 11:00 Z': 0.00333001,
'2009-03-16 11:30 Z': 0.00272774,
'2009-03-16 12:00 Z': 0.0024624,
'2009-03-16 12:30 Z': 0.0021249,
'2009-03-16 13:00 Z': 0.00238161,
'2009-03-16 13:30 Z': 0.00186928,
'2009-03-16 14:00 Z': 0.00185368,
'2009-03-16 14:30 Z': 0.0014968,
'2009-03-16 15:00 Z': 0.00146064,
'2009-03-16 15:30 Z': 0.001542,
'2009-03-16 16:00 Z': 0.00175316,
'2009-03-16 16:30 Z': 0.00211815,
'2009-03-16 17:00 Z': 0.00215257,
'2009-03-16 17:30 Z': 0.00220273,
'2009-03-16 18:00 Z': 0.00213367,
'2009-03-16 18:30 Z': 0.00315282,
'2009-03-16 19:00 Z': 0.00294485,
'2009-03-16 19:30 Z': 0.00241286,
'2009-03-16 20:00 Z': 0.00233236,
'2009-03-16 20:30 Z': 0.00175227,
'2009-03-16 21:00 Z': 0.00142014,
'2009-03-16 21:30 Z': 0.00064338,
'2009-03-16 22:00 Z': 0.00089741,
'2009-03-16 22:30 Z': 0.00052364,
'2009-03-16 23:00 Z': 0.00078256,
'2009-03-16 23:30 Z': 0.000648,
'2009-03-17 00:00 Z': 0.00047242,
'2009-03-17 00:30 Z': 0.00041413,
'2009-03-17 01:00 Z': 0.00048147,
'2009-03-17 01:30 Z': 0.00036314,
'2009-03-17 02:00 Z': 0.00018142,
'2009-03-17 02:30 Z': 0.00012521,
'2009-03-17 03:00 Z': -0.00005684,
'2009-03-17 03:30 Z': -0.00006605,
'2009-03-17 04:00 Z': 0.00009111,
'2009-03-17 04:30 Z': 0.00015468,
'2009-03-17 05:00 Z': 0.00005354,
'2009-03-17 05:30 Z': 0.00040663,
'2009-03-17 06:00 Z': 0.00052993,
'2009-03-17 06:30 Z': 0.0009857,
'2009-03-17 07:00 Z': 0.00049268,
'2009-03-17 07:30 Z': 0.00056631,
'2009-03-17 08:00 Z': 0.00061854,
'2009-03-17 08:30 Z': 0.0004322,
'2009-03-17 09:00 Z': 0.00057023,
'2009-03-17 09:30 Z': 0.00043643,
'2009-03-17 10:00 Z': 0.00043086,
'2009-03-17 10:30 Z': 0.00037916,
'2009-03-17 11:00 Z': 0.00038821,
'2009-03-17 11:30 Z': 0.00041707,
'2009-03-17 12:00 Z': 0.00060721,
'2009-03-17 12:30 Z': 0.00053098,
'2009-03-17 13:00 Z': 0.00052375,
'2009-03-17 13:30 Z': 0.00020561,
'2009-03-17 14:00 Z': 0.00017022,
'2009-03-17 14:30 Z': 0.00011709,
'2009-03-17 15:00 Z': 0.00005537,
'2009-03-17 15:30 Z': 0.00002333,
'2009-03-17 16:00 Z': 0.00017432,
'2009-03-17 16:30 Z': 0.00045531,
'2009-03-17 17:00 Z': 0.00072158,
'2009-03-17 17:30 Z': 0.0009559,
'2009-03-17 18:00 Z': 0.00145519,
'2009-03-17 18:30 Z': 0.00167862,
'2009-03-17 19:00 Z': 0.00179291,
'2009-03-17 19:30 Z': 0.00144075,
'2009-03-17 20:00 Z': 0.00144298,
'2009-03-17 20:30 Z': 0.00048829,
'2009-03-17 21:00 Z': 0.00066325,
'2009-03-17 21:30 Z': 0.00016415,
'2009-03-17 22:00 Z': 0.00034894,
'2009-03-17 22:30 Z': 0.00005267,
'2009-03-17 23:00 Z': 0.00081372,
'2009-03-17 23:30 Z': 0.00027739,
'2009-03-18 00:00 Z': 0.00073135,
'2009-03-18 00:30 Z': 0.00103262,
'2009-03-18 01:00 Z': 0.00097926,
'2009-03-18 01:30 Z': 0.00056139,
'2009-03-18 02:00 Z': 0.00043862,
'2009-03-18 02:30 Z': 0.00053199,
'2009-03-18 03:00 Z': 0.00050163,
'2009-03-18 03:30 Z': 0.0005865,
'2009-03-18 04:00 Z': 0.0006209,
'2009-03-18 04:30 Z': 0.00069349,
'2009-03-18 05:00 Z': 0.00099974,
'2009-03-18 05:30 Z': 0.00176046,
'2009-03-18 06:00 Z': 0.00222827,
'2009-03-18 06:30 Z': 0.00297527,
'2009-03-18 07:00 Z': 0.00308355,
'2009-03-18 07:30 Z': 0.00245172,
'2009-03-18 08:00 Z': 0.00173602,
'2009-03-18 08:30 Z': 0.00154456,
'2009-03-18 09:00 Z': 0.00177942,
'2009-03-18 09:30 Z': 0.0012926,
'2009-03-18 10:00 Z': 0.00137041,
'2009-03-18 10:30 Z': 0.00129777,
'2009-03-18 11:00 Z': 0.00106036,
'2009-03-18 11:30 Z': 0.00091809,
'2009-03-18 12:00 Z': 0.00103071,
'2009-03-18 12:30 Z': 0.00085565,
'2009-03-18 13:00 Z': 0.00070774,
'2009-03-18 13:30 Z': 0.00055549,
'2009-03-18 14:00 Z': 0.00040002,
'2009-03-18 14:30 Z': 0.00033361,
'2009-03-18 15:00 Z': 0.00025429,
'2009-03-18 15:30 Z': 0.00022715,
'2009-03-18 16:00 Z': 0.00018081,
'2009-03-18 16:30 Z': 0.00041089,
'2009-03-18 17:00 Z': 0.00042075,
'2009-03-18 17:30 Z': 0.00048743,
'2009-03-18 18:00 Z': 0.00067325,
'2009-03-18 18:30 Z': 0.00141823,
'2009-03-18 19:00 Z': 0.00192414,
'2009-03-18 19:30 Z': 0.00182688,
'2009-03-18 20:00 Z': 0.0018503,
'2009-03-18 20:30 Z': 0.00073287,
'2009-03-18 21:00 Z': 0.00094039,
'2009-03-18 21:30 Z': 0.00059418,
'2009-03-18 22:00 Z': 0.00053566,
'2009-03-18 22:30 Z': 0.00038402,
'2009-03-18 23:00 Z': 0.00053269,
'2009-03-18 23:30 Z': 0.00056218,
'2009-03-19 00:00 Z': 0.00104538,
'2009-03-19 00:30 Z': 0.00111315,
'2009-03-19 01:00 Z': 0.00112651,
'2009-03-19 01:30 Z': 0.0006976,
'2009-03-19 02:00 Z': 0.00045355,
'2009-03-19 02:30 Z': 0.00048117,
'2009-03-19 03:00 Z': 0.00056274,
'2009-03-19 03:30 Z': 0.00033702,
'2009-03-19 04:00 Z': 0.00041748,
'2009-03-19 04:30 Z': 0.00080888,
'2009-03-19 05:00 Z': 0.00111365,
'2009-03-19 05:30 Z': 0.00118582,
'2009-03-19 06:00 Z': 0.00126461,
'2009-03-19 06:30 Z': 0.00153227,
'2009-03-19 07:00 Z': 0.00159407,
'2009-03-19 07:30 Z': 0.00171578,
'2009-03-19 08:00 Z': 0.00178298,
'2009-03-19 08:30 Z': 0.00136219,
'2009-03-19 09:00 Z': 0.00178305,
'2009-03-19 09:30 Z': 0.00171886,
'2009-03-19 10:00 Z': 0.00158514,
'2009-03-19 10:30 Z': 0.00134444,
'2009-03-19 11:00 Z': 0.00141005,
'2009-03-19 11:30 Z': 0.00124216,
'2009-03-19 12:00 Z': 0.0012464,
'2009-03-19 12:30 Z': 0.00108675,
'2009-03-19 13:00 Z': 0.00135506,
'2009-03-19 13:30 Z': 0.00116474,
'2009-03-19 14:00 Z': 0.00110529,
'2009-03-19 14:30 Z': 0.0009842,
'2009-03-19 15:00 Z': 0.00107968,
'2009-03-19 15:30 Z': 0.00094608,
'2009-03-19 16:00 Z': 0.00114441,
'2009-03-19 16:30 Z': 0.00150809,
'2009-03-19 17:00 Z': 0.00140324,
'2009-03-19 17:30 Z': 0.00146921,
'2009-03-19 18:00 Z': 0.00222529,
'2009-03-19 18:30 Z': 0.00322367,
'2009-03-19 19:00 Z': 0.00417649,
'2009-03-19 19:30 Z': 0.00279985,
'2009-03-19 20:00 Z': 0.00171614,
'2009-03-19 20:30 Z': 0.00145746,
'2009-03-19 21:00 Z': 0.00128171,
'2009-03-19 21:30 Z': 0.00117871,
'2009-03-19 22:00 Z': 0.0007214,
'2009-03-19 22:30 Z': 0.0005336,
'2009-03-19 23:00 Z': 0.00068359,
'2009-03-19 23:30 Z': 0.00073589,
'2009-03-20 00:00 Z': 0.00078442,
'2009-03-20 00:30 Z': 0.00066955,
'2009-03-20 01:00 Z': 0.00079234,
'2009-03-20 01:30 Z': 0.00062632,
'2009-03-20 02:00 Z': 0.00052089,
'2009-03-20 02:30 Z': 0.00059391,
'2009-03-20 03:00 Z': 0.0006941,
'2009-03-20 03:30 Z': 0.00055442,
'2009-03-20 04:00 Z': 0.00050797,
'2009-03-20 04:30 Z': 0.00075981,
'2009-03-20 05:00 Z': 0.00086512,
'2009-03-20 05:30 Z': 0.00092509,
'2009-03-20 06:00 Z': 0.00114952,
'2009-03-20 06:30 Z': 0.00142999,
'2009-03-20 07:00 Z': 0.00191396,
'2009-03-20 07:30 Z': 0.00218362,
'2009-03-20 08:00 Z': 0.00160472,
'2009-03-20 08:30 Z': 0.0011026,
'2009-03-20 09:00 Z': 0.00115606,
'2009-03-20 09:30 Z': 0.00110117,
'2009-03-20 10:00 Z': 0.0010292,
'2009-03-20 10:30 Z': 0.00106572,
'2009-03-20 11:00 Z': 0.00112634,
'2009-03-20 11:30 Z': 0.00113051,
'2009-03-20 12:00 Z': 0.00101482,
'2009-03-20 12:30 Z': 0.00084715,
'2009-03-20 13:00 Z': 0.00070285,
'2009-03-20 13:30 Z': 0.00070681,
'2009-03-20 14:00 Z': 0.00055671,
'2009-03-20 14:30 Z': 0.00047211,
'2009-03-20 15:00 Z': 0.00029776,
'2009-03-20 15:30 Z': 0.00033639,
'2009-03-20 16:00 Z': 0.0003748,
'2009-03-20 16:30 Z': 0.00055603,
'2009-03-20 17:00 Z': 0.00046823,
'2009-03-20 17:30 Z': 0.00053558,
'2009-03-20 18:00 Z': 0.00061212,
'2009-03-20 18:30 Z': 0.00199821,
'2009-03-20 19:00 Z': 0.00236295,
'2009-03-20 19:30 Z': 0.00181325,
'2009-03-20 20:00 Z': 0.00130227,
'2009-03-20 20:30 Z': 0.00091271,
'2009-03-20 21:00 Z': 0.00112694,
'2009-03-20 21:30 Z': 0.00109636,
'2009-03-20 22:00 Z': 0.00089005,
'2009-03-20 22:30 Z': 0.00076537,
'2009-03-20 23:00 Z': 0.00075114,
'2009-03-20 23:30 Z': 0.00075414,
'2009-03-21 00:00 Z': 0.00075408,
'2009-03-21 00:30 Z': 0.00071385,
'2009-03-21 01:00 Z': 0.00081666,
'2009-03-21 01:30 Z': 0.00062244,
'2009-03-21 02:00 Z': 0.00052431,
'2009-03-21 02:30 Z': 0.00050495,
'2009-03-21 03:00 Z': 0.0006078,
'2009-03-21 03:30 Z': 0.00039387,
'2009-03-21 04:00 Z': 0.00044917,
'2009-03-21 04:30 Z': 0.0003854,
'2009-03-21 05:00 Z': 0.00048894,
'2009-03-21 05:30 Z': 0.00065511,
'2009-03-21 06:00 Z': 0.0009268,
'2009-03-21 06:30 Z': 0.00105337,
'2009-03-21 07:00 Z': 0.00126174,
'2009-03-21 07:30 Z': 0.00166113,
'2009-03-21 08:00 Z': 0.00240464,
'2009-03-21 08:30 Z': 0.00275588,
'2009-03-21 09:00 Z': 0.00298224,
'2009-03-21 09:30 Z': 0.00221785,
'2009-03-21 10:00 Z': 0.00185436,
'2009-03-21 10:30 Z': 0.00102382,
'2009-03-21 11:00 Z': 0.00097843,
'2009-03-21 11:30 Z': 0.00087698,
'2009-03-21 12:00 Z': 0.00080832,
'2009-03-21 12:30 Z': 0.00066978,
'2009-03-21 13:00 Z': 0.00088436,
'2009-03-21 13:30 Z': 0.00043088,
'2009-03-21 14:00 Z': 0.00045258,
'2009-03-21 14:30 Z': 0.00034209,
'2009-03-21 15:00 Z': 0.00032653,
'2009-03-21 15:30 Z': 0.00035949,
'2009-03-21 16:00 Z': 0.00053868,
'2009-03-21 16:30 Z': 0.00085711,
'2009-03-21 17:00 Z': 0.00102177,
'2009-03-21 17:30 Z': 0.00113852,
'2009-03-21 18:00 Z': 0.00125095,
'2009-03-21 18:30 Z': 0.00193524,
'2009-03-21 19:00 Z': 0.00213184,
'2009-03-21 19:30 Z': 0.00192908,
'2009-03-21 20:00 Z': 0.00165621,
'2009-03-21 20:30 Z': 0.00136167,
'2009-03-21 21:00 Z': 0.00180334,
'2009-03-21 21:30 Z': 0.00132489,
'2009-03-21 22:00 Z': 0.0010168,
'2009-03-21 22:30 Z': 0.00084479,
'2009-03-21 23:00 Z': 0.00077851,
'2009-03-21 23:30 Z': 0.00074672,
'2009-03-22 00:00 Z': 0.00099923,
'2009-03-22 00:30 Z': 0.00089528,
'2009-03-22 01:00 Z': 0.00087748,
'2009-03-22 01:30 Z': 0.00112116,
'2009-03-22 02:00 Z': 0.00096378,
'2009-03-22 02:30 Z': 0.00088955,
'2009-03-22 03:00 Z': 0.00069269,
'2009-03-22 03:30 Z': 0.00066823,
'2009-03-22 04:00 Z': 0.00062801,
'2009-03-22 04:30 Z': 0.00061015,
'2009-03-22 05:00 Z': 0.00079415,
'2009-03-22 05:30 Z': 0.00082121,
'2009-03-22 06:00 Z': 0.00064022,
'2009-03-22 06:30 Z': 0.00093518,
'2009-03-22 07:00 Z': 0.00056083,
'2009-03-22 07:30 Z': 0.00053636,
'2009-03-22 08:00 Z': 0.00089227,
'2009-03-22 08:30 Z': 0.00102488,
'2009-03-22 09:00 Z': 0.00130851,
'2009-03-22 09:30 Z': 0.00169333,
'2009-03-22 10:00 Z': 0.00163788,
'2009-03-22 10:30 Z': 0.00153802,
'2009-03-22 11:00 Z': 0.0012314,
'2009-03-22 11:30 Z': 0.00111347,
'2009-03-22 12:00 Z': 0.00105878,
'2009-03-22 12:30 Z': 0.00104036,
'2009-03-22 13:00 Z': 0.00087854,
'2009-03-22 13:30 Z': 0.00062659,
'2009-03-22 14:00 Z': 0.00072366,
'2009-03-22 14:30 Z': 0.00053633,
'2009-03-22 15:00 Z': 0.00065171,
'2009-03-22 15:30 Z': 0.00073543,
'2009-03-22 16:00 Z': 0.00076979,
'2009-03-22 16:30 Z': 0.00104598,
'2009-03-22 17:00 Z': 0.00105726,
'2009-03-22 17:30 Z': 0.00125543,
'2009-03-22 18:00 Z': 0.00152695,
'2009-03-22 18:30 Z': 0.00274125,
'2009-03-22 19:00 Z': 0.00281392,
'2009-03-22 19:30 Z': 0.00229366,
'2009-03-22 20:00 Z': 0.00283399,
'2009-03-22 20:30 Z': 0.00219085,
'2009-03-22 21:00 Z': 0.00206993,
'2009-03-22 21:30 Z': 0.00109168,
'2009-03-22 22:00 Z': 0.00113954,
'2009-03-22 22:30 Z': 0.00076373,
'2009-03-22 23:00 Z': 0.00093032,
'2009-03-22 23:30 Z': 0.0010123,
'2009-03-23 00:00 Z': 0.00157136,
'2009-03-23 00:30 Z': 0.00145494,
'2009-03-23 01:00 Z': 0.00159972,
'2009-03-23 01:30 Z': 0.00165869,
'2009-03-23 02:00 Z': 0.00154035,
'2009-03-23 02:30 Z': 0.00169684,
'2009-03-23 03:00 Z': 0.0014678,
'2009-03-23 03:30 Z': 0.00140027,
'2009-03-23 04:00 Z': 0.00135569,
'2009-03-23 04:30 Z': 0.001432,
'2009-03-23 05:00 Z': 0.00189132,
'2009-03-23 05:30 Z': 0.00200671,
'2009-03-23 06:00 Z': 0.00160131,
'2009-03-23 06:30 Z': 0.00117368,
'2009-03-23 07:00 Z': 0.0019104,
'2009-03-23 07:30 Z': 0.00180265,
'2009-03-23 08:00 Z': 0.00222873,
'2009-03-23 08:30 Z': 0.0022744,
'2009-03-23 09:00 Z': 0.00234585,
'2009-03-23 09:30 Z': 0.00219641,
'2009-03-23 10:00 Z': 0.00208644,
'2009-03-23 10:30 Z': 0.00197189,
'2009-03-23 11:00 Z': 0.00196221,
'2009-03-23 11:30 Z': 0.00203701,
'2009-03-23 12:00 Z': 0.00218272,
'2009-03-23 12:30 Z': 0.00218524,
'2009-03-23 13:00 Z': 0.00243847,
'2009-03-23 13:30 Z': 0.00210683,
'2009-03-23 14:00 Z': 0.00211315,
'2009-03-23 14:30 Z': 0.00185416,
'2009-03-23 15:00 Z': 0.00155143,
'2009-03-23 15:30 Z': 0.00158768,
'2009-03-23 16:00 Z': 0.00194417,
'2009-03-23 16:30 Z': 0.00235841,
'2009-03-23 17:00 Z': 0.0026403,
'2009-03-23 17:30 Z': 0.00289752,
'2009-03-23 18:00 Z': 0.00306589,
'2009-03-23 18:30 Z': 0.00352424,
'2009-03-23 19:00 Z': 0.0036509,
'2009-03-23 19:30 Z': 0.00335297,
'2009-03-23 20:00 Z': 0.00311208,
'2009-03-23 20:30 Z': 0.00269644,
'2009-03-23 21:00 Z': 0.00243923,
'2009-03-23 21:30 Z': 0.00176731,
'2009-03-23 22:00 Z': 0.00139758,
'2009-03-23 22:30 Z': 0.00119751,
'2009-03-23 23:00 Z': 0.00161924,
'2009-03-23 23:30 Z': 0.00126026,
'2009-03-24 00:00 Z': 0.00181405,
'2009-03-24 00:30 Z': 0.00169608,
'2009-03-24 01:00 Z': 0.00167682,
'2009-03-24 01:30 Z': 0.00163816,
'2009-03-24 02:00 Z': 0.00156704,
'2009-03-24 02:30 Z': 0.00157075,
'2009-03-24 03:00 Z': 0.00152795,
'2009-03-24 03:30 Z': 0.00143123,
'2009-03-24 04:00 Z': 0.00147901,
'2009-03-24 04:30 Z': 0.00175784,
'2009-03-24 05:00 Z': 0.00167132,
'2009-03-24 05:30 Z': 0.0018792,
'2009-03-24 06:00 Z': 0.00162284,
'2009-03-24 06:30 Z': 0.00146568,
'2009-03-24 07:00 Z': 0.00182208,
'2009-03-24 07:30 Z': 0.00195189,
'2009-03-24 08:00 Z': 0.00277362,
'2009-03-24 08:30 Z': 0.00260073,
'2009-03-24 09:00 Z': 0.00219952,
'2009-03-24 09:30 Z': 0.0019824,
'2009-03-24 10:00 Z': 0.00191615,
'2009-03-24 10:30 Z': 0.00180183,
'2009-03-24 11:00 Z': 0.00172778,
'2009-03-24 11:30 Z': 0.00176726,
'2009-03-24 12:00 Z': 0.00175124,
'2009-03-24 12:30 Z': 0.00175391,
'2009-03-24 13:00 Z': 0.0018517,
'2009-03-24 13:30 Z': 0.00164677,
'2009-03-24 14:00 Z': 0.00158445,
'2009-03-24 14:30 Z': 0.00143975,
'2009-03-24 15:00 Z': 0.00112622,
'2009-03-24 15:30 Z': 0.00134551,
'2009-03-24 16:00 Z': 0.00163348,
'2009-03-24 16:30 Z': 0.00220651,
'2009-03-24 17:00 Z': 0.00292993,
'2009-03-24 17:30 Z': 0.00304622,
'2009-03-24 18:00 Z': 0.00427619,
'2009-03-24 18:30 Z': 0.00481514,
'2009-03-24 19:00 Z': 0.00362983,
'2009-03-24 19:30 Z': 0.00262539,
'2009-03-24 20:00 Z': 0.00276888,
'2009-03-24 20:30 Z': 0.00275192,
'2009-03-24 21:00 Z': 0.00295435,
'2009-03-24 21:30 Z': 0.00233463,
'2009-03-24 22:00 Z': 0.00197336,
'2009-03-24 22:30 Z': 0.00130176,
'2009-03-24 23:00 Z': 0.00193974,
'2009-03-24 23:30 Z': 0.00154724,
'2009-03-25 00:00 Z': 0.00098172,
'2009-03-25 00:30 Z': 0.00109135,
'2009-03-25 01:00 Z': 0.00074336,
'2009-03-25 01:30 Z': 0.00060783,
'2009-03-25 02:00 Z': 0.00038095,
'2009-03-25 02:30 Z': 0.00039509,
'2009-03-25 03:00 Z': 0.00043914,
'2009-03-25 03:30 Z': 0.00031938,
'2009-03-25 04:00 Z': 0.00035511,
'2009-03-25 04:30 Z': 0.00059168,
'2009-03-25 05:00 Z': 0.00054678,
'2009-03-25 05:30 Z': 0.0006876,
'2009-03-25 06:00 Z': 0.00068607,
'2009-03-25 06:30 Z': 0.00103658,
'2009-03-25 07:00 Z': 0.00133792,
'2009-03-25 07:30 Z': 0.00138317,
'2009-03-25 08:00 Z': 0.00167671,
'2009-03-25 08:30 Z': 0.00145696,
'2009-03-25 09:00 Z': 0.00135758,
'2009-03-25 09:30 Z': 0.00103564,
'2009-03-25 10:00 Z': 0.0010549,
'2009-03-25 10:30 Z': 0.00105891,
'2009-03-25 11:00 Z': 0.0013906,
'2009-03-25 11:30 Z': 0.0014118,
'2009-03-25 12:00 Z': 0.00147148,
'2009-03-25 12:30 Z': 0.00129954,
'2009-03-25 13:00 Z': 0.00210302,
'2009-03-25 13:30 Z': 0.00169748,
'2009-03-25 14:00 Z': 0.00129389,
'2009-03-25 14:30 Z': 0.00173285,
'2009-03-25 15:00 Z': 0.00123715,
'2009-03-25 15:30 Z': 0.00124829,
'2009-03-25 16:00 Z': 0.0012898,
'2009-03-25 16:30 Z': 0.00177861,
'2009-03-25 17:00 Z': 0.00192543,
'2009-03-25 17:30 Z': 0.00213724,
'2009-03-25 18:00 Z': 0.00221284,
'2009-03-25 18:30 Z': 0.00314204,
'2009-03-25 19:00 Z': 0.00373863,
'2009-03-25 19:30 Z': 0.0032908,
'2009-03-25 20:00 Z': 0.00258694,
'2009-03-25 20:30 Z': 0.00135999,
'2009-03-25 21:00 Z': 0.00178245,
'2009-03-25 21:30 Z': 0.0014962,
'2009-03-25 22:00 Z': 0.0013226,
'2009-03-25 22:30 Z': 0.00052964,
'2009-03-25 23:00 Z': 0.00110205,
'2009-03-25 23:30 Z': 0.0004612,
'2009-03-26 00:00 Z': 0.00114078,
'2009-03-26 00:30 Z': 0.00146501,
'2009-03-26 01:00 Z': 0.00146656,
'2009-03-26 01:30 Z': 0.00119706,
'2009-03-26 02:00 Z': 0.00099594,
'2009-03-26 02:30 Z': 0.00110138,
'2009-03-26 03:00 Z': 0.00111142,
'2009-03-26 03:30 Z': 0.00104128,
'2009-03-26 04:00 Z': 0.00101569,
'2009-03-26 04:30 Z': 0.00112696,
'2009-03-26 05:00 Z': 0.00170742,
'2009-03-26 05:30 Z': 0.00132004,
'2009-03-26 06:00 Z': 0.00201805,
'2009-03-26 06:30 Z': 0.00164849,
'2009-03-26 07:00 Z': 0.0021239,
'2009-03-26 07:30 Z': 0.00218142,
'2009-03-26 08:00 Z': 0.00229477,
'2009-03-26 08:30 Z': 0.00212194,
'2009-03-26 09:00 Z': 0.00200555,
'2009-03-26 09:30 Z': 0.00189947,
'2009-03-26 10:00 Z': 0.00183921,
'2009-03-26 10:30 Z': 0.00171037,
'2009-03-26 11:00 Z': 0.00175805,
'2009-03-26 11:30 Z': 0.00193155,
'2009-03-26 12:00 Z': 0.00187709,
'2009-03-26 12:30 Z': 0.00175685,
'2009-03-26 13:00 Z': 0.00170229,
'2009-03-26 13:30 Z': 0.00155544,
'2009-03-26 14:00 Z': 0.00143936,
'2009-03-26 14:30 Z': 0.00133349,
'2009-03-26 15:00 Z': 0.00121459,
'2009-03-26 15:30 Z': 0.00160276,
'2009-03-26 16:00 Z': 0.0022101,
'2009-03-26 16:30 Z': 0.0025179,
'2009-03-26 17:00 Z': 0.0026283,
'2009-03-26 17:30 Z': 0.00306138,
'2009-03-26 18:00 Z': 0.00311339,
'2009-03-26 18:30 Z': 0.00327024,
'2009-03-26 19:00 Z': 0.00354703,
'2009-03-26 19:30 Z': 0.00342891,
'2009-03-26 20:00 Z': 0.00356242,
'2009-03-26 20:30 Z': 0.00324732,
'2009-03-26 21:00 Z': 0.00322346,
'2009-03-26 21:30 Z': 0.00206293,
'2009-03-26 22:00 Z': 0.00116906,
'2009-03-26 22:30 Z': 0.00192348,
'2009-03-26 23:00 Z': 0.00215348,
'2009-03-26 23:30 Z': 0.00173141,
'2009-03-27 00:00 Z': 0.00159003,
'2009-03-27 00:30 Z': 0.00176752,
'2009-03-27 01:00 Z': 0.00137792,
'2009-03-27 01:30 Z': 0.0011668,
'2009-03-27 02:00 Z': 0.00105674,
'2009-03-27 02:30 Z': 0.00124847,
'2009-03-27 03:00 Z': 0.00104501,
'2009-03-27 03:30 Z': 0.00093869,
'2009-03-27 04:00 Z': 0.00083363,
'2009-03-27 04:30 Z': 0.0010215,
'2009-03-27 05:00 Z': 0.00107695,
'2009-03-27 05:30 Z': 0.00094765,
'2009-03-27 06:00 Z': 0.00154528,
'2009-03-27 06:30 Z': 0.00231722,
'2009-03-27 07:00 Z': 0.00226375,
'2009-03-27 07:30 Z': 0.00192452,
'2009-03-27 08:00 Z': 0.00223362,
'2009-03-27 08:30 Z': 0.00229085,
'2009-03-27 09:00 Z': 0.0030321,
'2009-03-27 09:30 Z': 0.0024022,
'2009-03-27 10:00 Z': 0.00200148,
'2009-03-27 10:30 Z': 0.00294517,
'2009-03-27 11:00 Z': 0.00306154,
'2009-03-27 11:30 Z': 0.00330225,
'2009-03-27 12:00 Z': 0.00371413,
'2009-03-27 12:30 Z': 0.00304312,
'2009-03-27 13:00 Z': 0.00276624,
'2009-03-27 13:30 Z': 0.00241727,
'2009-03-27 14:00 Z': 0.0024633,
'2009-03-27 14:30 Z': 0.00207577,
'2009-03-27 15:00 Z': 0.0021653,
'2009-03-27 15:30 Z': 0.00217972,
'2009-03-27 16:00 Z': 0.00255445,
'2009-03-27 16:30 Z': 0.00316676,
'2009-03-27 17:00 Z': 0.00309879,
'2009-03-27 17:30 Z': 0.00303103,
'2009-03-27 18:00 Z': 0.00295386,
'2009-03-27 18:30 Z': 0.00390992,
'2009-03-27 19:00 Z': 0.00428526,
'2009-03-27 19:30 Z': 0.00323449,
'2009-03-27 20:00 Z': 0.00306688,
'2009-03-27 20:30 Z': 0.00219753,
'2009-03-27 21:00 Z': 0.00266449,
'2009-03-27 21:30 Z': 0.00192551,
'2009-03-27 22:00 Z': 0.00138718,
'2009-03-27 22:30 Z': 0.00173497,
'2009-03-27 23:00 Z': 0.00174874,
'2009-03-27 23:30 Z': 0.00155078,
'2009-03-28 00:00 Z': 0.00229916,
'2009-03-28 00:30 Z': 0.00289755,
'2009-03-28 01:00 Z': 0.00271219,
'2009-03-28 01:30 Z': 0.00282563,
'2009-03-28 02:00 Z': 0.00253403,
'2009-03-28 02:30 Z': 0.00272469,
'2009-03-28 03:00 Z': 0.0025245,
'2009-03-28 03:30 Z': 0.00214438,
'2009-03-28 04:00 Z': 0.00207406,
'2009-03-28 04:30 Z': 0.00221079,
'2009-03-28 05:00 Z': 0.0022726,
'2009-03-28 05:30 Z': 0.00184292,
'2009-03-28 06:00 Z': 0.00156357,
'2009-03-28 06:30 Z': 0.00159177,
'2009-03-28 07:00 Z': 0.00237141,
'2009-03-28 07:30 Z': 0.00288429,
'2009-03-28 08:00 Z': 0.00351791,
'2009-03-28 08:30 Z': 0.00377778,
'2009-03-28 09:00 Z': 0.00495141,
'2009-03-28 09:30 Z': 0.00457171,
'2009-03-28 10:00 Z': 0.00429624,
'2009-03-28 10:30 Z': 0.00341467,
'2009-03-28 11:00 Z': 0.00350516,
'2009-03-28 11:30 Z': 0.00357214,
'2009-03-28 12:00 Z': 0.00335308,
'2009-03-28 12:30 Z': 0.0027814,
'2009-03-28 13:00 Z': 0.00239027,
'2009-03-28 13:30 Z': 0.00243719,
'2009-03-28 14:00 Z': 0.00244845,
'2009-03-28 14:30 Z': 0.00242169,
'2009-03-28 15:00 Z': 0.00249825,
'2009-03-28 15:30 Z': 0.00239503,
'2009-03-28 16:00 Z': 0.00256309,
'2009-03-28 16:30 Z': 0.00343763,
'2009-03-28 17:00 Z': 0.00333037,
'2009-03-28 17:30 Z': 0.00379453,
'2009-03-28 18:00 Z': 0.00408741,
'2009-03-28 18:30 Z': 0.00475231,
'2009-03-28 19:00 Z': 0.00516677,
'2009-03-28 19:30 Z': 0.00432263,
'2009-03-28 20:00 Z': 0.00321026,
'2009-03-28 20:30 Z': 0.00273985,
'2009-03-28 21:00 Z': 0.00280645,
'2009-03-28 21:30 Z': 0.00233223,
'2009-03-28 22:00 Z': 0.00181858,
'2009-03-28 22:30 Z': 0.00220134,
'2009-03-28 23:00 Z': 0.00212354,
'2009-03-28 23:30 Z': 0.00217523,
'2009-03-29 00:00 Z': 0.00236536,
'2009-03-29 00:30 Z': 0.00225824,
'2009-03-29 01:00 Z': 0.00203646,
'2009-03-29 01:30 Z': 0.00184725,
'2009-03-29 02:00 Z': 0.00189422,
'2009-03-29 02:30 Z': 0.00198472,
'2009-03-29 03:00 Z': 0.00147212,
'2009-03-29 03:30 Z': 0.00104145,
'2009-03-29 04:00 Z': 0.00104293,
'2009-03-29 04:30 Z': 0.00115135,
'2009-03-29 05:00 Z': 0.00150052,
'2009-03-29 05:30 Z': 0.00147533,
'2009-03-29 06:00 Z': 0.00150523,
'2009-03-29 06:30 Z': 0.00106628,
'2009-03-29 07:00 Z': 0.00149114,
'2009-03-29 07:30 Z': 0.00161395,
'2009-03-29 08:00 Z': 0.0016644,
'2009-03-29 08:30 Z': 0.00174827,
'2009-03-29 09:00 Z': 0.00184916,
'2009-03-29 09:30 Z': 0.00217496,
'2009-03-29 10:00 Z': 0.00233435,
'2009-03-29 10:30 Z': 0.00229735,
'2009-03-29 11:00 Z': 0.00229947,
'2009-03-29 11:30 Z': 0.00222827,
'2009-03-29 12:00 Z': 0.00206152,
'2009-03-29 12:30 Z': 0.00187523,
'2009-03-29 13:00 Z': 0.00279118,
'2009-03-29 13:30 Z': 0.00224481,
'2009-03-29 14:00 Z': 0.0016307,
'2009-03-29 14:30 Z': 0.00163799,
'2009-03-29 15:00 Z': 0.00161981,
'2009-03-29 15:30 Z': 0.00185879,
'2009-03-29 16:00 Z': 0.00206739,
'2009-03-29 16:30 Z': 0.00227752,
'2009-03-29 17:00 Z': 0.00239438,
'2009-03-29 17:30 Z': 0.00266869,
'2009-03-29 18:00 Z': 0.00323971,
'2009-03-29 18:30 Z': 0.00407724,
'2009-03-29 19:00 Z': 0.00519659,
'2009-03-29 19:30 Z': 0.00390269,
'2009-03-29 20:00 Z': 0.00311274,
'2009-03-29 20:30 Z': 0.00148065,
'2009-03-29 21:00 Z': 0.00157745,
'2009-03-29 21:30 Z': 0.00093328,
'2009-03-29 22:00 Z': 0.00175318,
'2009-03-29 22:30 Z': 0.00090556,
'2009-03-30 00:00 Z': 0.00060177,
'2009-03-30 00:30 Z': 0.00020994,
'2009-03-30 01:00 Z': 0.00047815,
'2009-03-30 01:30 Z': 0.0008055,
'2009-03-30 02:00 Z': 0.00087947,
'2009-03-30 02:30 Z': 0.00072087,
'2009-03-30 03:00 Z': 0.00076902,
'2009-03-30 03:30 Z': 0.00060124,
'2009-03-30 04:00 Z': 0.00046687,
'2009-03-30 04:30 Z': 0.0004418,
'2009-03-30 05:00 Z': 0.00049991,
'2009-03-30 05:30 Z': 0.00064751,
'2009-03-30 06:00 Z': 0.00171023,
'2009-03-30 06:30 Z': 0.00195642,
'2009-03-30 07:00 Z': 0.00271341,
'2009-03-30 07:30 Z': 0.0035686,
'2009-03-30 08:00 Z': 0.0042194,
'2009-03-30 08:30 Z': 0.00361093,
'2009-03-30 09:00 Z': 0.0045891,
'2009-03-30 09:30 Z': 0.00413891,
'2009-03-30 10:00 Z': 0.00378719,
'2009-03-30 10:30 Z': 0.00352832,
'2009-03-30 11:00 Z': 0.00306954,
'2009-03-30 11:30 Z': 0.00354928,
'2009-03-30 12:00 Z': 0.00325544,
'2009-03-30 12:30 Z': 0.00274376,
'2009-03-30 13:00 Z': 0.00277889,
'2009-03-30 13:30 Z': 0.0025579,
'2009-03-30 14:00 Z': 0.00235468,
'2009-03-30 14:30 Z': 0.00228591,
'2009-03-30 15:00 Z': 0.00236028,
'2009-03-30 15:30 Z': 0.00245259,
'2009-03-30 16:00 Z': 0.00255352,
'2009-03-30 16:30 Z': 0.00342211,
'2009-03-30 17:00 Z': 0.0038402,
'2009-03-30 17:30 Z': 0.00367595,
'2009-03-30 18:00 Z': 0.0033369,
'2009-03-30 18:30 Z': 0.00269497,
'2009-03-30 19:00 Z': 0.00283086,
'2009-03-30 19:30 Z': 0.0034441,
'2009-03-30 20:00 Z': 0.00325683,
'2009-03-30 20:30 Z': 0.00232068,
'2009-03-30 21:00 Z': 0.00203607,
'2009-03-30 21:30 Z': 0.00165574,
'2009-03-30 22:00 Z': 0.00112285,
'2009-03-30 22:30 Z': 0.00099963,
'2009-03-30 23:00 Z': 0.00099157,
'2009-03-30 23:30 Z': 0.00090683,
'2009-03-31 00:00 Z': 0.00055208,
'2009-03-31 00:30 Z': 0.000313,
'2009-03-31 01:00 Z': 0.00061354,
'2009-03-31 01:30 Z': 0.00086993,
'2009-03-31 02:00 Z': 0.00072286,
'2009-03-31 02:30 Z': 0.00054694,
'2009-03-31 03:00 Z': 0.00045101,
'2009-03-31 03:30 Z': 0.00036461,
'2009-03-31 04:00 Z': 0.00028335,
'2009-03-31 04:30 Z': 0.00018771,
'2009-03-31 05:00 Z': 0.00071462,
'2009-03-31 05:30 Z': 0.00069906,
'2009-03-31 06:00 Z': 0.00133769,
'2009-03-31 06:30 Z': 0.00190477,
'2009-03-31 07:00 Z': 0.00198381,
'2009-03-31 07:30 Z': 0.00220765,
'2009-03-31 08:00 Z': 0.00179685,
'2009-03-31 08:30 Z': 0.00153603,
'2009-03-31 09:00 Z': 0.00148893,
'2009-03-31 09:30 Z': 0.00143774,
'2009-03-31 10:00 Z': 0.00143171,
'2009-03-31 10:30 Z': 0.00143264,
'2009-03-31 11:00 Z': 0.00105447,
'2009-03-31 11:30 Z': 0.00084296,
'2009-03-31 12:00 Z': 0.0009254,
'2009-03-31 12:30 Z': 0.00087265,
'2009-03-31 13:00 Z': 0.00102492,
'2009-03-31 13:30 Z': 0.00092554,
'2009-03-31 14:00 Z': 0.00113455,
'2009-03-31 14:30 Z': 0.00091195,
'2009-03-31 15:00 Z': 0.00065483,
'2009-03-31 15:30 Z': 0.00078394,
'2009-03-31 16:00 Z': 0.00097258,
'2009-03-31 16:30 Z': 0.00154601,
'2009-03-31 17:00 Z': 0.00164262,
'2009-03-31 17:30 Z': 0.00179202,
'2009-03-31 18:00 Z': 0.00200082,
'2009-03-31 18:30 Z': 0.00159979,
'2009-03-31 19:00 Z': 0.00151095,
'2009-03-31 19:30 Z': 0.00196156,
'2009-03-31 20:00 Z': 0.00285959,
'2009-03-31 20:30 Z': 0.00200318,
'2009-03-31 21:00 Z': 0.00194799,
'2009-03-31 21:30 Z': 0.0015946,
'2009-03-31 22:00 Z': 0.00173619,
'2009-03-31 22:30 Z': 0.00097232,
'2009-03-31 23:00 Z': 0.00120317,
'2009-03-31 23:30 Z': 0.00058903}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bsuos]]></value>
        <value><![CDATA[91]]></value>
        <value><![CDATA[2010-04-01T00:00Z]]></value>
        <value><![CDATA[def rates():
    return {
'01 00:00 Z': 0.00080602,
'01 00:30 Z': 0.00057789,
'01 01:00 Z': 0.00103518,
'01 01:30 Z': 0.00104602,
'01 02:00 Z': 0.00086666,
'01 02:30 Z': 0.0010976,
'01 03:00 Z': 0.00102574,
'01 03:30 Z': 0.00097254,
'01 04:00 Z': 0.00106753,
'01 04:30 Z': 0.00092691,
'01 05:00 Z': 0.00133489,
'01 05:30 Z': 0.00140809,
'01 06:00 Z': 0.00160226,
'01 06:30 Z': 0.0009751,
'01 07:00 Z': 0.00143375,
'01 07:30 Z': 0.00178852,
'01 08:00 Z': 0.0019903,
'01 08:30 Z': 0.00159691,
'01 09:00 Z': 0.00159801,
'01 09:30 Z': 0.00135002,
'01 10:00 Z': 0.00129102,
'01 10:30 Z': 0.00148993,
'01 11:00 Z': 0.00122109,
'01 11:30 Z': 0.00104692,
'01 12:00 Z': 0.00137434,
'01 12:30 Z': 0.00108615,
'01 13:00 Z': 0.00134891,
'01 13:30 Z': 0.00082723,
'01 14:00 Z': 0.00063522,
'01 14:30 Z': 0.00052136,
'01 15:00 Z': 0.00045627,
'01 15:30 Z': 0.00047636,
'01 16:00 Z': 0.00052942,
'01 16:30 Z': 0.00070104,
'01 17:00 Z': 0.00081157,
'01 17:30 Z': 0.00077586,
'01 18:00 Z': 0.00067205,
'01 18:30 Z': 0.00080681,
'01 19:00 Z': 0.00092419,
'01 19:30 Z': 0.00128576,
'01 20:00 Z': 0.0012181,
'01 20:30 Z': 0.00127087,
'01 21:00 Z': 0.00157887,
'01 21:30 Z': 0.00139965,
'01 22:00 Z': 0.00123084,
'01 22:30 Z': 0.00136888,
'01 23:00 Z': 0.00177386,
'01 23:30 Z': 0.0020521,
'02 00:00 Z': 0.00142019,
'02 00:30 Z': 0.00119894,
'02 01:00 Z': 0.0014158,
'02 01:30 Z': 0.0013186,
'02 02:00 Z': 0.00106625,
'02 02:30 Z': 0.00088942,
'02 03:00 Z': 0.00082128,
'02 03:30 Z': 0.00087542,
'02 04:00 Z': 0.00073377,
'02 04:30 Z': 0.00074239,
'02 05:00 Z': 0.00078404,
'02 05:30 Z': 0.00055922,
'02 06:00 Z': 0.0010502,
'02 06:30 Z': 0.00088164,
'02 07:00 Z': 0.00120307,
'02 07:30 Z': 0.0013139,
'02 08:00 Z': 0.00139811,
'02 08:30 Z': 0.00145309,
'02 09:00 Z': 0.00116328,
'02 09:30 Z': 0.00122787,
'02 10:00 Z': 0.00147006,
'02 10:30 Z': 0.00148598,
'02 11:00 Z': 0.00148315,
'02 11:30 Z': 0.00168858,
'02 12:00 Z': 0.00197089,
'02 12:30 Z': 0.00179373,
'02 13:00 Z': 0.00183252,
'02 13:30 Z': 0.00174751,
'02 14:00 Z': 0.00183596,
'02 14:30 Z': 0.00146227,
'02 15:00 Z': 0.00102606,
'02 15:30 Z': 0.00097999,
'02 16:00 Z': 0.00091927,
'02 16:30 Z': 0.00089529,
'02 17:00 Z': 0.00102462,
'02 17:30 Z': 0.00100043,
'02 18:00 Z': 0.0009242,
'02 18:30 Z': 0.00094358,
'02 19:00 Z': 0.001202,
'02 19:30 Z': 0.00140887,
'02 20:00 Z': 0.00172249,
'02 20:30 Z': 0.00171476,
'02 21:00 Z': 0.00145162,
'02 21:30 Z': 0.00120548,
'02 22:00 Z': 0.00111117,
'02 22:30 Z': 0.00136589,
'02 23:00 Z': 0.0013396,
'02 23:30 Z': 0.00149875,
'03 00:00 Z': 0.00109193,
'03 00:30 Z': 0.00096252,
'03 01:00 Z': 0.0007823,
'03 01:30 Z': 0.00104501,
'03 02:00 Z': 0.00087078,
'03 02:30 Z': 0.00105178,
'03 03:00 Z': 0.00125364,
'03 03:30 Z': 0.00119708,
'03 04:00 Z': 0.0010814,
'03 04:30 Z': 0.00086246,
'03 05:00 Z': 0.00084129,
'03 05:30 Z': 0.00090925,
'03 06:00 Z': 0.00113667,
'03 06:30 Z': 0.00074645,
'03 07:00 Z': 0.00076254,
'03 07:30 Z': 0.00099532,
'03 08:00 Z': 0.00103661,
'03 08:30 Z': 0.00108076,
'03 09:00 Z': 0.00134633,
'03 09:30 Z': 0.00135283,
'03 10:00 Z': 0.00142908,
'03 10:30 Z': 0.00145241,
'03 11:00 Z': 0.0013936,
'03 11:30 Z': 0.00137625,
'03 12:00 Z': 0.00144729,
'03 12:30 Z': 0.0014287,
'03 13:00 Z': 0.00139563,
'03 13:30 Z': 0.00109563,
'03 14:00 Z': 0.00105576,
'03 14:30 Z': 0.00083373,
'03 15:00 Z': 0.00087229,
'03 15:30 Z': 0.00088998,
'03 16:00 Z': 0.00089576,
'03 16:30 Z': 0.00101865,
'03 17:00 Z': 0.00113743,
'03 17:30 Z': 0.00115798,
'03 18:00 Z': 0.00112402,
'03 18:30 Z': 0.0010841,
'03 19:00 Z': 0.00135593,
'03 19:30 Z': 0.00213537,
'03 20:00 Z': 0.00209041,
'03 20:30 Z': 0.0016935,
'03 21:00 Z': 0.00147132,
'03 21:30 Z': 0.00126521,
'03 22:00 Z': 0.00104451,
'03 22:30 Z': 0.00086843,
'03 23:00 Z': 0.00071859,
'03 23:30 Z': 0.0008371,
'04 00:00 Z': 0.00082057,
'04 00:30 Z': 0.00060283,
'04 01:00 Z': 0.00082774,
'04 01:30 Z': 0.00096809,
'04 02:00 Z': 0.00092098,
'04 02:30 Z': 0.00079536,
'04 03:00 Z': 0.00080841,
'04 03:30 Z': 0.00085676,
'04 04:00 Z': 0.00084123,
'04 04:30 Z': 0.0007211,
'04 05:00 Z': 0.0006453,
'04 05:30 Z': 0.00057192,
'04 06:00 Z': 0.00056329,
'04 06:30 Z': 0.00039294,
'04 07:00 Z': 0.00029015,
'04 07:30 Z': 0.00047593,
'04 08:00 Z': 0.00069694,
'04 08:30 Z': 0.00075956,
'04 09:00 Z': 0.00056163,
'04 09:30 Z': 0.00063981,
'04 10:00 Z': 0.001101,
'04 10:30 Z': 0.00125895,
'04 11:00 Z': 0.00188731,
'04 11:30 Z': 0.00191863,
'04 12:00 Z': 0.0018789,
'04 12:30 Z': 0.00194308,
'04 13:00 Z': 0.00162289,
'04 13:30 Z': 0.00120163,
'04 14:00 Z': 0.00086665,
'04 14:30 Z': 0.00072129,
'04 15:00 Z': 0.00072265,
'04 15:30 Z': 0.00064551,
'04 16:00 Z': 0.00059349,
'04 16:30 Z': 0.00049046,
'04 17:00 Z': 0.00039036,
'04 17:30 Z': 0.00034514,
'04 18:00 Z': 0.00031087,
'04 18:30 Z': 0.00045098,
'04 19:00 Z': 0.00041987,
'04 19:30 Z': 0.00102921,
'04 20:00 Z': 0.00135767,
'04 20:30 Z': 0.00102146,
'04 21:00 Z': 0.00105423,
'04 21:30 Z': 0.0009052,
'04 22:00 Z': 0.0004316,
'04 22:30 Z': 0.00024512,
'04 23:00 Z': 0.00035624,
'04 23:30 Z': 0.00053995,
'05 00:00 Z': 0.00050547,
'05 00:30 Z': 0.00043881,
'05 01:00 Z': 0.00084756,
'05 01:30 Z': 0.00104907,
'05 02:00 Z': 0.0010448,
'05 02:30 Z': 0.00105763,
'05 03:00 Z': 0.00107177,
'05 03:30 Z': 0.00093098,
'05 04:00 Z': 0.00108777,
'05 04:30 Z': 0.00092353,
'05 05:00 Z': 0.00089144,
'05 05:30 Z': 0.00097752,
'05 06:00 Z': 0.00119885,
'05 06:30 Z': 0.00099373,
'05 07:00 Z': 0.00038833,
'05 07:30 Z': 0.00029144,
'05 08:00 Z': 0.00061156,
'05 08:30 Z': 0.0007604,
'05 09:00 Z': 0.00052012,
'05 09:30 Z': 0.00062569,
'05 10:00 Z': 0.00118803,
'05 10:30 Z': 0.00132943,
'05 11:00 Z': 0.0012082,
'05 11:30 Z': 0.00135831,
'05 12:00 Z': 0.00148618,
'05 12:30 Z': 0.00176052,
'05 13:00 Z': 0.00179795,
'05 13:30 Z': 0.00160052,
'05 14:00 Z': 0.00121475,
'05 14:30 Z': 0.00112358,
'05 15:00 Z': 0.00113667,
'05 15:30 Z': 0.00111148,
'05 16:00 Z': 0.00097999,
'05 16:30 Z': 0.00094385,
'05 17:00 Z': 0.00087645,
'05 17:30 Z': 0.00105878,
'05 18:00 Z': 0.00090101,
'05 18:30 Z': 0.00086944,
'05 19:00 Z': 0.00086727,
'05 19:30 Z': 0.0019859,
'05 20:00 Z': 0.00187619,
'05 20:30 Z': 0.00130652,
'05 21:00 Z': 0.0010805,
'05 21:30 Z': 0.00094033,
'05 22:00 Z': 0.00058561,
'05 22:30 Z': 0.0003995,
'05 23:00 Z': 0.0006061,
'05 23:30 Z': 0.00061867,
'06 00:00 Z': 0.00065517,
'06 00:30 Z': 0.00080683,
'06 01:00 Z': 0.00150358,
'06 01:30 Z': 0.00159028,
'06 02:00 Z': 0.0016563,
'06 02:30 Z': 0.00160454,
'06 03:00 Z': 0.00164635,
'06 03:30 Z': 0.00138022,
'06 04:00 Z': 0.00130112,
'06 04:30 Z': 0.0010734,
'06 05:00 Z': 0.00112609,
'06 05:30 Z': 0.00099297,
'06 06:00 Z': 0.00107266,
'06 06:30 Z': 0.0007427,
'06 07:00 Z': 0.00122502,
'06 07:30 Z': 0.00121346,
'06 08:00 Z': 0.00110273,
'06 08:30 Z': 0.00108849,
'06 09:00 Z': 0.00086264,
'06 09:30 Z': 0.00095304,
'06 10:00 Z': 0.00094748,
'06 10:30 Z': 0.00082589,
'06 11:00 Z': 0.00071112,
'06 11:30 Z': 0.00082452,
'06 12:00 Z': 0.00085946,
'06 12:30 Z': 0.00093466,
'06 13:00 Z': 0.00104363,
'06 13:30 Z': 0.00068848,
'06 14:00 Z': 0.0007584,
'06 14:30 Z': 0.00079406,
'06 15:00 Z': 0.00093879,
'06 15:30 Z': 0.00105793,
'06 16:00 Z': 0.00137947,
'06 16:30 Z': 0.00136705,
'06 17:00 Z': 0.00158149,
'06 17:30 Z': 0.00148693,
'06 18:00 Z': 0.00156203,
'06 18:30 Z': 0.00172599,
'06 19:00 Z': 0.00235444,
'06 19:30 Z': 0.00202961,
'06 20:00 Z': 0.00328334,
'06 20:30 Z': 0.00206399,
'06 21:00 Z': 0.00206167,
'06 21:30 Z': 0.0015887,
'06 22:00 Z': 0.00110202,
'06 22:30 Z': 0.00081309,
'06 23:00 Z': 0.00112642,
'06 23:30 Z': 0.00114833,
'07 00:00 Z': 0.00098317,
'07 00:30 Z': 0.00085754,
'07 01:00 Z': 0.00110798,
'07 01:30 Z': 0.00130781,
'07 02:00 Z': 0.00122386,
'07 02:30 Z': 0.00105501,
'07 03:00 Z': 0.00096454,
'07 03:30 Z': 0.00090972,
'07 04:00 Z': 0.00083087,
'07 04:30 Z': 0.00084568,
'07 05:00 Z': 0.0008138,
'07 05:30 Z': 0.00078855,
'07 06:00 Z': 0.00131578,
'07 06:30 Z': 0.00087629,
'07 07:00 Z': 0.00107808,
'07 07:30 Z': 0.00126797,
'07 08:00 Z': 0.0014761,
'07 08:30 Z': 0.00118251,
'07 09:00 Z': 0.00191925,
'07 09:30 Z': 0.00122441,
'07 10:00 Z': 0.00141402,
'07 10:30 Z': 0.00152595,
'07 11:00 Z': 0.00145397,
'07 11:30 Z': 0.00147747,
'07 12:00 Z': 0.00123593,
'07 12:30 Z': 0.0012142,
'07 13:00 Z': 0.00164302,
'07 13:30 Z': 0.0013119,
'07 14:00 Z': 0.00171767,
'07 14:30 Z': 0.00128269,
'07 15:00 Z': 0.00141077,
'07 15:30 Z': 0.00142099,
'07 16:00 Z': 0.00120445,
'07 16:30 Z': 0.00136807,
'07 17:00 Z': 0.00135453,
'07 17:30 Z': 0.00116736,
'07 18:00 Z': 0.00105938,
'07 18:30 Z': 0.00096839,
'07 19:00 Z': 0.0015,
'07 19:30 Z': 0.00184532,
'07 20:00 Z': 0.0019257,
'07 20:30 Z': 0.00156372,
'07 21:00 Z': 0.00117593,
'07 21:30 Z': 0.00102605,
'07 22:00 Z': 0.00076363,
'07 22:30 Z': 0.00043831,
'07 23:00 Z': 0.00041215,
'07 23:30 Z': 0.00067343,
'08 00:00 Z': 0.00055106,
'08 00:30 Z': 0.00046506,
'08 01:00 Z': 0.00071434,
'08 01:30 Z': 0.00094167,
'08 02:00 Z': 0.00081,
'08 02:30 Z': 0.00075609,
'08 03:00 Z': 0.0006508,
'08 03:30 Z': 0.00041601,
'08 04:00 Z': 0.00042897,
'08 04:30 Z': 0.00044185,
'08 05:00 Z': 0.00068279,
'08 05:30 Z': 0.00072543,
'08 06:00 Z': 0.00060348,
'08 06:30 Z': 0.00048058,
'08 07:00 Z': 0.00058741,
'08 07:30 Z': 0.00060881,
'08 08:00 Z': 0.00081452,
'08 08:30 Z': 0.00092588,
'08 09:00 Z': 0.00091713,
'08 09:30 Z': 0.00097547,
'08 10:00 Z': 0.00091477,
'08 10:30 Z': 0.00089275,
'08 11:00 Z': 0.00099522,
'08 11:30 Z': 0.00092539,
'08 12:00 Z': 0.0008352,
'08 12:30 Z': 0.00095842,
'08 13:00 Z': 0.00072992,
'08 13:30 Z': 0.0002826,
'08 14:00 Z': 0.00040663,
'08 14:30 Z': 0.00039627,
'08 15:00 Z': 0.00068544,
'08 15:30 Z': 0.00059802,
'08 16:00 Z': 0.00037744,
'08 16:30 Z': 0.00031269,
'08 17:00 Z': 0.00031176,
'08 17:30 Z': 0.00027361,
'08 18:00 Z': 0.00020359,
'08 18:30 Z': 0.00014187,
'08 19:00 Z': 0.00054081,
'08 19:30 Z': 0.00070216,
'08 20:00 Z': 0.00158534,
'08 20:30 Z': 0.00108288,
'08 21:00 Z': 0.0010818,
'08 21:30 Z': 0.00111239,
'08 22:00 Z': 0.00078763,
'08 22:30 Z': 0.00072749,
'08 23:00 Z': 0.00078854,
'08 23:30 Z': 0.00099537,
'09 00:00 Z': 0.0007491,
'09 00:30 Z': 0.00070304,
'09 01:00 Z': 0.00080308,
'09 01:30 Z': 0.00084811,
'09 02:00 Z': 0.00080974,
'09 02:30 Z': 0.00045756,
'09 03:00 Z': 0.00048641,
'09 03:30 Z': 0.00042382,
'09 04:00 Z': 0.00044823,
'09 04:30 Z': 0.00042036,
'09 05:00 Z': 0.00054847,
'09 05:30 Z': 0.00063171,
'09 06:00 Z': 0.00051427,
'09 06:30 Z': 0.00020914,
'09 07:00 Z': 0.00064975,
'09 07:30 Z': 0.00071928,
'09 08:00 Z': 0.00078258,
'09 08:30 Z': 0.00085222,
'09 09:00 Z': 0.00092196,
'09 09:30 Z': 0.0007968,
'09 10:00 Z': 0.00076626,
'09 10:30 Z': 0.0007217,
'09 11:00 Z': 0.00068133,
'09 11:30 Z': 0.00076032,
'09 12:00 Z': 0.0006438,
'09 12:30 Z': 0.00047312,
'09 13:00 Z': 0.00072652,
'09 13:30 Z': 0.00041028,
'09 14:00 Z': 0.00034616,
'09 14:30 Z': 0.00022044,
'09 15:00 Z': 0.00024717,
'09 15:30 Z': 0.00029041,
'09 16:00 Z': 0.00022344,
'09 16:30 Z': 0.00018564,
'09 17:00 Z': 0.00012618,
'09 17:30 Z': 0.00004719,
'09 18:00 Z': 0.00013964,
'09 18:30 Z': 0.00019932,
'09 19:00 Z': 0.00065659,
'09 19:30 Z': 0.00082551,
'09 20:00 Z': 0.00108852,
'09 20:30 Z': 0.0009101,
'09 21:00 Z': 0.00081112,
'09 21:30 Z': 0.0006981,
'09 22:00 Z': 0.00047658,
'09 22:30 Z': 0.00052776,
'09 23:00 Z': 0.00044687,
'09 23:30 Z': 0.00054769,
'10 00:00 Z': 0.00066296,
'10 00:30 Z': 0.00051628,
'10 01:00 Z': 0.00059378,
'10 01:30 Z': 0.0006551,
'10 02:00 Z': 0.00059256,
'10 02:30 Z': 0.00044194,
'10 03:00 Z': 0.00047911,
'10 03:30 Z': 0.00067846,
'10 04:00 Z': 0.000771,
'10 04:30 Z': 0.00086807,
'10 05:00 Z': 0.00076797,
'10 05:30 Z': 0.00074509,
'10 06:00 Z': 0.00073611,
'10 06:30 Z': 0.00046543,
'10 07:00 Z': 0.00103319,
'10 07:30 Z': 0.00116609,
'10 08:00 Z': 0.00130357,
'10 08:30 Z': 0.00120201,
'10 09:00 Z': 0.00099184,
'10 09:30 Z': 0.00107837,
'10 10:00 Z': 0.00107629,
'10 10:30 Z': 0.00112547,
'10 11:00 Z': 0.00086196,
'10 11:30 Z': 0.00071801,
'10 12:00 Z': 0.00075085,
'10 12:30 Z': 0.00074496,
'10 13:00 Z': 0.00083589,
'10 13:30 Z': 0.0002491,
'10 14:00 Z': 0.00030463,
'10 14:30 Z': 0.00023217,
'10 15:00 Z': 0.00026168,
'10 15:30 Z': 0.00030137,
'10 16:00 Z': 0.00047577,
'10 16:30 Z': 0.00060034,
'10 17:00 Z': 0.00082968,
'10 17:30 Z': 0.0008904,
'10 18:00 Z': 0.000651,
'10 18:30 Z': 0.00043826,
'10 19:00 Z': 0.00086545,
'10 19:30 Z': 0.00085765,
'10 20:00 Z': 0.00176651,
'10 20:30 Z': 0.00135615,
'10 21:00 Z': 0.00125492,
'10 21:30 Z': 0.00107212,
'10 22:00 Z': 0.00073475,
'10 22:30 Z': 0.00065078,
'10 23:00 Z': 0.00050343,
'10 23:30 Z': 0.00057167,
'11 00:00 Z': 0.00047437,
'11 00:30 Z': 0.00033729,
'11 01:00 Z': 0.00048026,
'11 01:30 Z': 0.00045269,
'11 02:00 Z': 0.00050482,
'11 02:30 Z': 0.00038153,
'11 03:00 Z': 0.00039461,
'11 03:30 Z': 0.00049052,
'11 04:00 Z': 0.00076663,
'11 04:30 Z': 0.00074414,
'11 05:00 Z': 0.00083804,
'11 05:30 Z': 0.00087726,
'11 06:00 Z': 0.00079779,
'11 06:30 Z': 0.00061414,
'11 07:00 Z': 0.00035817,
'11 07:30 Z': 0.00031914,
'11 08:00 Z': 0.00035314,
'11 08:30 Z': 0.00040747,
'11 09:00 Z': 0.0003442,
'11 09:30 Z': 0.00035314,
'11 10:00 Z': 0.00083781,
'11 10:30 Z': 0.00078393,
'11 11:00 Z': 0.0007181,
'11 11:30 Z': 0.0007594,
'11 12:00 Z': 0.00083678,
'11 12:30 Z': 0.00069674,
'11 13:00 Z': 0.00066166,
'11 13:30 Z': 0.00065914,
'11 14:00 Z': 0.0005023,
'11 14:30 Z': 0.00060514,
'11 15:00 Z': 0.00074094,
'11 15:30 Z': 0.00081411,
'11 16:00 Z': 0.00066468,
'11 16:30 Z': 0.00073623,
'11 17:00 Z': 0.00071808,
'11 17:30 Z': 0.00060484,
'11 18:00 Z': 0.00056418,
'11 18:30 Z': 0.00052838,
'11 19:00 Z': 0.00053811,
'11 19:30 Z': 0.00087761,
'11 20:00 Z': 0.00158684,
'11 20:30 Z': 0.00131804,
'11 21:00 Z': 0.0011535,
'11 21:30 Z': 0.00122559,
'11 22:00 Z': 0.00061321,
'11 22:30 Z': 0.00078798,
'11 23:00 Z': 0.00072841,
'11 23:30 Z': 0.00078276,
'12 00:00 Z': 0.00067681,
'12 00:30 Z': 0.00041033,
'12 01:00 Z': 0.00044138,
'12 01:30 Z': 0.00055361,
'12 02:00 Z': 0.00062045,
'12 02:30 Z': 0.00065829,
'12 03:00 Z': 0.00075631,
'12 03:30 Z': 0.00076758,
'12 04:00 Z': 0.00063816,
'12 04:30 Z': 0.00035418,
'12 05:00 Z': 0.00043398,
'12 05:30 Z': 0.00047986,
'12 06:00 Z': 0.00052102,
'12 06:30 Z': 0.00036558,
'12 07:00 Z': 0.00107575,
'12 07:30 Z': 0.00112505,
'12 08:00 Z': 0.00167942,
'12 08:30 Z': 0.00155772,
'12 09:00 Z': 0.0015454,
'12 09:30 Z': 0.00146266,
'12 10:00 Z': 0.00143739,
'12 10:30 Z': 0.00147292,
'12 11:00 Z': 0.0012793,
'12 11:30 Z': 0.00136874,
'12 12:00 Z': 0.00124795,
'12 12:30 Z': 0.00118703,
'12 13:00 Z': 0.00139059,
'12 13:30 Z': 0.00098613,
'12 14:00 Z': 0.00128757,
'12 14:30 Z': 0.00128931,
'12 15:00 Z': 0.00125927,
'12 15:30 Z': 0.00130128,
'12 16:00 Z': 0.00127056,
'12 16:30 Z': 0.00131908,
'12 17:00 Z': 0.0013091,
'12 17:30 Z': 0.00117676,
'12 18:00 Z': 0.00088068,
'12 18:30 Z': 0.00095715,
'12 19:00 Z': 0.00120657,
'12 19:30 Z': 0.00126066,
'12 20:00 Z': 0.00148846,
'12 20:30 Z': 0.00158395,
'12 21:00 Z': 0.00179497,
'12 21:30 Z': 0.00123424,
'12 22:00 Z': 0.00097948,
'12 22:30 Z': 0.00087738,
'12 23:00 Z': 0.00056524,
'12 23:30 Z': 0.0006297,
'13 00:00 Z': 0.00043187,
'13 00:30 Z': 0.00030653,
'13 01:00 Z': 0.00066611,
'13 01:30 Z': 0.00078069,
'13 02:00 Z': 0.00062454,
'13 02:30 Z': 0.00043613,
'13 03:00 Z': 0.00033093,
'13 03:30 Z': 0.00035256,
'13 04:00 Z': 0.00074251,
'13 04:30 Z': 0.00051562,
'13 05:00 Z': 0.00057217,
'13 05:30 Z': 0.00067059,
'13 06:00 Z': 0.00060858,
'13 06:30 Z': 0.00094054,
'13 07:00 Z': 0.00083828,
'13 07:30 Z': 0.00071677,
'13 08:00 Z': 0.00117266,
'13 08:30 Z': 0.0011824,
'13 09:00 Z': 0.00109448,
'13 09:30 Z': 0.00113039,
'13 10:00 Z': 0.00103602,
'13 10:30 Z': 0.00111428,
'13 11:00 Z': 0.00107848,
'13 11:30 Z': 0.00106393,
'13 12:00 Z': 0.0010813,
'13 12:30 Z': 0.0010679,
'13 13:00 Z': 0.00130334,
'13 13:30 Z': 0.00085643,
'13 14:00 Z': 0.00076372,
'13 14:30 Z': 0.00084167,
'13 15:00 Z': 0.00079349,
'13 15:30 Z': 0.00102932,
'13 16:00 Z': 0.00109456,
'13 16:30 Z': 0.00110101,
'13 17:00 Z': 0.0013597,
'13 17:30 Z': 0.00128671,
'13 18:00 Z': 0.0009716,
'13 18:30 Z': 0.00078071,
'13 19:00 Z': 0.00132942,
'13 19:30 Z': 0.0015187,
'13 20:00 Z': 0.00173439,
'13 20:30 Z': 0.00149349,
'13 21:00 Z': 0.00177191,
'13 21:30 Z': 0.00145993,
'13 22:00 Z': 0.0007389,
'13 22:30 Z': 0.00048807,
'13 23:00 Z': 0.00054606,
'13 23:30 Z': 0.00057968,
'14 00:00 Z': 0.00040482,
'14 00:30 Z': 0.00033644,
'14 01:00 Z': 0.00040445,
'14 01:30 Z': 0.00061796,
'14 02:00 Z': 0.00055926,
'14 02:30 Z': 0.0005581,
'14 03:00 Z': 0.00050347,
'14 03:30 Z': 0.00048458,
'14 04:00 Z': 0.00050237,
'14 04:30 Z': 0.00054797,
'14 05:00 Z': 0.00068463,
'14 05:30 Z': 0.00069986,
'14 06:00 Z': 0.0006147,
'14 06:30 Z': 0.0006192,
'14 07:00 Z': 0.0009657,
'14 07:30 Z': 0.00108383,
'14 08:00 Z': 0.00127486,
'14 08:30 Z': 0.00135231,
'14 09:00 Z': 0.00176433,
'14 09:30 Z': 0.00144771,
'14 10:00 Z': 0.00155037,
'14 10:30 Z': 0.00204738,
'14 11:00 Z': 0.0017203,
'14 11:30 Z': 0.0018672,
'14 12:00 Z': 0.00176344,
'14 12:30 Z': 0.0014188,
'14 13:00 Z': 0.00178063,
'14 13:30 Z': 0.0012517,
'14 14:00 Z': 0.00142727,
'14 14:30 Z': 0.00120311,
'14 15:00 Z': 0.00086112,
'14 15:30 Z': 0.00094553,
'14 16:00 Z': 0.00090107,
'14 16:30 Z': 0.00099221,
'14 17:00 Z': 0.00093318,
'14 17:30 Z': 0.00082724,
'14 18:00 Z': 0.00071051,
'14 18:30 Z': 0.00057148,
'14 19:00 Z': 0.00088095,
'14 19:30 Z': 0.00085329,
'14 20:00 Z': 0.00119814,
'14 20:30 Z': 0.00147508,
'14 21:00 Z': 0.00166648,
'14 21:30 Z': 0.0012324,
'14 22:00 Z': 0.0010157,
'14 22:30 Z': 0.0007269,
'14 23:00 Z': 0.00069686,
'14 23:30 Z': 0.0008262,
'15 00:00 Z': 0.00068471,
'15 00:30 Z': 0.00059296,
'15 01:00 Z': 0.00067561,
'15 01:30 Z': 0.00080302,
'15 02:00 Z': 0.00081936,
'15 02:30 Z': 0.00038998,
'15 03:00 Z': 0.00033941,
'15 03:30 Z': 0.00046463,
'15 04:00 Z': 0.00047078,
'15 04:30 Z': 0.00040423,
'15 05:00 Z': 0.00051247,
'15 05:30 Z': 0.00043735,
'15 06:00 Z': 0.00062606,
'15 06:30 Z': 0.00050198,
'15 07:00 Z': 0.00081181,
'15 07:30 Z': 0.00090428,
'15 08:00 Z': 0.00093388,
'15 08:30 Z': 0.00095226,
'15 09:00 Z': 0.00107221,
'15 09:30 Z': 0.00107517,
'15 10:00 Z': 0.00106015,
'15 10:30 Z': 0.00108719,
'15 11:00 Z': 0.00100871,
'15 11:30 Z': 0.00105394,
'15 12:00 Z': 0.00097408,
'15 12:30 Z': 0.00093091,
'15 13:00 Z': 0.00111173,
'15 13:30 Z': 0.00086865,
'15 14:00 Z': 0.00098679,
'15 14:30 Z': 0.00103585,
'15 15:00 Z': 0.00052078,
'15 15:30 Z': 0.00044117,
'15 16:00 Z': 0.0005244,
'15 16:30 Z': 0.00048297,
'15 17:00 Z': 0.0005981,
'15 17:30 Z': 0.00039854,
'15 18:00 Z': 0.00054545,
'15 18:30 Z': 0.00049045,
'15 19:00 Z': 0.00095376,
'15 19:30 Z': 0.0008682,
'15 20:00 Z': 0.00148341,
'15 20:30 Z': 0.00163163,
'15 21:00 Z': 0.00138536,
'15 21:30 Z': 0.00130581,
'15 22:00 Z': 0.00126871,
'15 22:30 Z': 0.00071673,
'15 23:00 Z': 0.00048524,
'15 23:30 Z': 0.00094008,
'16 00:00 Z': 0.00093124,
'16 00:30 Z': 0.00064379,
'16 01:00 Z': 0.00071523,
'16 01:30 Z': 0.00065012,
'16 02:00 Z': 0.00051102,
'16 02:30 Z': 0.00040006,
'16 03:00 Z': 0.00032168,
'16 03:30 Z': 0.00039215,
'16 04:00 Z': 0.00041699,
'16 04:30 Z': 0.00047308,
'16 05:00 Z': 0.00073589,
'16 05:30 Z': 0.00097975,
'16 06:00 Z': 0.00095904,
'16 06:30 Z': 0.0008155,
'16 07:00 Z': 0.00082557,
'16 07:30 Z': 0.00091453,
'16 08:00 Z': 0.00108559,
'16 08:30 Z': 0.00131693,
'16 09:00 Z': 0.00105924,
'16 09:30 Z': 0.00088121,
'16 10:00 Z': 0.00089698,
'16 10:30 Z': 0.00091064,
'16 11:00 Z': 0.00080373,
'16 11:30 Z': 0.00078662,
'16 12:00 Z': 0.00073371,
'16 12:30 Z': 0.00068957,
'16 13:00 Z': 0.00074963,
'16 13:30 Z': 0.00039515,
'16 14:00 Z': 0.0003073,
'16 14:30 Z': 0.00016639,
'16 15:00 Z': 0.00003309,
'16 15:30 Z': -0.00012526,
'16 16:00 Z': -0.00000681,
'16 16:30 Z': 0.00013003,
'16 17:00 Z': 0.00025525,
'16 17:30 Z': 0.00015165,
'16 18:00 Z': -0.00002417,
'16 18:30 Z': -0.00013527,
'16 19:00 Z': 0.00015453,
'16 19:30 Z': 0.00019472,
'16 20:00 Z': 0.00038457,
'16 20:30 Z': 0.00101898,
'16 21:00 Z': 0.00135496,
'16 21:30 Z': 0.00109083,
'16 22:00 Z': 0.00109728,
'16 22:30 Z': 0.00110211,
'16 23:00 Z': 0.00067784,
'16 23:30 Z': 0.00072626,
'17 00:00 Z': 0.00072094,
'17 00:30 Z': 0.00038533,
'17 01:00 Z': 0.00046405,
'17 01:30 Z': 0.00057443,
'17 02:00 Z': 0.00032746,
'17 02:30 Z': 0.00033593,
'17 03:00 Z': 0.00105097,
'17 03:30 Z': 0.00034257,
'17 04:00 Z': 0.00032915,
'17 04:30 Z': 0.00020379,
'17 05:00 Z': 0.00025326,
'17 05:30 Z': 0.00036073,
'17 06:00 Z': 0.00071044,
'17 06:30 Z': 0.00072722,
'17 07:00 Z': 0.00063109,
'17 07:30 Z': 0.00118294,
'17 08:00 Z': 0.00100909,
'17 08:30 Z': 0.0008896,
'17 09:00 Z': 0.00090223,
'17 09:30 Z': 0.00083817,
'17 10:00 Z': 0.00092799,
'17 10:30 Z': 0.00079302,
'17 11:00 Z': 0.00073243,
'17 11:30 Z': 0.00092589,
'17 12:00 Z': 0.00058645,
'17 12:30 Z': 0.00051788,
'17 13:00 Z': 0.0004495,
'17 13:30 Z': 0.00007409,
'17 14:00 Z': 0.0000202,
'17 14:30 Z': -0.00004828,
'17 15:00 Z': 0.00001793,
'17 15:30 Z': 0.00003867,
'17 16:00 Z': 0.00003375,
'17 16:30 Z': 0.00005488,
'17 17:00 Z': 0.00012664,
'17 17:30 Z': 0.0003404,
'17 18:00 Z': 0.00028565,
'17 18:30 Z': 0.0002715,
'17 19:00 Z': 0.00057082,
'17 19:30 Z': 0.0007212,
'17 20:00 Z': 0.00100436,
'17 20:30 Z': 0.00142913,
'17 21:00 Z': 0.00138401,
'17 21:30 Z': 0.00142501,
'17 22:00 Z': 0.0007574,
'17 22:30 Z': 0.00074767,
'17 23:00 Z': 0.00087449,
'17 23:30 Z': 0.0007887,
'18 00:00 Z': 0.00106529,
'18 00:30 Z': 0.00049376,
'18 01:00 Z': 0.00057484,
'18 01:30 Z': 0.00057566,
'18 02:00 Z': 0.00045203,
'18 02:30 Z': 0.00035458,
'18 03:00 Z': 0.00036942,
'18 03:30 Z': 0.00053061,
'18 04:00 Z': 0.00052943,
'18 04:30 Z': 0.00048804,
'18 05:00 Z': 0.00057875,
'18 05:30 Z': 0.00048035,
'18 06:00 Z': 0.00039028,
'18 06:30 Z': 0.00055653,
'18 07:00 Z': 0.00057153,
'18 07:30 Z': 0.00058754,
'18 08:00 Z': 0.00091697,
'18 08:30 Z': 0.00123683,
'18 09:00 Z': 0.00064012,
'18 09:30 Z': 0.00071738,
'18 10:00 Z': 0.001138,
'18 10:30 Z': 0.00108806,
'18 11:00 Z': 0.00095173,
'18 11:30 Z': 0.00094852,
'18 12:00 Z': 0.00094877,
'18 12:30 Z': 0.00091304,
'18 13:00 Z': 0.0009655,
'18 13:30 Z': 0.00089575,
'18 14:00 Z': 0.00059042,
'18 14:30 Z': 0.0004621,
'18 15:00 Z': 0.00056962,
'18 15:30 Z': 0.00064272,
'18 16:00 Z': 0.00072769,
'18 16:30 Z': 0.00094519,
'18 17:00 Z': 0.00169751,
'18 17:30 Z': 0.00159587,
'18 18:00 Z': 0.00119185,
'18 18:30 Z': 0.00092889,
'18 19:00 Z': 0.00086424,
'18 19:30 Z': 0.00104487,
'18 20:00 Z': 0.00153524,
'18 20:30 Z': 0.00147257,
'18 21:00 Z': 0.00141445,
'18 21:30 Z': 0.00103999,
'18 22:00 Z': 0.00078222,
'18 22:30 Z': 0.00056233,
'18 23:00 Z': 0.00063455,
'18 23:30 Z': 0.00053764,
'19 00:00 Z': 0.00043436,
'19 00:30 Z': 0.00034822,
'19 01:00 Z': 0.00044005,
'19 01:30 Z': 0.00055736,
'19 02:00 Z': 0.00049576,
'19 02:30 Z': 0.00044936,
'19 03:00 Z': 0.00054179,
'19 03:30 Z': 0.00051571,
'19 04:00 Z': 0.00053958,
'19 04:30 Z': 0.00052676,
'19 05:00 Z': 0.00054237,
'19 05:30 Z': 0.00050735,
'19 06:00 Z': 0.00082256,
'19 06:30 Z': 0.00088695,
'19 07:00 Z': 0.00112921,
'19 07:30 Z': 0.00115341,
'19 08:00 Z': 0.00131313,
'19 08:30 Z': 0.00110465,
'19 09:00 Z': 0.00109696,
'19 09:30 Z': 0.00112906,
'19 10:00 Z': 0.00102565,
'19 10:30 Z': 0.00097335,
'19 11:00 Z': 0.00097555,
'19 11:30 Z': 0.00099816,
'19 12:00 Z': 0.00114958,
'19 12:30 Z': 0.00115682,
'19 13:00 Z': 0.0012733,
'19 13:30 Z': 0.00097226,
'19 14:00 Z': 0.00102994,
'19 14:30 Z': 0.00090481,
'19 15:00 Z': 0.00079027,
'19 15:30 Z': 0.00081099,
'19 16:00 Z': 0.00093817,
'19 16:30 Z': 0.00082726,
'19 17:00 Z': 0.00088364,
'19 17:30 Z': 0.00076833,
'19 18:00 Z': 0.00065365,
'19 18:30 Z': 0.0008377,
'19 19:00 Z': 0.00093327,
'19 19:30 Z': 0.00111153,
'19 20:00 Z': 0.00134992,
'19 20:30 Z': 0.00121779,
'19 21:00 Z': 0.00118195,
'19 21:30 Z': 0.00075519,
'19 22:00 Z': 0.00052205,
'19 22:30 Z': 0.00003228,
'19 23:00 Z': 0.00035925,
'19 23:30 Z': 0.0005343,
'20 00:00 Z': 0.00041181,
'20 00:30 Z': 0.00024112,
'20 01:00 Z': 0.00036453,
'20 01:30 Z': 0.00038297,
'20 02:00 Z': 0.00032089,
'20 02:30 Z': 0.00028924,
'20 03:00 Z': 0.00025306,
'20 03:30 Z': 0.00022547,
'20 04:00 Z': 0.00041795,
'20 04:30 Z': 0.00031388,
'20 05:00 Z': 0.00020069,
'20 05:30 Z': 0.00014673,
'20 06:00 Z': 0.0002436,
'20 06:30 Z': 0.00046617,
'20 07:00 Z': 0.00101125,
'20 07:30 Z': 0.0012245,
'20 08:00 Z': 0.00131708,
'20 08:30 Z': 0.00113003,
'20 09:00 Z': 0.00112222,
'20 09:30 Z': 0.00124163,
'20 10:00 Z': 0.00115543,
'20 10:30 Z': 0.00122073,
'20 11:00 Z': 0.00133271,
'20 11:30 Z': 0.00147408,
'20 12:00 Z': 0.0015433,
'20 12:30 Z': 0.00157177,
'20 13:00 Z': 0.00156154,
'20 13:30 Z': 0.00124299,
'20 14:00 Z': 0.00112372,
'20 14:30 Z': 0.00132682,
'20 15:00 Z': 0.00071991,
'20 15:30 Z': 0.00044212,
'20 16:00 Z': 0.00052407,
'20 16:30 Z': 0.00066965,
'20 17:00 Z': 0.00070491,
'20 17:30 Z': 0.00051157,
'20 18:00 Z': 0.00049854,
'20 18:30 Z': 0.00050561,
'20 19:00 Z': 0.00078064,
'20 19:30 Z': 0.00091785,
'20 20:00 Z': 0.00145665,
'20 20:30 Z': 0.00111493,
'20 21:00 Z': 0.00113497,
'20 21:30 Z': 0.00112689,
'20 22:00 Z': 0.00082193,
'20 22:30 Z': 0.00035385,
'20 23:00 Z': 0.0006059,
'20 23:30 Z': 0.00062473,
'21 00:00 Z': 0.00042103,
'21 00:30 Z': 0.00021561,
'21 01:00 Z': 0.00042497,
'21 01:30 Z': 0.0005238,
'21 02:00 Z': 0.00056716,
'21 02:30 Z': 0.00050988,
'21 03:00 Z': 0.00054449,
'21 03:30 Z': 0.00051849,
'21 04:00 Z': 0.00056131,
'21 04:30 Z': 0.00055339,
'21 05:00 Z': 0.00059829,
'21 05:30 Z': 0.0005072,
'21 06:00 Z': 0.00059707,
'21 06:30 Z': 0.00088691,
'21 07:00 Z': 0.00207568,
'21 07:30 Z': 0.00213618,
'21 08:00 Z': 0.00235045,
'21 08:30 Z': 0.00251763,
'21 09:00 Z': 0.00226178,
'21 09:30 Z': 0.00246097,
'21 10:00 Z': 0.00276787,
'21 10:30 Z': 0.00289993,
'21 11:00 Z': 0.00286213,
'21 11:30 Z': 0.00259217,
'21 12:00 Z': 0.00253352,
'21 12:30 Z': 0.00254074,
'21 13:00 Z': 0.00237361,
'21 13:30 Z': 0.0018148,
'21 14:00 Z': 0.00168755,
'21 14:30 Z': 0.00097123,
'21 15:00 Z': 0.00080987,
'21 15:30 Z': 0.0006335,
'21 16:00 Z': 0.00045256,
'21 16:30 Z': 0.00090538,
'21 17:00 Z': 0.00105033,
'21 17:30 Z': 0.00084681,
'21 18:00 Z': 0.00097035,
'21 18:30 Z': 0.00119864,
'21 19:00 Z': 0.00169261,
'21 19:30 Z': 0.00183935,
'21 20:00 Z': 0.00210478,
'21 20:30 Z': 0.00256464,
'21 21:00 Z': 0.00212707,
'21 21:30 Z': 0.00146657,
'21 22:00 Z': 0.00104076,
'21 22:30 Z': 0.00074932,
'21 23:00 Z': 0.0012325,
'21 23:30 Z': 0.00099245,
'22 00:00 Z': 0.0004578,
'22 00:30 Z': 0.00011196,
'22 01:00 Z': 0.00035938,
'22 01:30 Z': 0.00036588,
'22 02:00 Z': 0.00037954,
'22 02:30 Z': 0.00032037,
'22 03:00 Z': 0.00035868,
'22 03:30 Z': 0.00024306,
'22 04:00 Z': 0.00031575,
'22 04:30 Z': 0.00026815,
'22 05:00 Z': 0.00035322,
'22 05:30 Z': 0.00023275,
'22 06:00 Z': 0.00044705,
'22 06:30 Z': 0.00046673,
'22 07:00 Z': 0.00113134,
'22 07:30 Z': 0.00121499,
'22 08:00 Z': 0.00130643,
'22 08:30 Z': 0.00126097,
'22 09:00 Z': 0.00124196,
'22 09:30 Z': 0.00123973,
'22 10:00 Z': 0.00116809,
'22 10:30 Z': 0.00107878,
'22 11:00 Z': 0.00104515,
'22 11:30 Z': 0.00101854,
'22 12:00 Z': 0.00100015,
'22 12:30 Z': 0.00106945,
'22 13:00 Z': 0.0012557,
'22 13:30 Z': 0.00084078,
'22 14:00 Z': 0.00084404,
'22 14:30 Z': 0.00082833,
'22 15:00 Z': 0.00080385,
'22 15:30 Z': 0.00088313,
'22 16:00 Z': 0.00080597,
'22 16:30 Z': 0.00089255,
'22 17:00 Z': 0.00091569,
'22 17:30 Z': 0.00090342,
'22 18:00 Z': 0.00051856,
'22 18:30 Z': 0.00053623,
'22 19:00 Z': 0.00106106,
'22 19:30 Z': 0.00127326,
'22 20:00 Z': 0.00161,
'22 20:30 Z': 0.00211265,
'22 21:00 Z': 0.00181231,
'22 21:30 Z': 0.00126847,
'22 22:00 Z': 0.0007246,
'22 22:30 Z': 0.00060625,
'22 23:00 Z': 0.00064141,
'22 23:30 Z': 0.00056188,
'23 00:00 Z': 0.00048622,
'23 00:30 Z': 0.00040798,
'23 01:00 Z': 0.00048987,
'23 01:30 Z': 0.00060446,
'23 02:00 Z': 0.0004908,
'23 02:30 Z': 0.00040633,
'23 03:00 Z': 0.00041991,
'23 03:30 Z': 0.00035291,
'23 04:00 Z': 0.00021843,
'23 04:30 Z': 0.00018542,
'23 05:00 Z': 0.00045376,
'23 05:30 Z': 0.00052568,
'23 06:00 Z': 0.00065746,
'23 06:30 Z': 0.00090033,
'23 07:00 Z': 0.00169318,
'23 07:30 Z': 0.00202937,
'23 08:00 Z': 0.00189808,
'23 08:30 Z': 0.00182557,
'23 09:00 Z': 0.00157885,
'23 09:30 Z': 0.00152014,
'23 10:00 Z': 0.00153219,
'23 10:30 Z': 0.00150389,
'23 11:00 Z': 0.00171547,
'23 11:30 Z': 0.00156784,
'23 12:00 Z': 0.00130535,
'23 12:30 Z': 0.00094993,
'23 13:00 Z': 0.00086488,
'23 13:30 Z': 0.00059978,
'23 14:00 Z': 0.00080443,
'23 14:30 Z': 0.00058368,
'23 15:00 Z': 0.00027231,
'23 15:30 Z': 0.00053096,
'23 16:00 Z': 0.00067098,
'23 16:30 Z': 0.00073427,
'23 17:00 Z': 0.00064422,
'23 17:30 Z': 0.00060657,
'23 18:00 Z': 0.00049588,
'23 18:30 Z': 0.00041556,
'23 19:00 Z': 0.00068152,
'23 19:30 Z': 0.00090313,
'23 20:00 Z': 0.00115576,
'23 20:30 Z': 0.00233324,
'23 21:00 Z': 0.00259947,
'23 21:30 Z': 0.00148122,
'23 22:00 Z': 0.00118259,
'23 22:30 Z': 0.00086767,
'23 23:00 Z': 0.00061065,
'23 23:30 Z': 0.00072779,
'24 00:00 Z': 0.00070996,
'24 00:30 Z': 0.00060818,
'24 01:00 Z': 0.00063307,
'24 01:30 Z': 0.00067897,
'24 02:00 Z': 0.00038497,
'24 02:30 Z': 0.00031828,
'24 03:00 Z': 0.00045723,
'24 03:30 Z': 0.00046892,
'24 04:00 Z': 0.00042464,
'24 04:30 Z': 0.00043744,
'24 05:00 Z': 0.00037053,
'24 05:30 Z': 0.00024999,
'24 06:00 Z': 0.00058314,
'24 06:30 Z': 0.00041009,
'24 07:00 Z': 0.0007243,
'24 07:30 Z': 0.00093454,
'24 08:00 Z': 0.00155479,
'24 08:30 Z': 0.00273443,
'24 09:00 Z': 0.00212076,
'24 09:30 Z': 0.0018491,
'24 10:00 Z': 0.00190141,
'24 10:30 Z': 0.00159735,
'24 11:00 Z': 0.00097006,
'24 11:30 Z': 0.0009171,
'24 12:00 Z': 0.00089284,
'24 12:30 Z': 0.00094385,
'24 13:00 Z': 0.0007974,
'24 13:30 Z': 0.00041161,
'24 14:00 Z': 0.00029181,
'24 14:30 Z': 0.00025814,
'24 15:00 Z': 0.00040413,
'24 15:30 Z': 0.00048581,
'24 16:00 Z': 0.00030887,
'24 16:30 Z': 0.00035797,
'24 17:00 Z': 0.00036109,
'24 17:30 Z': 0.00046332,
'24 18:00 Z': 0.00036743,
'24 18:30 Z': 0.00028727,
'24 19:00 Z': 0.00084613,
'24 19:30 Z': 0.00063837,
'24 20:00 Z': 0.00087747,
'24 20:30 Z': 0.00142179,
'24 21:00 Z': 0.00157112,
'24 21:30 Z': 0.00135639,
'24 22:00 Z': 0.0009269,
'24 22:30 Z': 0.00067036,
'24 23:00 Z': 0.00021668,
'24 23:30 Z': 0.0003424,
'25 00:00 Z': 0.0006153,
'25 00:30 Z': 0.0004761,
'25 01:00 Z': 0.00060985,
'25 01:30 Z': 0.00080794,
'25 02:00 Z': 0.00069635,
'25 02:30 Z': 0.00046111,
'25 03:00 Z': 0.00051932,
'25 03:30 Z': 0.00065622,
'25 04:00 Z': 0.00058177,
'25 04:30 Z': 0.00043998,
'25 05:00 Z': 0.00044921,
'25 05:30 Z': 0.00026807,
'25 06:00 Z': 0.00029067,
'25 06:30 Z': 0.00052681,
'25 07:00 Z': 0.00068227,
'25 07:30 Z': 0.0008769,
'25 08:00 Z': 0.00142132,
'25 08:30 Z': 0.00194313,
'25 09:00 Z': 0.00137871,
'25 09:30 Z': 0.00095971,
'25 10:00 Z': 0.00167766,
'25 10:30 Z': 0.00164943,
'25 11:00 Z': 0.00130349,
'25 11:30 Z': 0.00143268,
'25 12:00 Z': 0.00163481,
'25 12:30 Z': 0.00163065,
'25 13:00 Z': 0.00169552,
'25 13:30 Z': 0.0013757,
'25 14:00 Z': 0.0009,
'25 14:30 Z': 0.00106958,
'25 15:00 Z': 0.00107608,
'25 15:30 Z': 0.00117659,
'25 16:00 Z': 0.00151034,
'25 16:30 Z': 0.00164205,
'25 17:00 Z': 0.00142599,
'25 17:30 Z': 0.00093537,
'25 18:00 Z': 0.00070448,
'25 18:30 Z': 0.00072845,
'25 19:00 Z': 0.00100464,
'25 19:30 Z': 0.00154093,
'25 20:00 Z': 0.00160345,
'25 20:30 Z': 0.00154966,
'25 21:00 Z': 0.00166285,
'25 21:30 Z': 0.00127127,
'25 22:00 Z': 0.00067357,
'25 22:30 Z': 0.00013184,
'25 23:00 Z': 0.00012956,
'25 23:30 Z': 0.00026291,
'26 00:00 Z': 0.00014542,
'26 00:30 Z': 0.00035174,
'26 01:00 Z': 0.00057137,
'26 01:30 Z': 0.00073402,
'26 02:00 Z': 0.00070881,
'26 02:30 Z': 0.0003,
'26 03:00 Z': 0.00037292,
'26 03:30 Z': 0.00035176,
'26 04:00 Z': 0.00036268,
'26 04:30 Z': 0.00013339,
'26 05:00 Z': 0.00005557,
'26 05:30 Z': 0.00036271,
'26 06:00 Z': 0.00058051,
'26 06:30 Z': 0.00055787,
'26 07:00 Z': 0.00047056,
'26 07:30 Z': 0.00078644,
'26 08:00 Z': 0.00100193,
'26 08:30 Z': 0.00100797,
'26 09:00 Z': 0.00098731,
'26 09:30 Z': 0.00090686,
'26 10:00 Z': 0.00068959,
'26 10:30 Z': 0.00070412,
'26 11:00 Z': 0.00074322,
'26 11:30 Z': 0.00081032,
'26 12:00 Z': 0.00075837,
'26 12:30 Z': 0.00072658,
'26 13:00 Z': 0.00079896,
'26 13:30 Z': 0.00073134,
'26 14:00 Z': 0.00037288,
'26 14:30 Z': 0.00053801,
'26 15:00 Z': 0.00042709,
'26 15:30 Z': 0.000585,
'26 16:00 Z': 0.0012837,
'26 16:30 Z': 0.00127738,
'26 17:00 Z': 0.00095708,
'26 17:30 Z': 0.00080636,
'26 18:00 Z': 0.00060471,
'26 18:30 Z': 0.00042818,
'26 19:00 Z': 0.00030907,
'26 19:30 Z': 0.00075575,
'26 20:00 Z': 0.00105484,
'26 20:30 Z': 0.00203923,
'26 21:00 Z': 0.00129027,
'26 21:30 Z': 0.00080423,
'26 22:00 Z': 0.00122809,
'26 22:30 Z': 0.0004523,
'26 23:00 Z': 0.00044727,
'26 23:30 Z': 0.00059736,
'27 00:00 Z': 0.00063273,
'27 00:30 Z': 0.0004587,
'27 01:00 Z': 0.00049574,
'27 01:30 Z': 0.0005593,
'27 02:00 Z': 0.00039481,
'27 02:30 Z': 0.00035108,
'27 03:00 Z': 0.00046917,
'27 03:30 Z': 0.00041801,
'27 04:00 Z': 0.00050394,
'27 04:30 Z': 0.00060224,
'27 05:00 Z': 0.00062507,
'27 05:30 Z': 0.00040491,
'27 06:00 Z': 0.00070625,
'27 06:30 Z': 0.00054487,
'27 07:00 Z': 0.00095977,
'27 07:30 Z': 0.00135394,
'27 08:00 Z': 0.00142711,
'27 08:30 Z': 0.00122097,
'27 09:00 Z': 0.00107931,
'27 09:30 Z': 0.00095385,
'27 10:00 Z': 0.00095867,
'27 10:30 Z': 0.00087444,
'27 11:00 Z': 0.00084535,
'27 11:30 Z': 0.00100533,
'27 12:00 Z': 0.00094925,
'27 12:30 Z': 0.00099114,
'27 13:00 Z': 0.00109356,
'27 13:30 Z': 0.00084422,
'27 14:00 Z': 0.00048507,
'27 14:30 Z': 0.00034194,
'27 15:00 Z': 0.00043068,
'27 15:30 Z': 0.00073412,
'27 16:00 Z': 0.00107834,
'27 16:30 Z': 0.00109681,
'27 17:00 Z': 0.00123674,
'27 17:30 Z': 0.00109158,
'27 18:00 Z': 0.00068775,
'27 18:30 Z': 0.00081602,
'27 19:00 Z': 0.00077143,
'27 19:30 Z': 0.00102186,
'27 20:00 Z': 0.00123534,
'27 20:30 Z': 0.00142724,
'27 21:00 Z': 0.00165152,
'27 21:30 Z': 0.00129939,
'27 22:00 Z': 0.0010634,
'27 22:30 Z': 0.00093547,
'27 23:00 Z': 0.00075382,
'27 23:30 Z': 0.00056133,
'28 00:00 Z': 0.00057515,
'28 00:30 Z': 0.00053255,
'28 01:00 Z': 0.00086721,
'28 01:30 Z': 0.00073664,
'28 02:00 Z': 0.00062224,
'28 02:30 Z': 0.00045848,
'28 03:00 Z': 0.00039209,
'28 03:30 Z': 0.00031392,
'28 04:00 Z': 0.00032557,
'28 04:30 Z': 0.00029812,
'28 05:00 Z': 0.00048746,
'28 05:30 Z': 0.00030023,
'28 06:00 Z': 0.00050925,
'28 06:30 Z': 0.00064561,
'28 07:00 Z': 0.00056723,
'28 07:30 Z': 0.00107831,
'28 08:00 Z': 0.00157489,
'28 08:30 Z': 0.00153378,
'28 09:00 Z': 0.00106423,
'28 09:30 Z': 0.00107729,
'28 10:00 Z': 0.00112543,
'28 10:30 Z': 0.0008388,
'28 11:00 Z': 0.00113909,
'28 11:30 Z': 0.00125534,
'28 12:00 Z': 0.00125367,
'28 12:30 Z': 0.00080762,
'28 13:00 Z': 0.00092629,
'28 13:30 Z': 0.00084272,
'28 14:00 Z': 0.00050195,
'28 14:30 Z': 0.0002882,
'28 15:00 Z': 0.00063499,
'28 15:30 Z': 0.00088143,
'28 16:00 Z': 0.00142441,
'28 16:30 Z': 0.00153978,
'28 17:00 Z': 0.00143445,
'28 17:30 Z': 0.00114514,
'28 18:00 Z': 0.00079737,
'28 18:30 Z': 0.00103301,
'28 19:00 Z': 0.00099945,
'28 19:30 Z': 0.00121822,
'28 20:00 Z': 0.00112995,
'28 20:30 Z': 0.00153727,
'28 21:00 Z': 0.00152987,
'28 21:30 Z': 0.00119205,
'28 22:00 Z': 0.00142024,
'28 22:30 Z': 0.000604,
'28 23:00 Z': 0.00062749,
'28 23:30 Z': 0.00083811,
'29 00:00 Z': 0.00094932,
'29 00:30 Z': 0.00079374,
'29 01:00 Z': 0.00088408,
'29 01:30 Z': 0.00088106,
'29 02:00 Z': 0.0007319,
'29 02:30 Z': 0.00064825,
'29 03:00 Z': 0.00067577,
'29 03:30 Z': 0.00078016,
'29 04:00 Z': 0.00083509,
'29 04:30 Z': 0.0007651,
'29 05:00 Z': 0.00137243,
'29 05:30 Z': 0.00109667,
'29 06:00 Z': 0.00137273,
'29 06:30 Z': 0.00154762,
'29 07:00 Z': 0.00153095,
'29 07:30 Z': 0.00202744,
'29 08:00 Z': 0.00172942,
'29 08:30 Z': 0.00125794,
'29 09:00 Z': 0.00185803,
'29 09:30 Z': 0.00197254,
'29 10:00 Z': 0.00177828,
'29 10:30 Z': 0.00189489,
'29 11:00 Z': 0.00130934,
'29 11:30 Z': 0.00130577,
'29 12:00 Z': 0.00123664,
'29 12:30 Z': 0.0010783,
'29 13:00 Z': 0.00116017,
'29 13:30 Z': 0.00104824,
'29 14:00 Z': 0.00106542,
'29 14:30 Z': 0.00069913,
'29 15:00 Z': 0.00054445,
'29 15:30 Z': 0.00115175,
'29 16:00 Z': 0.00214317,
'29 16:30 Z': 0.00216215,
'29 17:00 Z': 0.0020171,
'29 17:30 Z': 0.0021346,
'29 18:00 Z': 0.00166332,
'29 18:30 Z': 0.00167034,
'29 19:00 Z': 0.00182949,
'29 19:30 Z': 0.00199024,
'29 20:00 Z': 0.00198041,
'29 20:30 Z': 0.0018732,
'29 21:00 Z': 0.00179652,
'29 21:30 Z': 0.00138739,
'29 22:00 Z': 0.00145049,
'29 22:30 Z': 0.00093233,
'29 23:00 Z': 0.00065614,
'29 23:30 Z': 0.00077564,
'30 00:00 Z': 0.00059114,
'30 00:30 Z': 0.00046373,
'30 01:00 Z': 0.00042115,
'30 01:30 Z': 0.00044856,
'30 02:00 Z': 0.00039079,
'30 02:30 Z': 0.00046499,
'30 03:00 Z': 0.00034899,
'30 03:30 Z': 0.00042184,
'30 04:00 Z': 0.0004155,
'30 04:30 Z': 0.00032646,
'30 05:00 Z': 0.00061359,
'30 05:30 Z': 0.00041512,
'30 06:00 Z': 0.00096618,
'30 06:30 Z': 0.00106961,
'30 07:00 Z': 0.00081636,
'30 07:30 Z': 0.00132456,
'30 08:00 Z': 0.00095402,
'30 08:30 Z': 0.00080784,
'30 09:00 Z': 0.00086261,
'30 09:30 Z': 0.00092739,
'30 10:00 Z': 0.00099728,
'30 10:30 Z': 0.00085239,
'30 11:00 Z': 0.00087959,
'30 11:30 Z': 0.00094815,
'30 12:00 Z': 0.00089352,
'30 12:30 Z': 0.00076571,
'30 13:00 Z': 0.00076824,
'30 13:30 Z': 0.00066233,
'30 14:00 Z': 0.00039594,
'30 14:30 Z': 0.0002502,
'30 15:00 Z': 0.0000995,
'30 15:30 Z': 0.00015877,
'30 16:00 Z': 0.00054924,
'30 16:30 Z': 0.00070842,
'30 17:00 Z': 0.00067908,
'30 17:30 Z': 0.0004643,
'30 18:00 Z': 0.0003152,
'30 18:30 Z': 0.00035696,
'30 19:00 Z': 0.00050869,
'30 19:30 Z': 0.00082066,
'30 20:00 Z': 0.00065484,
'30 20:30 Z': 0.00091228,
'30 21:00 Z': 0.00104626,
'30 21:30 Z': 0.0006801,
'30 22:00 Z': 0.00113434,
'30 22:30 Z': 0.00072462,
'30 23:00 Z': 0.00058878,
'30 23:30 Z': 0.00084884}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[39]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[POOL]]></value>
        <value><![CDATA[ccl]]></value>
        <value><![CDATA[2007-04-01T00:30Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[def ccl_month_gbp(bill, data_source, whole_data):
    bill.setdefault('ccl-kwh', 0)
    bill.setdefault('ccl-gbp', 0)
    bill.setdefault('ccl-rate', 0)

    bill.setdefault('lec-kwh', 0)
    bill.setdefault('lec-gbp', 0)
    bill.setdefault('lec-rate', 0)

    summary = whole_data['summary']
    month_kwh = summary['sum-msp-kwh']
    if month_kwh > 999:
        rate = bill['ccl-rate'] = bill['lec-rate'] = data_source.rate(contract.rateScript(summary['finish-date']), 'ccl_rate')
        if data_source.is_green:
            prefix = 'lec'
        else:
            prefix = 'ccl'

        bill[prefix + '-kwh'] += month_kwh
        bill[prefix + '-gbp'] += month_kwh * rate]]></value>
        <value><![CDATA[def ccl_rate():
    return 0.004410]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[ccl]]></value>
        <value><![CDATA[63]]></value>
        <value><![CDATA[2008-04-01T00:30Z]]></value>
        <value><![CDATA[def ccl_rate():
    return 0.004560]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[ccl]]></value>
        <value><![CDATA[65]]></value>
        <value><![CDATA[2009-04-01T00:30Z]]></value>
        <value><![CDATA[def ccl_rate():
    return 0.0047]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[41]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[POOL]]></value>
        <value><![CDATA[computer]]></value>
        <value><![CDATA[2009-11-27T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[from net.sf.chellow.billing import NonCoreContract
from net.sf.chellow.physical import HhStartDate, MpanCore, Site
from java.util import GregorianCalendar, TimeZone, Locale, Calendar, Date
from net.sf.chellow.monad import UserException, Hiber
from net.sf.chellow.monad.types import MonadDate
from java.sql import Timestamp, ResultSet
from java.lang import System, NumberFormatException, Integer
from org.python.util import PythonInterpreter
from java.io import LineNumberReader
from java.text import SimpleDateFormat, ParseException
from java.math import BigDecimal


cons_types = ['construction', 'commissioning', 'operation']
lec_cats = ['import-net', 'export-net', 'import-gen', 'export-gen', 'import-3rd-party', 'export-3rd-party']

interp_cache = {}

rate_interp_cache = {}

def contract_function(contract, func_name):
    contract_id = contract.getId()
    if contract_id not in interp_cache:
        interp = PythonInterpreter()
        interp.set('contract', contract)
        interp.exec(contract.getChargeScript())
        interp_cache[contract_id] = interp
        
    return interp_cache[contract_id].get(func_name)


def rate(script, name):
    script_id = script.getId()
    if script_id not in rate_interp_cache:
        interp = PythonInterpreter()
        interp.exec(script.getScript())
        rate_interp_cache[script_id] = interp
    
    try:
        return rate_interp_cache[script_id].get(name)()
    except TypeError:
        raise UserException("Problem getting the function '" + name + "' from the script " + str(script_id) + " from the contract " + script.getContract().getName())


def create_comterp():
    interp = PythonInterpreter()
    interp.exec(contract.getChargeScript())
    return interp


def forecast_date():
    cal = MonadDate.getCalendar()
    cal.set(Calendar.DAY_OF_MONTH, 1)
    cal.set(Calendar.MILLISECOND, 0)
    cal.set(Calendar.SECOND, 0)
    cal.set(Calendar.MINUTE, 0)
    return HhStartDate(cal.getTime())


def import_data_sources(contract, search_term, month_start, month_finish, forecast_date, comterp, pw):
    search_term = search_term.strip()
    # is it a forecast?
    if month_finish.after(forecast_date):
        selection_finish = forecast_date.getPrevious()
        cal = MonadDate.getCalendar()
        cal.setTime(forecast_date.getDate())
        cal.add(Calendar.MONTH, -1)
        selection_start = HhStartDate(cal.getTime())
    else:
        selection_start = month_start
        selection_finish = month_finish

    if len(search_term) == 0:
        query = Hiber.session().createQuery("select distinct generation from SupplyGeneration generation where generation.importMpan is not null and generation.importMpan.supplierContract = :contract and generation.startDate.date <= :finishDate and (generation.finishDate is null or generation.finishDate.date >= :startDate)")
    else:
        mpan_core = MpanCore.getMpanCore(search_term)
        supply = mpan_core.getSupply()
        query = Hiber.session().createQuery("select distinct generation from SupplyGeneration generation where generation.supply = :supply and generation.importMpan is not null and generation.importMpan.supplierContract = :contract and generation.startDate.date <= :finishDate and (generation.finishDate is null or generation.finishDate.date >= :startDate)").setEntity('supply', supply)
    generations = query.setEntity('contract', contract).setTimestamp('startDate', selection_start.getDate()).setTimestamp('finishDate', selection_finish.getDate()).scroll()
    while generations.next():
        generation = generations.get(0)
        mpan = generation.getImportMpan()
        mpan_core = mpan.getCore()
        mpan_core_str = str(mpan_core)
        data_source = SupplySource(forecast_date, comterp, pw)
        data_source.init_from_mpan(month_start, month_finish, mpan)
        yield data_source


def hh_list(date):
    utc_cal = GregorianCalendar(TimeZone.getTimeZone("GMT"), Locale.UK)
    ct_cal = GregorianCalendar(TimeZone.getTimeZone("Europe/London"), Locale.UK)
    utc_cal.setTime(date.getDate())
    ct_cal.setTime(date.getDate())
    return [{'used-kwh': 0, 'hist-kwh': 0, 'msp-kwh': 0, 'msp-kvarh': 0, 'end-date': date.getDate(), 'ct-day': ct_cal.get(5), 'utc-month': utc_cal.get(2), 'utc-day': utc_cal.get(5), 'utc-decimal-hour': utc_cal.get(11) + float(utc_cal.get(12)) / 60, 'ct-month': ct_cal.get(2), 'ct-decimal-hour': ct_cal.get(11) + ct_cal.get(12) / 60, 'ct-day-of-week': ct_cal.get(7), 'utc-day-of-week': utc_cal.get(7)}]


class DataSource():
    def set_is_green(self, is_green):
        self.is_green = is_green
        self.summary['is_green'] = is_green


    def contract_function(self, contract, func_name):
        return contract_function(contract, func_name)


    def rate(self, script, name):
        return rate(script, name)


class SiteSource(DataSource):
    def __init__(self, site, start_date, finish_date, forecast_date, comterp, pw):
        if start_date.after(finish_date):
            raise UserException('The start date is after the finish date.')
        self.start_date = start_date
        self.finish_date = finish_date

        self.forecast_date = forecast_date
        self.site_id = site.getId()
        self.is_new = False
        self.id = site.getCode()
        self.is_green = False
        self.comterp = comterp
        self.pw = pw
        

    def init_from_site(self):
        self.is_site = True
        self.is_displaced = False
        self.whole_data = self.create_whole_data(self.start_date, self.finish_date, forecast_date)
        self.summary = self.whole_data['summary']
        self.hh_data = self.whole_data['data']


    def init_from_mpan(self, mpan):
        self.is_site = True
        self.is_displaced = True
        mpan_core = mpan.getCore()
        dso = mpan_core.getDso()
        self.dso_code = dso.getCode()
        llfc = mpan.getLlfc()
        self.llfc_code = llfc.codeAsString()
        self.is_import = llfc.getIsImport()
        self.mpan_core = mpan_core.toString()
        self.voltage_level_code = llfc.getVoltageLevel().getCode()
        self.is_substation = llfc.getIsSubstation()
        self.availability = mpan.getAgreedSupplyCapacity()
        self.pc_code = mpan.getSupplyGeneration().getPc().codeAsString()

        self.whole_data = self.create_whole_data(self.start_date, self.finish_date, forecast_date)
        self.summary = self.whole_data['summary']
        self.hh_data = self.whole_data['data']


    def create_whole_data(self, start_date, finish_date, forecast_date):
        cal = MonadDate.getCalendar()
        cal.setTime(finish_date.getDate())
        year_adjustment = 0
        while cal.getTime().after(self.forecast_date.getDate()):
            cal.add(Calendar.YEAR, -1)
            year_adjustment -= 1
        history_finish = HhStartDate(cal.getTime())
        cal.setTime(start_date.getDate())
        cal.add(Calendar.YEAR, year_adjustment)
        history_start = HhStartDate(cal.getTime())
        summary = {'start-date': start_date, 'finish-date': finish_date, 'is-forecast': not start_date.before(self.forecast_date), 'hist-start': history_start, 'hist-finish': history_finish, 'is-green': self.is_green, 'days': 0}

        cal.setTime(start_date.getDate())
        cal.set(Calendar.HOUR_OF_DAY, 0)
        cal.set(Calendar.MINUTE, 0)
        while not HhStartDate(cal.getTime()).after(finish_date):
            summary['days'] += 1
            cal.add(Calendar.DAY_OF_MONTH, 1)

        suffixes = ['-kwh', '-kw', '-kvarh', '-kvar', '-kva', '-kvah']
        is_forecast = finish_date.after(self.forecast_date)
        hh_data = []
        utc_cal = GregorianCalendar(TimeZone.getTimeZone("GMT"), Locale.UK)
        ct_cal = GregorianCalendar(TimeZone.getTimeZone("Europe/London"), Locale.UK)

        site = Site.getSite(self.site_id)
        con = Hiber.session().connection()

        for group in site.groups(summary['hist-start'], summary['hist-finish'], True):
            supplies = group.getSupplies()
            if len(supplies) == 0:
                continue
            hh_date = group.getFrom()
            group_to = group.getTo()
            supplies_sql = ','.join(str(supply.getId()) for supply in supplies)
            stmt = con.prepareStatement("select hh_datum.value, hh_datum.start_date, hh_datum.status, channel.is_import, source.code from hh_datum, channel, supply_generation, supply, source where hh_datum.channel_id = channel.id and channel.supply_generation_id = supply_generation.id and supply_generation.supply_id = supply.id and supply.source_id = source.id and channel.is_kwh is true and hh_datum.start_date >= ? and hh_datum.start_date <= ? and supply.id in (" + supplies_sql + ") order by hh_datum.start_date", ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.CLOSE_CURSORS_AT_COMMIT)
            stmt.setTimestamp(1, Timestamp(group.getFrom().getDate().getTime()))
            stmt.setTimestamp(2, Timestamp(group_to.getDate().getTime()))
            stmt.setFetchSize(100)
            rs = stmt.executeQuery()
            if rs.next():
                hh_value = rs.getFloat("value")
                hh_start_date = rs.getTimestamp("start_date")
                is_import = rs.getBoolean("is_import")
                status = rs.getString("status")
                source_code = rs.getString("code")
            else:
                continue
            while not hh_date.after(group_to):
                export_net_kwh = 0
                import_net_kwh = 0
                export_gen_kwh = 0
                import_gen_kwh = 0
                import_3rd_party_kwh = 0
                export_3rd_party_kwh = 0                
                while hh_start_date is not None and hh_start_date.getTime() == hh_date.getDate().getTime():
                    if not is_import and source_code in ('net', 'gen-net'):
                        export_net_kwh += hh_value
                    if is_import and source_code in ('net', 'gen-net'):
                        import_net_kwh += hh_value
                    if (is_import and source_code == 'gen') or (not is_import and source_code == 'gen-net'):
                        import_gen_kwh += hh_value
                    if (not is_import and source_code == 'gen') or (is_import and source_code == 'gen-net'):
                        export_gen_kwh += hh_value
                    if (is_import and source_code == '3rd-party') or (not is_import and source_code == '3rd-party-reverse'):
                        import_3rd_party_kwh += hh_value
                    if (not is_import and source_code == '3rd-party') or (is_import and source_code == '3rd-party-reverse'):
                        export_3rd_party_kwh += hh_value
                    if rs.next():
                        source_code = rs.getString("code")
                        hh_value = rs.getFloat("value")
                        hh_start_date = rs.getTimestamp("start_date")
                        is_import = rs.getBoolean("is_import")
                        status = rs.getString("status")
                    else:
                        hh_start_date = None

                ct_cal.setTime(hh_date.getDate())
                ct_cal.add(Calendar.YEAR, -1 * year_adjustment)
                utc_cal.setTime(hh_date.getDate())
                utc_cal.add(Calendar.YEAR, -1 * year_adjustment)
                hh_values = {'status': 'E', 'hist-start-date': hh_date.getDate(), 'hist-import-net-kwh': import_net_kwh, 'hist-import-net-kvarh': 0, 'hist-export-net-kwh': export_net_kwh, 'hist-export-net-kvarh': 0, 'hist-import-gen-kwh': import_gen_kwh, 'hist-export-gen-kwh': export_gen_kwh, 'hist-import-3rd-party-kwh': import_3rd_party_kwh, 'hist-export-3rd-party-kwh': export_3rd_party_kwh, 'start-date': hh_date.getDate(), 'ct-day': ct_cal.get(5), 'utc-year': utc_cal.get(Calendar.YEAR), 'utc-month': utc_cal.get(2), 'utc-day': utc_cal.get(5), 'utc-hour': utc_cal.get(Calendar.HOUR_OF_DAY), 'utc-decimal-hour': utc_cal.get(11) + float(utc_cal.get(12)) / 60, 'utc-minute': utc_cal.get(Calendar.MINUTE), 'ct-month': ct_cal.get(2), 'ct-decimal-hour': ct_cal.get(11) + ct_cal.get(12) / 60, 'ct-day-of-week': ct_cal.get(7), 'utc-day-of-week': utc_cal.get(7)}
                hh_values['hist-used-3rd-party-kwh'] = hh_values['hist-import-3rd-party-kwh'] - hh_values['hist-export-3rd-party-kwh']
                hh_values['used-3rd-party-kwh'] = hh_values['hist-used-3rd-party-kwh']
                hh_values['hist-kwh'] = hh_values['hist-import-gen-kwh'] - hh_values['hist-export-gen-kwh'] - hh_values['hist-export-net-kwh']
                
                hh_values['msp-kwh'] = hh_values['hist-kwh']
                for lec_cat in lec_cats:
                    hh_values[lec_cat + '-kwh'] = hh_values['hist-' + lec_cat + '-kwh']

                hh_values['hist-used-kwh'] = hh_values['hist-kwh'] + hh_values['hist-import-net-kwh'] + hh_values['hist-used-3rd-party-kwh']
                hh_values['hist-imp-msp-kvarh'] = 0
                hh_values['imp-msp-kvarh'] = 0
                hh_values['exp-msp-kvarh'] = 0

                hh_values['used-kwh'] = hh_values['hist-used-kwh']
                hh_values['import-net-kwh'] = hh_values['used-kwh'] - hh_values['msp-kwh']
                hh_values['msp-kw'] = hh_values['msp-kwh'] * 2
                hh_values['imp-msp-kvar'] = hh_values['imp-msp-kvarh'] * 2
                hh_values['exp-msp-kvar'] = hh_values['exp-msp-kvarh'] * 2

                hh_data.append(hh_values)
                hh_date = hh_date.getNext()
            rs.close()
            stmt.close()
        
        if len(hh_data) == 0:
            utc_cal = GregorianCalendar(TimeZone.getTimeZone("GMT"), Locale.UK)
            ct_cal = GregorianCalendar(TimeZone.getTimeZone("Europe/London"), Locale.UK)
            utc_cal.setTime(self.finish_date.getDate())
            ct_cal.setTime(self.finish_date.getDate())
            hh_data.append({'status': 'E', 'hist-start-date': history_finish.getDate(), 'status': 'E', 'hist-import-net-kwh': 0, 'hist-import-net-kvarh': 0, 'hist-export-net-kwh': 0, 'hist-export-net-kvarh': 0, 'hist-import-gen-kwh': 0, 'hist-export-gen-kwh': 0, 'hist-import-3rd-party-kwh': 0, 'hist-export-3rd-party-kwh': 0, 'hist-kwh': 0, 'msp-kwh': 0, 'msp-kw': 0, 'export-net-kwh': 0, 'import-gen-kwh': 0, 'export-gen-kwh': 0, 'hist-used-kwh': 0, 'hist-kvarh': 0, 'imp-msp-kvarh': 0, 'imp-msp-kvar': 0, 'exp-msp-kvarh': 0, 'exp-msp-kvar': 0, 'used-kwh': 0, 'import-net-kwh': 0, 'import-3rd-party-kwh': 0, 'export-3rd-party-kwh': 0, 'used-3rd-party-kwh': 0, 'start-date': self.finish_date.getDate(), 'ct-day': ct_cal.get(5), 'utc-month': utc_cal.get(2), 'utc-day': utc_cal.get(5), 'utc-decimal-hour': utc_cal.get(11) + float(utc_cal.get(12)) / 60, 'ct-month': ct_cal.get(2), 'ct-decimal-hour': ct_cal.get(11) + ct_cal.get(12) / 60, 'ct-day-of-week': ct_cal.get(7), 'utc-day-of-week': utc_cal.get(7)})
        if self.is_displaced and self.pc_code == '00' and self.is_import:
            dso_contract = get_dso_contract(self.dso_code, HhStartDate(hh_data[0]['start-date']), self.pw)
            summary['dso-bill'] = {}
            contract_function(dso_contract, 'hh')(summary['dso-bill'], hh_data, self)
            datum_list = list(datum['gsp-kwh'] for datum in hh_data)
            summary['sum-gsp-kwh'] = sum(datum_list)
            summary['max-gsp-kwh'] = max(datum_list)


        for name in ['used-kwh', 'hist-kwh', 'import-net-kwh', 'export-net-kwh', 'msp-kwh', 'imp-msp-kvarh', 'import-gen-kwh', 'export-gen-kwh', 'import-3rd-party-kwh', 'export-3rd-party-kwh', 'used-3rd-party-kwh']:
            datum_list = list(datum[name] for datum in hh_data)
            summary['sum-' + name] = sum(datum_list)
            summary['max-' + name] = max(datum_list)
        return {'summary': summary, 'data': hh_data}


class SupplySource(DataSource):
    def __init__(self, forecast_date, comterp, pw):
        self.forecast_date = forecast_date
        self.whole_data = None
        self.comterp = comterp
        self.pw = pw
        self.is_displaced = False

    def init_from_mpan(self, start_date, finish_date, mpan):
        self.site_id = None
        mpan_core = mpan.getCore()
        self.id = mpan_core.toString()
        if start_date.after(finish_date):
            raise UserException('The start date is after the finish date.')
        self.start_date = start_date
        self.finish_date = finish_date
        self.llfc = mpan.getLlfc()
        self.llfc_code = self.llfc.codeAsString()
        self.voltage_level = self.llfc.getVoltageLevel()
        self.voltage_level_code = self.voltage_level.getCode()
        self.is_substation = self.llfc.getIsSubstation()
        self.dso_code = mpan_core.getDso().getCode()
        self.availability = mpan.getAgreedSupplyCapacity()
        self.is_new = False
        self.supplier_account = mpan.getSupplierAccount()
        if mpan.getSsc() is None:
            self.ssc_code = None
        else:
            self.ssc_code = mpan.getSsc().codeAsString()
        self.pc_code = mpan.getSupplyGeneration().getPc().codeAsString()

        if self.forecast_date.after(start_date):
            generation = mpan.getSupplyGeneration()
            if generation.getStartDate().after(start_date):
                self.start_date = generation.getStartDate()
            else:
                self.start_date = start_date
            if finish_date.after(generation.getFinishDate()):
                self.finish_date = generation.getFinishDate()
            else:
                self.finish_date = finish_date
            self.is_forecast = False
        else:
            self.is_forecast = True
        self.is_import = self.llfc.getIsImport()

        self.whole_data = self.create_whole_data(self.start_date, self.finish_date, self.forecast_date)
        self.summary = self.whole_data['summary']
        self.hh_data = self.whole_data['data']


    def hh_list_month(self, month_start):
        cal = MonadDate.getCalendar()
        cal.setTime(month_start)
        cal.add(Calendar.MONTH, 1)
        cal.add(Calendar.MINUTE, -30)
        month_finish = HhStartDate(cal.getTime())
        return self.hh_list(month_start, month_finish, pw)


    def create_whole_data(self, start_date, finish_date, forecast_date):
        timing = System.currentTimeMillis()
        #self.pw.println("starting create whole data start date " + str(start_date) + " finish date " + str(finish_date)  + str(System.currentTimeMillis() - timing))

        cal = MonadDate.getCalendar()
        cal.setTime(finish_date.getDate())
        year_adjustment = 0
        while cal.getTime().after(forecast_date.getDate()):
            cal.add(Calendar.YEAR, -1)
            year_adjustment -= 1
        history_finish = HhStartDate(cal.getTime())
        cal.setTime(start_date.getDate())
        cal.add(Calendar.YEAR, year_adjustment)
        history_start = HhStartDate(cal.getTime())

        summary = {'start-date': start_date, 'finish-date': finish_date, 'is-forecast': not start_date.before(forecast_date), 'hist-start': history_start, 'hist-finish': history_finish, 'days': 0}

        cal.setTime(start_date.getDate())
        cal.set(Calendar.HOUR_OF_DAY, 0)
        cal.set(Calendar.MINUTE, 0)
        while not HhStartDate(cal.getTime()).after(finish_date):
            summary['days'] += 1
            cal.add(Calendar.DAY_OF_MONTH, 1)

        suffixes = ['-kwh', '-kw', '-kvarh', '-kvar', '-kva', '-kvah']

        #pw.println("done setup " + str(System.currentTimeMillis() - timing))

        data_hh = []
        utc_cal = GregorianCalendar(TimeZone.getTimeZone("GMT"), Locale.UK)
        ct_cal = GregorianCalendar(TimeZone.getTimeZone("Europe/London"), Locale.UK)

        #self.pw.println("whole data: about to prepare query " +  str(System.currentTimeMillis() - timing))
        mpan_core = MpanCore.getMpanCore(self.id)
        supply = mpan_core.getSupply()
        con = Hiber.session().connection()
        if self.is_import:
            hql = "select sum(case when channel.is_kwh then hh_datum.value else 0 end) as kwh, max(case when channel.is_kwh then hh_datum.status else '' end) as status, sum(case when not channel.is_kwh and channel.is_import then hh_datum.value else 0 end) as imp_kvarh, sum(case when not channel.is_kwh and not channel.is_import then hh_datum.value else 0  end) as exp_kvarh, hh_datum.start_date from hh_datum, channel, supply_generation where hh_datum.channel_id = channel.id and channel.supply_generation_id = supply_generation.id and supply_generation.supply_id = ? and (channel.is_import = TRUE or channel.is_kwh = FALSE) and hh_datum.start_date >= ? and hh_datum.start_date <= ? group by hh_datum.start_date order by hh_datum.start_date"
        else:
            hql = "select sum(case when channel.is_kwh then hh_datum.value else 0 end) as kwh, max(case when not channel.is_import and channel.is_kwh then hh_datum.status else '' end) as status, sum(case when not channel.is_kwh and channel.is_import then hh_datum.value else 0 end) as imp_kvarh, sum(case when not channel.is_kwh and not channel.is_import then hh_datum.value else 0  end) as exp_kvarh, hh_datum.start_date from hh_datum, channel, supply_generation where hh_datum.channel_id = channel.id and channel.supply_generation_id = supply_generation.id and supply_generation.supply_id = ? and (channel.is_import = FALSE or channel.is_kwh = FALSE) and hh_datum.start_date >= ? and hh_datum.start_date <= ? group by hh_datum.start_date order by hh_datum.start_date"
        stmt = con.prepareStatement(hql, ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.CLOSE_CURSORS_AT_COMMIT)
        stmt.setLong(1, supply.getId())
        stmt.setTimestamp(2, Timestamp(history_start.getDate().getTime()))
        stmt.setTimestamp(3, Timestamp(history_finish.getDate().getTime()))
        #stmt.setFetchSize(100)
        rs = stmt.executeQuery()
        #self.pw.println("whole data: starting loop " + str(System.currentTimeMillis() - timing))
        year_advance = -1 * year_adjustment
        while rs.next():
            start_date = rs.getTimestamp('start_date')
            msp_kwh = rs.getBigDecimal('kwh').doubleValue()
            imp_kvarh = rs.getBigDecimal('imp_kvarh').doubleValue()
            exp_kvarh = rs.getBigDecimal('exp_kvarh').doubleValue()
            status = rs.getString('status')

            utc_cal.setTime(start_date)
            ct_cal.setTime(start_date)
            utc_cal.add(Calendar.YEAR, year_advance)
            ct_cal.add(Calendar.YEAR, year_advance)

            data_hh.append({'status': status, 'imp-msp-kvarh': imp_kvarh, 'imp-msp-kvar': imp_kvarh * 2, 'exp-msp-kvarh': exp_kvarh, 'exp-msp-kvar': exp_kvarh * 2, 'msp-kw': msp_kwh * 2, 'msp-kwh': msp_kwh, 'hist-kwh': msp_kwh, 'hist-start-date': start_date, 'start-date': utc_cal.getTime(), 'ct-day': ct_cal.get(5), 'utc-month': utc_cal.get(2), 'utc-day': utc_cal.get(5), 'utc-decimal-hour': utc_cal.get(11) + float(utc_cal.get(12)) / 60, 'utc-year': utc_cal.get(Calendar.YEAR), 'utc-hour': utc_cal.get(Calendar.HOUR_OF_DAY), 'utc-minute': utc_cal.get(Calendar.MINUTE), 'ct-year': ct_cal.get(Calendar.YEAR), 'ct-month': ct_cal.get(2), 'ct-decimal-hour': ct_cal.get(11) + float(ct_cal.get(12)) / 60, 'ct-day-of-week': ct_cal.get(7), 'utc-day-of-week': utc_cal.get(7)})

        rs.close()
        stmt.close()

        #self.pw.println("whole data: done looping " + str(System.currentTimeMillis() - timing))
        if len(data_hh) == 0:
            utc_cal = GregorianCalendar(TimeZone.getTimeZone("GMT"), Locale.UK)
            ct_cal = GregorianCalendar(TimeZone.getTimeZone("Europe/London"), Locale.UK)
            utc_cal.setTime(self.finish_date.getDate())
            ct_cal.setTime(self.finish_date.getDate())
            data_hh.append({'status': 'E', 'used-kwh': 0, 'hist-kwh': 0, 'msp-kwh': 0, 'gsp-kwh': 0, 'msp-kw': 0, 'imp-msp-kvarh': 0, 'imp-msp-kvar': 0, 'exp-msp-kvarh': 0, 'hist-start-date': history_finish.getDate(), 'start-date': finish_date.getDate(), 'ct-day': ct_cal.get(5), 'utc-month': utc_cal.get(2), 'utc-day': utc_cal.get(5), 'utc-decimal-hour': utc_cal.get(11) + float(utc_cal.get(12)) / 60, 'ct-month': ct_cal.get(2), 'ct-decimal-hour': ct_cal.get(11) + ct_cal.get(12) / 60, 'ct-day-of-week': ct_cal.get(7), 'utc-day-of-week': utc_cal.get(7), 'utc-year': utc_cal.get(Calendar.YEAR), 'utc-hour': utc_cal.get(Calendar.HOUR), 'utc-minute': utc_cal.get(Calendar.MINUTE)})

        #self.pw.println("whole data: starting dso hh " + str(System.currentTimeMillis() - timing))
        dso_contract = get_dso_contract(self.dso_code, HhStartDate(data_hh[0]['start-date']), self.pw)
        if self.pc_code == '00':
            summary['dso-bill'] = {}
            contract_function(dso_contract, 'hh')(summary['dso-bill'], data_hh, self)
            summary['sum-gsp-kwh'] = sum(datum['gsp-kwh'] for datum in data_hh)
            summary['max-gsp-kwh'] = max(datum['gsp-kwh'] for datum in data_hh)

        for name in ['msp-kwh', 'hist-kwh', 'imp-msp-kvarh', 'exp-msp-kvarh']:
            datum_list = [datum[name] for datum in data_hh]
            summary['sum-' + name] = sum(datum_list)
            summary['max-' + name] = max(datum_list)

        #self.pw.println("finished create whole data " + str(System.currentTimeMillis() - timing))

        return {'summary': summary, 'data': data_hh}



def get_dso_contract(dso_code, date, pw):
    return Hiber.session().createQuery("select distinct contract from DsoContract contract join contract.rateScripts script where contract.party.code = :dsoCode and contract.name like 'main%' and script.startDate.date <= :date and (script.finishDate.date is null or script.finishDate.date >= :date)").setString('dsoCode', dso_code).setTimestamp('date', date.getDate()).uniqueResult()


def site_source(site, start_date, finish_date, forecast_date, comterp, pw):
    return SiteSource(site, start_date, finish_date, forecast_date, comterp, pw)

def supply_source(forecast_date, comterp, pw):
    #timing = System.currentTimeMillis()
    #pw.println("supply_source: start " + str(System.currentTimeMillis() - timing))

    source = SupplySource(forecast_date, comterp, pw)
    #pw.println("supply_source: finish " + str(System.currentTimeMillis() - timing))
    return source

def get_edi_parser(reader):
    return EdiParser(reader)

class EdiParser():
    def __init__(self, reader):
        self.lreader = LineNumberReader(reader)
        self.date_format = SimpleDateFormat("yyMMdd", Locale.UK)
        self.date_format.setCalendar(MonadDate.getCalendar())


    def next_segment(self):
        line = self.lreader.readLine()
        if line is None:
            return None
        if line[-1] != "'":
            raise UserException("This parser expects one segment per line.")
        self.elements = [element.split(':') for element in line[4:-1].split("+")]
        return line[:3]


    def to_big_decimal(self, components):
        result = BigDecimal(components[0])
        if len(components) > 1 and components[-1] == "R":
            result = result.multiply(BigDecimal("-1"))
        return result


    def to_date(self, component):
        try:
            return HhStartDate(self.date_format.parse(component))
        except ParseException, e:
            raise UserException("Couldn't parse " + component + " as a date. " + e.getMessage())


    def to_int(self, component):
        try:
            return Integer.parseInt(component)
        except NumberFormatException, e:
            raise UserException("Couldn't parse " + component + " as an integer. " + e.getMessage())


    def close(self):
        try:
            self.lreader.close()
        except IOException, e:
            raise UserException("Can't read SSE EDI file.")
        except Throwable, e:
            raise UserException("Problem at line number " + self.lreader.getLineNumber() + "\n" + line + "\n of the EDI file.\n" + HttpException.getStackTraceString(e))


def displaced_mpan(site_group, start_date, finish_date):
    has_displaced = False
    mpans = {}
    for supply in site_group.getSupplies():
        source_code = supply.getSource().getCode()
        if source_code in ['gen', 'gen-net']:
            has_displaced = True
        if source_code in ['net', 'gen-net']:
            for mpan in Hiber.session().createQuery("from Mpan mpan where mpan.llfc.isImport is true and mpan.supplyGeneration.pc.code = 0 and mpan.supplyGeneration.supply = :supply and mpan.supplyGeneration.startDate.date <= :finishDate and (mpan.supplyGeneration.finishDate is null or mpan.supplyGeneration.finishDate.date >= :startDate) order by mpan.supplyGeneration.startDate.date").setEntity('supply', supply).setTimestamp('startDate', start_date.getDate()).setTimestamp('finishDate', finish_date.getDate()).list():
                mpans[mpan.getCore().toString()] = mpan
    if has_displaced:
        keys = mpans.keys()
        keys.sort()
        return mpans[keys[0]]
    else:
        return None]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[45]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[POOL]]></value>
        <value><![CDATA[TRIAD]]></value>
        <value><![CDATA[2005-04-01T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[from net.sf.chellow.billing import NonCoreContract
from net.sf.chellow.physical import HhStartDate, MpanCore
from net.sf.chellow.monad.types import MonadDate
from java.util import Calendar
from java.lang import System

def get_triad_dates(date, data_source):
    rate_script = contract.rateScript(date)
    return data_source.rate(rate_script, 'triad_dates')


def triad(bill, dso_contract, month_begin, month_end, data_source, rate_period='monthly'):
    timing = System.currentTimeMillis()
    #data_source.pw.println("starting triad " + str(System.currentTimeMillis() - timing) + "month begin " + str(month_begin) + " month end " + str(month_end) + " " + str(dso_contract.getId()))

    utc_cal = MonadDate.getCalendar()
    utc_cal.setTime(month_begin.getDate())
    month_num = utc_cal.get(Calendar.MONTH)

    # Get start of last financial year
    while utc_cal.get(Calendar.MONTH) != Calendar.APRIL:
        utc_cal.add(Calendar.MONTH, -1)
    financial_year_start = HhStartDate(utc_cal.getTime())
    utc_cal.add(Calendar.YEAR, -1)
    last_financial_year_start = HhStartDate(utc_cal.getTime())
    utc_cal.add(Calendar.YEAR, 2)
    utc_cal.add(Calendar.MINUTE, -30)
    financial_year_finish = HhStartDate(utc_cal.getTime())

    triad_dates = []
    for dt in get_triad_dates(last_financial_year_start, data_source):
        utc_cal.setTime(dt.getDate())
        utc_cal.add(Calendar.YEAR, 1)
        triad_dates.append(HhStartDate(utc_cal.getTime()))
    #data_source.pw.println("triad dates " + str(triad_dates))
    est_triad_kws = [data_source.create_whole_data(t_date, t_date, financial_year_start)['data'][0] for t_date in triad_dates]

    #pw.println("finished getting data " + str(System.currentTimeMillis() - timing))
    if data_source.site_id is None and (data_source.is_new or triad_dates[2].before(MpanCore.getMpanCore(data_source.id).getSupply().getGenerationFirst().getStartDate())):
        triad_rate_script = NonCoreContract.getNonCoreContract("TRIAD Estimates").rateScript(month_begin)
        triad_estimates = data_source.rate(triad_rate_script, 'triad_estimates')
        if data_source.id not in triad_estimates:
             raise Exception('The id ' + data_source.id + ' cannot be found in the list of triad estimates in the rate script.')
        est_triad_kw = triad_estimates[data_source.id]
        est_triad_kws = [{'gsp-kw': est_triad_kw, 'msp-kw': est_triad_kw, 'laf': 1, 'end-date': tdate.getDate()} for tdate in triad_dates]
    
    triad_calc(bill, 'triad-estimate', dso_contract, est_triad_kws, financial_year_start, data_source)

    est_triad_gbp = bill['triad-estimate-rate'] * bill['triad-estimate-gsp-kw']

    if rate_period == 'monthly':
        interval_type = Calendar.MONTH
        total_intervals = 12

        est_intervals = 1
        bill['triad-estimate-months'] = est_intervals
    else:
        utc_cal.setTime(financial_year_finish.getDate())
        total_intervals = 0
        while utc_cal.getTime().after(financial_year_start.getDate()):
            total_intervals += 1
            utc_cal.add(Calendar.DAY_OF_MONTH, -1)
        interval_type = Calendar.DAY_OF_MONTH

        est_intervals = data_source.summary['days']
        bill['triad-estimate-days'] = est_intervals

    bill['triad-estimate-gbp'] = est_triad_gbp / total_intervals * est_intervals

    if month_num == Calendar.MARCH and not data_source.is_new:
        #T1 Date, T1 MSP kW, T1 Status, T1 LAF, T1 GSP kW, T2 Date, T2 MSP kW, T2 Status, T2 LAF, T2 GSP kW, T3 Date, T3 MSP kW, T3 Status, T3 LAF, T3 GSP kW, GSP kW, GBP
        #data_source.pw.println('t dates ' + str(get_triad_dates(month_begin, data_source)))
        triad_kws = [data_source.create_whole_data(t_date, t_date, data_source.forecast_date)['data'][0] for t_date in get_triad_dates(month_begin, data_source)]

        triad = triad_calc(bill, 'triad-actual', dso_contract, triad_kws, financial_year_start, data_source)
        bill['triad-actual-gbp'] = bill['triad-actual-rate'] * bill['triad-actual-gsp-kw']

        utc_cal.setTime(month_end.getDate())
        sup = MpanCore.getMpanCore(data_source.id).getSupply()
        sup_gen = sup.getGeneration(HhStartDate(utc_cal.getTime()))
        est_intervals = 0
        march_intervals = 0
        if rate_period == 'monthly':
            interval_type = Calendar.MONTH
        else:
            interval_type = Calendar.DAY_OF_MONTH
        while sup_gen is not None and utc_cal.getTime().after(financial_year_start.getDate()) :
            est_intervals += 1                
            utc_cal.add(interval_type, -1)
            if HhStartDate(utc_cal.getTime()).after(sup_gen.getFinishDate()):
                sup_gen = sup.getGeneration(HhStartDate(utc_cal.getTime()))
        if rate_period == 'monthly':
            bill['triad-all-estimates-months'] = est_intervals
        else:
            bill['triad-all-estimates-days'] = est_intervals
        bill['triad-all-estimates-gbp'] = est_triad_gbp / total_intervals * est_intervals * -1

    #data_source.pw.println("finished triad " + str(System.currentTimeMillis() - timing))

def triad_calc(bill, prefix, dso_contract, triad_data, financial_year_start, data_source):
    gsp_kw = 0
    for i in range(len(triad_data)):
        triad_hh = triad_data[i]
        triad_prefix = prefix + '-' + str(i)
        bill[triad_prefix + '-date'] = HhStartDate(triad_hh['hist-start-date'])
        bill[triad_prefix + '-msp-kw'] = triad_hh['msp-kw']
        bill[triad_prefix + '-status'] = triad_hh['status']
        bill[triad_prefix + '-laf'] = triad_hh['laf']
        bill[triad_prefix + '-gsp-kw'] = triad_hh['gsp-kw']
        gsp_kw += triad_hh['gsp-kw']

    bill[prefix + '-gsp-kw'] = gsp_kw / 3
    bill[prefix + '-rate'] = data_source.rate(dso_contract.rateScript(financial_year_start), 'triad')]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def triad_dates():
    return [HhStartDate("2005-11-28T17:00Z"), HhStartDate("2006-01-05T17:00Z"), HhStartDate("2006-02-03T17:30Z")]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[TRIAD]]></value>
        <value><![CDATA[73]]></value>
        <value><![CDATA[2006-04-01T00:00Z]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def triad_dates():
    return [HhStartDate("2007-01-23T17:00Z"), HhStartDate("2006-12-20T17:00Z"), HhStartDate("2007-02-08T17:30Z")]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[TRIAD]]></value>
        <value><![CDATA[75]]></value>
        <value><![CDATA[2007-04-01T00:00Z]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def triad_dates():
    return [HhStartDate("2007-12-17T17:00Z"), HhStartDate("2008-01-03T17:00Z"), HhStartDate("2007-11-26T17:00Z")]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[TRIAD]]></value>
        <value><![CDATA[77]]></value>
        <value><![CDATA[2008-04-01T00:00Z]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def triad_dates():
    return [HhStartDate("2009-01-06T17:00Z"), HhStartDate("2008-12-01T17:00Z"), HhStartDate("2008-12-15T17:00Z")]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[TRIAD]]></value>
        <value><![CDATA[79]]></value>
        <value><![CDATA[2009-04-01T00:00Z]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def triad_dates():
    return [HhStartDate("2010-01-07T17:00Z"), HhStartDate("2010-01-25T17:00Z"), HhStartDate("2009-12-15T17:00Z")]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[TRIAD]]></value>
        <value><![CDATA[81]]></value>
        <value><![CDATA[2010-04-01T00:00Z]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def triad_dates():
    return [HhStartDate("2011-01-07T17:00Z"), HhStartDate("2011-01-25T17:00Z"), HhStartDate("2010-12-15T17:00Z")]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[47]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[POOL]]></value>
        <value><![CDATA[vat]]></value>
        <value><![CDATA[2010-03-25T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[]]></value>
    </line>
</csv>
