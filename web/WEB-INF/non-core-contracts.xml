<?xml version="1.0"?>
<csv>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[43]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[POOL]]></value>
        <value><![CDATA[aahedc]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def hh(bill, supply_source, whole_data=None):
    if whole_data is None:
        whole_data = supply_source.whole_data

    hh_data = whole_data['data']
    summary = whole_data['summary']

    rate_script = contract.rateScript(summary['start-date'])

    bill['aahedc-gsp-kwh'] = summary['sum-gsp-kwh']
    bill['aahedc-msp-kwh'] = summary['sum-msp-kwh']
    bill['aahedc-rate'] = supply_source.comterp.get('rate')(rate_script, 'aahedc_gbp_per_gsp_kwh')
    bill['aahedc-gbp'] = bill['aahedc-gsp-kwh'] * bill['aahedc-rate']]]></value>
        <value><![CDATA[61]]></value>
        <value><![CDATA[2000-11-26T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[def aahedc_gbp_per_gsp_kwh():
    return 0.00016456]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[aahedc]]></value>
        <value><![CDATA[107]]></value>
        <value><![CDATA[2010-04-01T00:00Z]]></value>
        <value><![CDATA[def aahedc_gbp_per_gsp_kwh():
    return 0.00016091]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[67]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[163]]></value>
        <value><![CDATA[2006-01-01T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[def days():
    return []]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[165]]></value>
        <value><![CDATA[2010-04-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return [2, 5]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[167]]></value>
        <value><![CDATA[2010-05-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return [3, 31]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[169]]></value>
        <value><![CDATA[2010-06-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return []]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[171]]></value>
        <value><![CDATA[2010-08-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return [30]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[173]]></value>
        <value><![CDATA[2010-09-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return []]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[175]]></value>
        <value><![CDATA[2010-12-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return [27, 28]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[177]]></value>
        <value><![CDATA[2011-01-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return [3]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[179]]></value>
        <value><![CDATA[2011-02-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return []]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[181]]></value>
        <value><![CDATA[2011-04-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return [22, 25]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[183]]></value>
        <value><![CDATA[2011-05-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return [2, 30]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[185]]></value>
        <value><![CDATA[2011-06-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return []]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[187]]></value>
        <value><![CDATA[2011-08-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return [29]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[189]]></value>
        <value><![CDATA[2011-09-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return []]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[191]]></value>
        <value><![CDATA[2011-12-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return [26, 27]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[193]]></value>
        <value><![CDATA[2012-01-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return [2]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[195]]></value>
        <value><![CDATA[2012-02-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return []]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[197]]></value>
        <value><![CDATA[2012-04-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return [6, 9]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[199]]></value>
        <value><![CDATA[2012-05-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return [1]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[201]]></value>
        <value><![CDATA[2012-06-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return [4, 5]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[203]]></value>
        <value><![CDATA[2012-07-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return []]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[205]]></value>
        <value><![CDATA[2012-08-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return [27]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[207]]></value>
        <value><![CDATA[2012-09-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return []]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bank-holidays]]></value>
        <value><![CDATA[209]]></value>
        <value><![CDATA[2012-12-01T00:00Z]]></value>
        <value><![CDATA[def days():
    return [25, 26]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[57]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[bill-parser-bgb.edi]]></value>
        <value><![CDATA[from net.sf.chellow.billing import BillParser, RawBill, NonCoreContract, BillType
from net.sf.chellow.physical import ReadType, HhStartDate, Units, RawRegisterRead, Tpr
from org.python.util import PythonInterpreter
from net.sf.chellow.monad import Hiber, UserException
from java.math import BigDecimal


read_type_map = {'00': 'N', '01': 'E', '02': 'E', '04': 'C', '06': 'X', '07': 'N'}

class Parser(BillParser):
    def __init__(self, reader):
        computer = NonCoreContract.getNonCoreContract('computer')
        comterp = PythonInterpreter()
        comterp.exec(computer.getChargeScript())
        self.parser = comterp.get('get_edi_parser')(reader)
        self.debug_str = ''


    def getRawBills(self):
        raw_bills = []
        Hiber.flush();
        code = self.parser.next_segment()
        while code != None:
            if code == "CLO":
                cloc = self.parser.elements[0]
                account_reference = cloc[1]
            elif code == "BCD":
                ivdt = self.parser.elements[0]
                invn = self.parser.elements[2]
                btcd = self.parser.elements[5]
                    
                invoice_number = invn[0]
                bill_type = BillType.getBillType(btcd[0])
                issue_date = self.parser.to_date(ivdt[0]).getDate()
            elif code == "MHD":
                type = self.parser.elements[1]
                message_type = type[0]
                if message_type == "UTLBIL":
                    issue_date = None
                    start_date = None
                    finish_date = None
                    account_reference = None
                    invoice_number = None
                    net = BigDecimal(0)
                    vat = BigDecimal(0)
                    reads = []
                    bill_type = None
                    mpan_strings = []
            elif code == "CCD":
                ccde = self.parser.elements[1]
                consumption_charge_indicator = ccde[0]
                charge_type = ccde[2]
                if consumption_charge_indicator != "5" and charge_type in ["7", "8", "9"]:
                    previous_read_date = self.parser.to_date(self.parser.elements[7][0])
                if HhStartDate.isAfter(start_date, previous_read_date):
                    start_date = previous_read_date
                register_finish_date = self.parser.to_date(self.parser.elements[6][0])
                if finish_date is None or finish_date.before(register_finish_date):
                    finish_date = register_finish_date
                if charge_type == "7":
                    tmod = self.parser.elements[3]
                    mtnr = self.parser.elements[4]
                    mloc = self.parser.elements[5]
                    prrd = self.parser.elements[9]
                    adjf = self.parser.elements[12]
                    present_read_type = read_type_map[prrd[1]]
                    previous_read_type = read_type_map[prrd[3]]
                    coefficient = BigDecimal(adjf[1]).divide(BigDecimal(100000))
                    present_read_value = BigDecimal(prrd[0]).divide(BigDecimal(1000))
                    previous_read_value = BigDecimal(prrd[2]).divide(BigDecimal(1000))
                    meter_serial_number = mtnr[0]
                    tpr_code = tmod[0]
                    tpr = Tpr.getTpr('00000'[:-1 * len(tpr_code)] + tpr_code)
                    reads.append({'meter-serial-number': meter_serial_number, 'mpan': mloc[0], 'coefficient': coefficient, 'units': Units.KWH, 'tpr': tpr, 'previous-date': previous_read_date, 'previous-value': previous_read_value, 'previous-type': ReadType.getReadType(previous_read_type), 'present-date': register_finish_date, 'present-value': present_read_value, 'present-type': ReadType.getReadType(present_read_type)})
            elif code == "MTR":
                if message_type == "UTLBIL":
                    register_reads = []
                    for read in reads:
                        #self.debug_str += "  " + str(read['previous-type'])
                        register_reads.append(RawRegisterRead(read['meter-serial-number'], read['mpan'], read['coefficient'], read['units'], read['tpr'], read['previous-date'], read['previous-value'], read['previous-type'], read['present-date'], read['present-value'], read['present-type']))

                    raw_bills.append(RawBill(bill_type, account_reference, mpan_strings, invoice_number, issue_date, start_date, finish_date, BigDecimal(0), net, vat, BigDecimal(0), '', register_reads))
            elif code == "MAN":
                madn = self.parser.elements[2]
                pc_code = "0" + madn[3]
                mtc_code = madn[4]
                llfc_code = madn[5]

                mpan_strings.append(pc_code + " " + mtc_code + " " + llfc_code + " " + madn[0] + " " + madn[1] + madn[2])
            elif code == "VAT":
                uvla = self.parser.elements[5]
                net = self.parser.to_big_decimal(uvla)
                uvtt = self.parser.elements[6]
                vat = self.parser.to_big_decimal(uvtt)
            code = self.parser.next_segment()
        self.parser.close();
        Hiber.flush();
        return raw_bills

    def getProgress(self):
        return "Reached line " + str(self.parser.lreader.getLineNumber()) + " of first pass. " + self.debug_str]]></value>
        <value><![CDATA[109]]></value>
        <value><![CDATA[2010-05-25T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[59]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[bill-parser-csv]]></value>
        <value><![CDATA[from net.sf.chellow.billing import BillParser, RawBill, BillType
from java.text import SimpleDateFormat, DecimalFormat
from java.util import Locale, TimeZone, Calendar
from com.Ostermiller.util import CSVParser
from net.sf.chellow.physical import ReadType, Units, HhStartDate, RawRegisterRead, Tpr
from java.math import BigDecimal
from net.sf.chellow.monad.types import MonadDate
from net.sf.chellow.monad import HttpException, UserException
from java.lang import NumberFormatException, Integer
from java.io import IOException


class Parser(BillParser):
    def __init__(self, reader):
        date_format = SimpleDateFormat("yyyy'-'MM'-'dd", Locale.UK)
        date_format.setTimeZone(TimeZone.getTimeZone("GMT"));

        self.shredder = CSVParser(reader);
        self.shredder.setCommentStart("#;!");
        self.shredder.setEscapes("nrtf", "\n\r\t\f");
        self.debug_str = ''

        self.formatter = DecimalFormat('00000')
        self.cal = MonadDate.getCalendar()

    def getRawBills(self):
        raw_bills = []
        self.values = self.shredder.getLine()
        while self.values != None:
            num_values = len(self.values)
            bill_type = BillType.getBillType(self.values[0])
            account_reference = self.values[1]
            mpan_strings = self.values[2].split(",")
            invoice_reference = self.values[3]
            issue_date = MonadDate(self.values[4]).getDate()
            start_date = HhStartDate(self.values[5])

            finish_date = HhStartDate(self.values[6])
            self.cal.setTime(finish_date.getDate())
            self.cal.add(Calendar.DAY_OF_MONTH, 1)
            finish_date = HhStartDate(self.cal.getTime()).getPrevious()
            
            kwh = self.big_decimal(7, 'kwh')            
            net = self.big_decimal(8, 'net')
            vat = self.big_decimal(9, 'vat')
            gross = self.big_decimal(10, 'gross')

            if num_values > 11:
                breakdown = self.values[11]
            else:
                raise UserException("For the line, " + str(self.values) + " there isn't a 'breakdown' field on the end.")

            while self.values[-1] == '' and len(self.values) > 12:
                del self.values[-1]

            reads = []
            for i in range(12, len(self.values), 11):
                tpr_str = self.values[i + 4].strip()
                if len(tpr_str) == 0:
                    tpr = None
                else:
                    tpr = Tpr.getTpr(self.formatter.format(Integer.parseInt(tpr_str)))

                reads.append(RawRegisterRead(self.values[i], self.values[i + 1], self.big_decimal(i + 2, 'coefficient'), Units.getUnits(self.values[i + 3]), tpr, HhStartDate(self.values[i + 5]), BigDecimal(self.values[i + 6]), ReadType.getReadType(self.values[i + 7]), HhStartDate(self.values[i + 8]), BigDecimal(self.values[i + 9]), ReadType.getReadType(self.values[i + 10])))
            
            raw_bills.append(RawBill(bill_type, account_reference, mpan_strings, invoice_reference, issue_date, start_date, finish_date, kwh, net, vat, gross, breakdown, reads))
            self.values = self.shredder.getLine()
        self.shredder.close()
        return raw_bills


    def big_decimal(self, bd_index, bd_name):
        bd_str = self.values[bd_index]
        try:
            return BigDecimal(bd_str)
        except NumberFormatException:
            raise UserException("The " + bd_name + " field '" + bd_str + "' cannot be parsed as a number. The " + bd_name + " field is the " + str(bd_index) + " field of " + str(self.values) + ".")


    def getProgress(self):
        return "Reached line " + str(self.shredder.getLastLineNumber()) + " of first pass. " + self.debug_str]]></value>
        <value><![CDATA[111]]></value>
        <value><![CDATA[2010-05-26T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[63]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[bill-parser-gdf.csv]]></value>
        <value><![CDATA[from net.sf.chellow.billing import BillParser, RawBill, BillType
from java.text import SimpleDateFormat
from java.util import Locale, TimeZone
from com.Ostermiller.util import CSVParser
from net.sf.chellow.physical import ReadType, Units, HhStartDate, RawRegisterRead
from java.math import BigDecimal
from net.sf.chellow.monad.types import MonadDate
from net.sf.chellow.monad import HttpException, UserException
from java.lang import NumberFormatException
from java.io import IOException


class Parser(BillParser):
    def __init__(self, reader):
        self.shredder = CSVParser(reader)
        self.shredder.setCommentStart("#;!")
        self.shredder.setEscapes("nrtf", "\n\r\t\f")
        self.debug_str = ''


    def getRawBills(self):
        date_format = SimpleDateFormat("dd'-'MMM'-'yy", Locale.UK)
        date_format.setTimeZone(TimeZone.getTimeZone("GMT"))
        bill_type = BillType.getBillType('N')
        raw_bills = []
        values = self.shredder.getLine()
        values = self.shredder.getLine()
        while values != None:
            self.debug_str += values[109] + ' ' + str(values)
            mpan_strings = [values[16][1:]]
            issue_date = date_format.parse(values[5])
            bill_from = HhStartDate(date_format.parse(values[6]))
            bill_to = HhStartDate(date_format.parse(values[7]))
            kwh = BigDecimal(values[8])
            raw_bills.append(RawBill(bill_type, values[3], [], values[4], issue_date, bill_from, bill_to, kwh, BigDecimal(values[106]), BigDecimal(values[108]), BigDecimal(0), '', []))
            values = self.shredder.getLine()
        self.shredder.close()
        return raw_bills


    def getProgress(self):
        return "Reached line " + str(self.shredder.getLastLineNumber()) + " of first passs. " + self.debug_str]]></value>
        <value><![CDATA[113]]></value>
        <value><![CDATA[2010-01-01T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[55]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[bill-parser-mm]]></value>
        <value><![CDATA[from net.sf.chellow.billing import BillParser, RawBill, BillType
from java.io import LineNumberReader, IOException
from java.text import SimpleDateFormat, ParseException
from java.util import TimeZone, Locale
from net.sf.chellow.monad import Hiber, UserException
from java.math import BigDecimal
from net.sf.chellow.physical import HhStartDate


class Parser(BillParser):
    def __init__(self, reader):
        self.lreader = LineNumberReader(reader)
        self.date_format = SimpleDateFormat("yyyyMMdd", Locale.UK)
        self.date_format.setTimeZone(TimeZone.getTimeZone("GMT"))


    def getRawBills(self):
        Hiber.flush()
        raw_bills = []
        try:
            line = self.lreader.readLine()
            while line != None:
                record_type = line[62:66]
                if record_type == "0100":
                    account_reference = line[33:41]
                    invoice_number = line[41:46]
                    start_date = None
                    finish_date = None
                    net = BigDecimal(0)
                    vat = BigDecimal(0)
                    mpan_strings = []
                elif record_type == "1460":
                    net = net.add(BigDecimal(line[67:79]).divide(BigDecimal(100)))
                    vat = vat.add(BigDecimal(line[85:97]).divide(BigDecimal(100)))
                elif record_type == "0461":
                    mpan_str = line[148:156] + line[135:148]
                    if mpan_str not in mpan_strings:
                        mpan_strings.append(mpan_str)
                elif record_type == "0101":
                    start_date = self.parse_date(line[66:74])
                    finish_date = self.parse_date(line[74:82])
                elif record_type == "1500":
                    raw_bills.append(RawBill(BillType.getBillType("N"), account_reference, mpan_strings, invoice_number, start_date.getDate(), start_date, finish_date, BigDecimal(0), net, vat, BigDecimal(0), '', None))
                line = self.lreader.readLine()
            self.lreader.close();
            Hiber.flush();
        except IOException, e:
            raise UserException("Can't read EDF Energy mm file.")

        return raw_bills;


    def parse_date(self, date_string):
        try:
            return HhStartDate(self.date_format.parse(date_string))
        except ParseException, e:
            raise UserException("Can't parse the date: '" + e.getMessage() + "'.")


    def getProgress(self):
        return "Reached line " + str(self.lreader.getLineNumber()) + " of first passs."]]></value>
        <value><![CDATA[115]]></value>
        <value><![CDATA[2010-05-25T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[53]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[bill-parser-sse.edi]]></value>
        <value><![CDATA[from java.io import LineNumberReader
from org.python.util import PythonInterpreter
from net.sf.chellow.physical import ReadType, HhStartDate, Units, RawRegisterRead, Tpr
from net.sf.chellow.billing import NonCoreContract, BillParser, RawBill, BillType
from net.sf.chellow.monad import UserException, Hiber
from java.math import BigDecimal
from net.sf.chellow.monad.types import MonadDate
from java.util import Calendar


read_type_map = {'00': 'N', '09': 'N3', '04': 'C', '02': 'E', '11': 'E3', '01': 'EM', '03': 'W', '06': 'X', '05': 'CP', '12': 'IF'}

tmod_map = {'0001': '00001', 'URQ1': '00001', 'Z012': '00001', '0210': '00210', '0043': '00043', 'DAQ2': '00043', 'NIQ2': '00210', 'NQ22': '00210', 'DQ22': '00043', 'D7P2': '00043', 'N7P2': '00210', 'MDC1': 'md', 'URC1': '00001', '0206': '00206', '0040': '00040', '1140': '00210', '1139': '00043', 'A154': '01154', 'A153': '01153', '0039': '00043', '0221': '00210', '210E': '00210', '1150': '00210', '1149': '00043', '0153': '00153', 'WQ42': '00184', 'NQ42': '00210', 'EQ42': '00187', 'WDQ3': '00043', 'EWQ3': '00210', 'WDQ4': '01075', 'EWQ4': '01076', 'NIQ4': '01077', 'EQ32': '00072', 'NQ32': '00184', '0276': '00276', '0277': '00277', '0160': '00160', '1152': '01152', '1151': '01151', '1142': '01142', '1141': '01141', '0249': '00240', '0252': '00244', '0240': '00249', '0244': '00252', '0092': '00092', '210A': '00210', 'MAC2': 'md', 'DAC2': '00040', 'NAC2': '00206', 'NDC2': '00040', 'NNC2': '00206', 'MNC2': 'md', '148A': '00148', '221B': '00221', '080A':'00080', 'P1M3': '00239', 'P2M3': '00073', 'W1M3': '00248', 'W2M3':'00251', 'OTM3': '00093', 'NIM3': '00208', 'MDM3': 'md', 'URQD': '00001', 'OPE3': '01088', 'OEC2': '00190', '184A': '00184', '210J': '00187', '187A': '00210', '0183': '00183', '0071': '00071', 'DAE7': '00043', 'NIE7': '00210', 'OPAC': '00010', 'MDM1': 'md', 'D179': '00039', 'N179': '00221', 'O212': '00212', '0151': '00151', 'SG1U': '00001', '0184': '00184', '0072': '00072', 'DM22': '00039', 'NM22': '00221', 'MM22': 'md', '0044':'00044' , '0208': '00208', 'URM1': '00001', '1043': '01043', '1042': '01042', 'U393': '00001', 'D244': '00040', 'N244': '00206', '24D4': '00040', '24N4': '00206', 'OFX2': '00001'}

class Parser(BillParser):
    def __init__(self, reader):
        computer = NonCoreContract.getNonCoreContract('computer')
        comterp = PythonInterpreter()
        comterp.exec(computer.getChargeScript())
        self.parser = comterp.get('get_edi_parser')(reader)
        self.debug_str = ''
        self.cal = MonadDate.getCalendar()

    def getRawBills(self):
        #self.debug_str += 'starting to get raw bills'
        raw_bills = []
        Hiber.flush()
        code = self.parser.next_segment()
        while code is not None:
            if code == "BCD":
                ivdt = self.parser.elements[0]
                issue_date = self.parser.to_date(ivdt[0])

                invn = self.parser.elements[2]
                invoice_number = invn[0]
                account_reference = 'SA' + invoice_number[:9]

                btcd = self.parser.elements[5]
                bill_type_code = btcd[0]

                sumo = self.parser.elements[7]
                start_date = self.parser.to_date(sumo[0])
                finish_date = self.parser.to_date(sumo[1])
                self.cal.setTime(finish_date.getDate())
                self.cal.add(Calendar.DAY_OF_MONTH, 1)
                self.cal.add(Calendar.MINUTE, -30)
                finish_date = HhStartDate(self.cal.getTime())

            elif code == "MHD":
                type = self.parser.elements[1]
                message_type = type[0]
                if message_type == "UTLBIL":
                    issue_date = None
                    start_date = None
                    finish_date = None
                    account_reference = None
                    invoice_number = None
                    net = BigDecimal(0)
                    vat = BigDecimal(0)
                    gross = BigDecimal(0)
                    kwh = BigDecimal(0)
                    reads = []
                    bill_type_code = None
                    mpan_strings = []
            elif code == "CCD":
                ccde = self.parser.elements[1]
                consumption_charge_indicator = ccde[0]

                if consumption_charge_indicator in ["1", "2"]:
                    prdt = self.parser.elements[6]
                    pvdt = self.parser.elements[7]

                    present_read_date = self.parser.to_date(prdt[0])
                    self.cal.setTime(present_read_date.getDate())
                    self.cal.add(Calendar.DAY_OF_MONTH, 1)
                    self.cal.add(Calendar.MINUTE, -30)
                    present_read_date = HhStartDate(self.cal.getTime())

                    previous_read_date = self.parser.to_date(pvdt[0])
                    self.cal.setTime(previous_read_date.getDate())
                    self.cal.add(Calendar.DAY_OF_MONTH, 1)
                    self.cal.add(Calendar.MINUTE, -30)
                    previous_read_date = HhStartDate(self.cal.getTime())
               
                    tmod = self.parser.elements[3]
                    mtnr = self.parser.elements[4]
                    mloc = self.parser.elements[5]

                    mpan = mloc[0]
                    mpan = mpan[13:15] + ' ' + mpan[15:18] + ' ' + mpan[18:] + ' ' + mpan[:2] + ' ' + mpan[2:6] + ' ' + mpan[6:10] + ' ' + mpan[10:13]

                    prrd = self.parser.elements[9]
                    present_read_type = ReadType.getReadType(read_type_map[prrd[1]])
                    previous_read_type = ReadType.getReadType(read_type_map[prrd[3]])

                    adjf = self.parser.elements[12]
                    cons = self.parser.elements[13]

                    coefficient = BigDecimal(adjf[1]).divide(BigDecimal(100000))
                    present_reading_value = BigDecimal(prrd[0])
                    previous_reading_value = BigDecimal(prrd[2])
                    meter_serial_number = mtnr[0]
                    tpr_code = tmod[0]
                    if tpr_code not in tmod_map:
                        raise UserException("The TPR code " + tpr_code + " can't be found in the TPR list for mpan " + mpan + ".")
                    tpr = tmod_map[tpr_code]
                    if tpr == 'md':
                        units = Units.KW
                        tpr = None
                    else:
                        units = Units.KWH
                        kwh = kwh.add(self.parser.to_big_decimal(cons).divide(BigDecimal('1000')))
                        tpr = Tpr.getTpr(tpr)

                    reads.append({'meter-serial-number': meter_serial_number, 'mpan': mpan, 'coefficient': coefficient, 'units': units, 'tpr': tpr, 'previous-date': previous_read_date, 'previous-value': previous_reading_value, 'previous-type': previous_read_type, 'present-date': present_read_date, 'present-value': present_reading_value, 'present-type': present_read_type})
            elif code == "MTR":
                if message_type == "UTLBIL":
                    register_reads = []
                    for read in reads:
                        register_reads.append(RawRegisterRead(read['meter-serial-number'], read['mpan'], read['coefficient'], read['units'], read['tpr'], read['previous-date'], read['previous-value'], read['previous-type'], read['present-date'], read['present-value'], read['present-type']))
                    bill_type = BillType.getBillType(bill_type_code)
                    bill_raw = RawBill(bill_type, account_reference, mpan_strings, invoice_number, issue_date.getDate(), start_date, finish_date, kwh, net, vat, gross, '', register_reads)
                    raw_bills.append(bill_raw)
            elif code == "MAN":
                madn = self.parser.elements[2]
                pc_code = madn[3]
                mtc_code = madn[4]
                llfc_code = madn[5]

                mpan_strings.append(pc_code + " " + mtc_code + " " + llfc_code + " " + madn[0] + " " + madn[1] + madn[2])
            elif code == "VAT":
                uvla = self.parser.elements[5]
                net = net.add(self.parser.to_big_decimal(uvla).divide(BigDecimal('100')))
                uvtt = self.parser.elements[6]
                vat = vat.add(self.parser.to_big_decimal(uvtt).divide(BigDecimal('100')))
            code = self.parser.next_segment()
        self.parser.close()
        Hiber.flush()
        return raw_bills


    def getProgress(self):
        return "Reached line " + str(self.parser.lreader.getLineNumber()) + "." + self.debug_str]]></value>
        <value><![CDATA[117]]></value>
        <value><![CDATA[2010-05-24T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[51]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[bsuos]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate
from java.util import Date, Timer, TimerTask, Calendar, Properties, GregorianCalendar, TimeZone, Locale
from java.util.concurrent.locks import ReentrantLock
from java.text import SimpleDateFormat
from net.sf.chellow.monad.types import MonadDate
import sys
from net.sf.chellow.billing import NonCoreContract
from net.sf.chellow.monad import Hiber, UserException
from org.apache.commons.httpclient import HttpClient, NameValuePair, UsernamePasswordCredentials
from org.apache.commons.httpclient.methods import GetMethod, PostMethod
from javax.xml.parsers import DocumentBuilderFactory
from java.io import LineNumberReader, InputStreamReader



def hh(bill, supply_source, hh_data):
    rate_script = contract.rateScript(HhStartDate(hh_data[0]['start-date']))
    rates = supply_source.comterp.get('rate')(rate_script, 'rates_gbp_per_mwh')
    for datum in hh_data:
        datum['bsuos'] = rates.get(('%02d' % datum['utc-day']) + ' ' + ('%02d' % datum['utc-hour']) + ':' + ('%02d' % datum['utc-minute']) + ' Z', 0)

    bill['bsuos-actual-gbp'] = sum(datum['gsp-kwh'] * datum['bsuos'] for datum in hh_data) / 1000


class BsuosTask(TimerTask):
    def __init__(self, timer):
        self.timer = timer
        self.lock = ReentrantLock()
        self.messages = []
        self.importer = None

        self.date_formatter = SimpleDateFormat("yyyy-MM-dd HH:mm:ss 'Z'")
        self.date_formatter.setCalendar(MonadDate.getCalendar())

        self.get_format = SimpleDateFormat("yyyy-MM-dd")
        self.get_format.setCalendar(MonadDate.getCalendar())

        self.key_format = SimpleDateFormat("dd HH:mm 'Z'")
        self.key_format.setCalendar(MonadDate.getCalendar())


    def log(self, message):
        self.messages.insert(0, self.date_formatter.format(Date()) + " - " + message)
        if len(self.messages) > 1000:
            del self.messages[-1]


    def is_locked(self):
        return self.lock.isLocked()

    def hhs(self, year, month, day):
        
        day_url = "http://www.nationalgrid.com/scripts/sf_prices.asp"
        ct_cal = GregorianCalendar(TimeZone.getTimeZone("Europe/London"), Locale.UK)
        ct_cal.set(Calendar.YEAR, year)
        ct_cal.set(Calendar.MONTH, month)
        ct_cal.set(Calendar.DAY_OF_MONTH, day)
        ct_cal.set(Calendar.HOUR_OF_DAY, 0)
        ct_cal.set(Calendar.MINUTE, 0)
        ct_cal.set(Calendar.SECOND, 0)
        ct_cal.set(Calendar.MILLISECOND, 0)
        hh_date = HhStartDate(ct_cal.getTime())

        client = HttpClient()
        post_method = PostMethod(day_url)
        post_method.setRequestBody([NameValuePair('year', str(year)), NameValuePair('month', str(month + 1)), NameValuePair('day', str(day)), NameValuePair('action', 'display')])
        response_code = client.executeMethod(post_method)
        html_reader = LineNumberReader(InputStreamReader(post_method.getResponseBodyAsStream(), 'utf-8'))
        self.log("Downloading data from " + day_url)
        line = html_reader.readLine()
        in_table = False
        in_cell = False
        cell_num = 0
        rates = []
        while line is not None:
            if in_table:
                if '<!-- END: content -->' in line:
                    in_table = False
                elif '<tr align="center">' in line:
                    cell_num = 0
                elif in_cell and '</td>' in line:
                    in_cell = False

                elif not in_cell and '<td' in line:
                    in_cell = True
                    cell_num += 1
                elif in_cell and cell_num == 2:
                    rates.append((hh_date, float(line.strip())))
                    hh_date = hh_date.getNext()
            elif '<td><font face="verdana" size="1" color="#000066"><b>Period<br />BSUoS Charge(&pound;)</b></font></td>' in line:
                in_table = True

            line = html_reader.readLine()
        post_method.releaseConnection()
        return rates


    def run(self):
        if self.lock.tryLock():
            try:
                self.log("Starting to check BSUoS rates.")
                contract = NonCoreContract.getNonCoreContract('bsuos')

                latest_rate_script = Hiber.session().createQuery("from RateScript script where script.contract = :contract order by script.startDate.date desc").setEntity('contract', contract).setMaxResults(1).uniqueResult()

                cal = MonadDate.getCalendar()

                cal.setTime(latest_rate_script.getStartDate().getDate())
                cal.set(Calendar.DAY_OF_MONTH, 1)
                cal.set(Calendar.HOUR_OF_DAY, 0)
                cal.set(Calendar.MINUTE, 0)
                this_month_start = HhStartDate(cal.getTime())
                cal.add(Calendar.MONTH, 1)
                next_month_start = HhStartDate(cal.getTime())
                cal.add(Calendar.MONTH, 1)
                next_next_month_start = HhStartDate(cal.getTime())
                if Date().after(next_next_month_start.getDate()):
                    self.log("Checking to see if data is available on " + str(next_next_month_start) + " on nationalgrid.com.")
                    cal.setTime(next_next_month_start.getDate())
                    prices = self.hhs(cal.get(Calendar.YEAR), cal.get(Calendar.MONTH), cal.get(Calendar.DAY_OF_MONTH))
                    if len(prices) == 0:
                        self.log("Data isn't available on the nationalgrid.com yet.")
                    else:
                        self.log("Starting to download data from nationalgrid.com.")
                        rates = {}
                        ct_cal = GregorianCalendar(TimeZone.getTimeZone("Europe/London"), Locale.UK)
                        ct_cal.setTime(next_month_start.getDate())
                        ct_cal.add(Calendar.DAY_OF_MONTH, -1)
                        loop_until_date = next_next_month_start.getNext().getNext().getNext().getDate()
                        while ct_cal.getTime().before(loop_until_date):
                            for hh_date, price in self.hhs(ct_cal.get(Calendar.YEAR), ct_cal.get(Calendar.MONTH), ct_cal.get(Calendar.DAY_OF_MONTH)):
                                if not hh_date.before(next_month_start) and hh_date.before(next_next_month_start):
                                    rates[self.key_format.format(hh_date.getDate())] = price
                            ct_cal.add(Calendar.DAY_OF_MONTH, 1)
                        self.log("Finished downloading data from bmreports.com.")
                        script = "def rates_gbp_per_mwh():\n    return {\n" + ',\n'.join("'" + k + "': " + str(rates[k]) for k in sorted(rates.keys())) + "}"
                        contract.insertRateScript(None, next_month_start, script)
                        self.log("Added new rate script.")
                else:
                    self.log("Hasn't reached the end of the month yet.")
            except:
                e_info = sys.exc_info()
                tb = e_info[2]
                self.log("Outer problem " + str(e_info[0]) + str(e_info[1]) + str(tb) + " line number " + str(tb.tb_lineno))
            finally:
                try:
                    self.lock.unlock()
                finally:
                    Hiber.close()
                    self.log("Finished checking BSUoS rates.")


BSUOS_TASK_KEY = "net.sf.chellow.bsuos_task"


def get_bsuos_task(ctx):
    return ctx.getAttribute(BSUOS_TASK_KEY)


def start_bsuos_task(ctx):
    existing_task = get_bsuos_task(ctx)
    if existing_task is None:
        timer = Timer("BSUOS Task", True)
        bsuos_task = BsuosTask(timer)
        timer.schedule(bsuos_task, 0, 60 * 60 * 1000)
        ctx.setAttribute(BSUOS_TASK_KEY, bsuos_task)
    else:
        raise UserException("There's already a BSUoS task.")

def remove_bsuos_task(ctx):
    existing_task = get_bsuos_task(ctx)
    if existing_task is None:
        raise UserException("There isn't a bsuos task.")
    existing_task.cancel()
    if existing_task.is_locked():
        raise UserException("There's a bsuos import currently in progress.")
    
    ctx.setAttribute(BSUOS_TASK_KEY, None)]]></value>
        <value><![CDATA[119]]></value>
        <value><![CDATA[2009-03-01T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[def rates_gbp_per_mwh():
    return {
'01 00:00 Z': 0.90265,
'01 00:30 Z': 0.89207,
'01 01:00 Z': 0.92321,
'01 01:30 Z': 0.84712,
'01 02:00 Z': 0.84552,
'01 02:30 Z': 0.95593,
'01 03:00 Z': 0.99462,
'01 03:30 Z': 0.96276,
'01 04:00 Z': 0.89514,
'01 04:30 Z': 0.80838,
'01 05:00 Z': 1.02465,
'01 05:30 Z': 0.90757,
'01 06:00 Z': 1.48116,
'01 06:30 Z': 1.13516,
'01 07:00 Z': 1.61172,
'01 07:30 Z': 1.628,
'01 08:00 Z': 1.56336,
'01 08:30 Z': 2.02314,
'01 09:00 Z': 3.03213,
'01 09:30 Z': 3.10758,
'01 10:00 Z': 2.18008,
'01 10:30 Z': 1.12899,
'01 11:00 Z': 0.85991,
'01 11:30 Z': 0.97842,
'01 12:00 Z': 0.90279,
'01 12:30 Z': 0.78619,
'01 13:00 Z': 0.86664,
'01 13:30 Z': 0.52629,
'01 14:00 Z': 0.585,
'01 14:30 Z': 0.46413,
'01 15:00 Z': 0.29099,
'01 15:30 Z': 0.32976,
'01 16:00 Z': 0.37761,
'01 16:30 Z': 0.64919,
'01 17:00 Z': 0.53616,
'01 17:30 Z': 0.78017,
'01 18:00 Z': 1.6765,
'01 18:30 Z': 1.38352,
'01 19:00 Z': 1.2974,
'01 19:30 Z': 1.65125,
'01 20:00 Z': 1.00188,
'01 20:30 Z': 1.05806,
'01 21:00 Z': 0.95058,
'01 21:30 Z': 0.55515,
'01 22:00 Z': 0.66332,
'01 22:30 Z': 0.54901,
'01 23:00 Z': 0.68792,
'01 23:30 Z': 0.362,
'02 00:00 Z': 0.58596,
'02 00:30 Z': 0.59995,
'02 01:00 Z': 0.58916,
'02 01:30 Z': 0.52061,
'02 02:00 Z': 0.62806,
'02 02:30 Z': 0.69108,
'02 03:00 Z': 0.67635,
'02 03:30 Z': 0.59098,
'02 04:00 Z': 0.53795,
'02 04:30 Z': 0.743,
'02 05:00 Z': 0.7232,
'02 05:30 Z': 0.88754,
'02 06:00 Z': 1.80059,
'02 06:30 Z': 1.85164,
'02 07:00 Z': 0.87896,
'02 07:30 Z': 0.95002,
'02 08:00 Z': 0.90658,
'02 08:30 Z': 0.92531,
'02 09:00 Z': 0.98237,
'02 09:30 Z': 0.96162,
'02 10:00 Z': 0.92355,
'02 10:30 Z': 1.04329,
'02 11:00 Z': 0.85421,
'02 11:30 Z': 0.69396,
'02 12:00 Z': 0.58441,
'02 12:30 Z': 0.56837,
'02 13:00 Z': 0.72799,
'02 13:30 Z': 0.37631,
'02 14:00 Z': 0.38595,
'02 14:30 Z': 0.2343,
'02 15:00 Z': 0.02799,
'02 15:30 Z': 0.17839,
'02 16:00 Z': 0.11585,
'02 16:30 Z': 0.54151,
'02 17:00 Z': 0.47986,
'02 17:30 Z': 0.9767,
'02 18:00 Z': 1.96627,
'02 18:30 Z': 1.77164,
'02 19:00 Z': 1.44826,
'02 19:30 Z': 1.433,
'02 20:00 Z': 0.97022,
'02 20:30 Z': 0.8978,
'02 21:00 Z': 0.80687,
'02 21:30 Z': 0.52383,
'02 22:00 Z': 0.70752,
'02 22:30 Z': 0.58836,
'02 23:00 Z': 0.44798,
'02 23:30 Z': 0.3382,
'03 00:00 Z': 0.52495,
'03 00:30 Z': 0.51844,
'03 01:00 Z': 0.71319,
'03 01:30 Z': 0.67344,
'03 02:00 Z': 0.52364,
'03 02:30 Z': 0.50315,
'03 03:00 Z': 0.51618,
'03 03:30 Z': 0.50007,
'03 04:00 Z': 0.50933,
'03 04:30 Z': 0.42528,
'03 05:00 Z': 0.39765,
'03 05:30 Z': 0.43004,
'03 06:00 Z': 0.62988,
'03 06:30 Z': 0.81139,
'03 07:00 Z': 0.97637,
'03 07:30 Z': 0.90702,
'03 08:00 Z': 0.81218,
'03 08:30 Z': 0.77267,
'03 09:00 Z': 0.80951,
'03 09:30 Z': 0.94379,
'03 10:00 Z': 0.86858,
'03 10:30 Z': 0.97941,
'03 11:00 Z': 0.94154,
'03 11:30 Z': 0.8626,
'03 12:00 Z': 0.87299,
'03 12:30 Z': 0.68243,
'03 13:00 Z': 0.84979,
'03 13:30 Z': 0.45989,
'03 14:00 Z': 0.41621,
'03 14:30 Z': 0.4209,
'03 15:00 Z': 0.21543,
'03 15:30 Z': 0.3252,
'03 16:00 Z': 0.40775,
'03 16:30 Z': 0.68935,
'03 17:00 Z': 0.49069,
'03 17:30 Z': 0.66976,
'03 18:00 Z': 0.89247,
'03 18:30 Z': 0.77677,
'03 19:00 Z': 0.85806,
'03 19:30 Z': 1.50018,
'03 20:00 Z': 1.65914,
'03 20:30 Z': 0.95419,
'03 21:00 Z': 0.88716,
'03 21:30 Z': 0.68309,
'03 22:00 Z': 0.98837,
'03 22:30 Z': 0.53037,
'03 23:00 Z': 0.73898,
'03 23:30 Z': 0.57162,
'04 00:00 Z': 0.50527,
'04 00:30 Z': 0.49822,
'04 01:00 Z': 0.39865,
'04 01:30 Z': 0.44559,
'04 02:00 Z': 0.44647,
'04 02:30 Z': 0.30547,
'04 03:00 Z': 0.41261,
'04 03:30 Z': 0.43873,
'04 04:00 Z': 0.3865,
'04 04:30 Z': 0.36396,
'04 05:00 Z': 0.31967,
'04 05:30 Z': 0.35203,
'04 06:00 Z': 0.48325,
'04 06:30 Z': 0.89675,
'04 07:00 Z': 0.99276,
'04 07:30 Z': 1.04391,
'04 08:00 Z': 1.07929,
'04 08:30 Z': 0.85885,
'04 09:00 Z': 0.81763,
'04 09:30 Z': 0.68949,
'04 10:00 Z': 0.57627,
'04 10:30 Z': 0.55137,
'04 11:00 Z': 0.44581,
'04 11:30 Z': 0.47491,
'04 12:00 Z': 0.46553,
'04 12:30 Z': 0.4067,
'04 13:00 Z': 0.49023,
'04 13:30 Z': 0.23908,
'04 14:00 Z': 0.19215,
'04 14:30 Z': -0.02083,
'04 15:00 Z': -0.19948,
'04 15:30 Z': -0.0251,
'04 16:00 Z': 0.04404,
'04 16:30 Z': 0.27881,
'04 17:00 Z': 0.22958,
'04 17:30 Z': 0.59521,
'04 18:00 Z': 1.36252,
'04 18:30 Z': 1.79782,
'04 19:00 Z': 1.44319,
'04 19:30 Z': 0.69397,
'04 20:00 Z': 0.47484,
'04 20:30 Z': 0.47519,
'04 21:00 Z': 0.57522,
'04 21:30 Z': 0.51069,
'04 22:00 Z': 0.88666,
'04 22:30 Z': 0.29754,
'04 23:00 Z': 0.60737,
'04 23:30 Z': 0.49974,
'05 00:00 Z': 0.68833,
'05 00:30 Z': 0.69057,
'05 01:00 Z': 0.68418,
'05 01:30 Z': 0.67042,
'05 02:00 Z': 0.53184,
'05 02:30 Z': 0.4102,
'05 03:00 Z': 0.21503,
'05 03:30 Z': 0.15998,
'05 04:00 Z': 0.11353,
'05 04:30 Z': -0.00636,
'05 05:00 Z': -0.01052,
'05 05:30 Z': 0.09488,
'05 06:00 Z': 0.46542,
'05 06:30 Z': 0.65538,
'05 07:00 Z': 0.83603,
'05 07:30 Z': 1.01164,
'05 08:00 Z': 1.47566,
'05 08:30 Z': 1.9733,
'05 09:00 Z': 1.72615,
'05 09:30 Z': 2.14131,
'05 10:00 Z': 1.35507,
'05 10:30 Z': 1.1242,
'05 11:00 Z': 1.05994,
'05 11:30 Z': 0.99174,
'05 12:00 Z': 0.72933,
'05 12:30 Z': 0.56997,
'05 13:00 Z': 0.64885,
'05 13:30 Z': 0.35117,
'05 14:00 Z': 0.18289,
'05 14:30 Z': -0.02715,
'05 15:00 Z': 0.28215,
'05 15:30 Z': 0.3142,
'05 16:00 Z': 0.31066,
'05 16:30 Z': 0.58639,
'05 17:00 Z': 0.44905,
'05 17:30 Z': 0.82865,
'05 18:00 Z': 1.18373,
'05 18:30 Z': 1.16481,
'05 19:00 Z': 0.96865,
'05 19:30 Z': 0.94939,
'05 20:00 Z': 0.87706,
'05 20:30 Z': 0.79235,
'05 21:00 Z': 0.89973,
'05 21:30 Z': 0.50854,
'05 22:00 Z': 0.54565,
'05 22:30 Z': 0.40912,
'05 23:00 Z': 0.35939,
'05 23:30 Z': 0.19252,
'06 00:00 Z': 0.5138,
'06 00:30 Z': 0.39473,
'06 01:00 Z': 0.30116,
'06 01:30 Z': 0.23612,
'06 02:00 Z': 0.08737,
'06 02:30 Z': 0.31307,
'06 03:00 Z': 0.49782,
'06 03:30 Z': 0.38444,
'06 04:00 Z': 0.29809,
'06 04:30 Z': 0.29776,
'06 05:00 Z': 0.42831,
'06 05:30 Z': 0.39221,
'06 06:00 Z': 0.5993,
'06 06:30 Z': 0.36041,
'06 07:00 Z': 0.5505,
'06 07:30 Z': 0.91123,
'06 08:00 Z': 2.37141,
'06 08:30 Z': 1.39166,
'06 09:00 Z': 0.88366,
'06 09:30 Z': 0.79023,
'06 10:00 Z': 0.58386,
'06 10:30 Z': 0.54336,
'06 11:00 Z': 0.60217,
'06 11:30 Z': 0.52539,
'06 12:00 Z': 0.48051,
'06 12:30 Z': 0.50957,
'06 13:00 Z': 0.49826,
'06 13:30 Z': 0.43236,
'06 14:00 Z': 0.37438,
'06 14:30 Z': 0.32509,
'06 15:00 Z': 0.37673,
'06 15:30 Z': 0.46196,
'06 16:00 Z': 0.48698,
'06 16:30 Z': 0.76567,
'06 17:00 Z': 0.65528,
'06 17:30 Z': 0.60534,
'06 18:00 Z': 1.3339,
'06 18:30 Z': 1.32302,
'06 19:00 Z': 1.28302,
'06 19:30 Z': 1.42072,
'06 20:00 Z': 1.06627,
'06 20:30 Z': 1.04816,
'06 21:00 Z': 0.93545,
'06 21:30 Z': 0.94532,
'06 22:00 Z': 1.2144,
'06 22:30 Z': 1.18701,
'06 23:00 Z': 0.97932,
'06 23:30 Z': 0.64157,
'07 00:00 Z': 1.02843,
'07 00:30 Z': 0.85685,
'07 01:00 Z': 0.7311,
'07 01:30 Z': 0.54834,
'07 02:00 Z': 0.59514,
'07 02:30 Z': 0.60647,
'07 03:00 Z': 0.76067,
'07 03:30 Z': 0.86629,
'07 04:00 Z': 0.74897,
'07 04:30 Z': 0.65968,
'07 05:00 Z': 0.69309,
'07 05:30 Z': 0.67715,
'07 06:00 Z': 0.85453,
'07 06:30 Z': 0.78807,
'07 07:00 Z': 0.75113,
'07 07:30 Z': 0.8995,
'07 08:00 Z': 1.51449,
'07 08:30 Z': 1.94883,
'07 09:00 Z': 1.49507,
'07 09:30 Z': 1.13026,
'07 10:00 Z': 0.72231,
'07 10:30 Z': 0.95797,
'07 11:00 Z': 1.05932,
'07 11:30 Z': 1.19354,
'07 12:00 Z': 1.42948,
'07 12:30 Z': 1.0493,
'07 13:00 Z': 1.0509,
'07 13:30 Z': 0.63011,
'07 14:00 Z': 0.48409,
'07 14:30 Z': 0.40714,
'07 15:00 Z': 0.50504,
'07 15:30 Z': 0.39618,
'07 16:00 Z': 0.33577,
'07 16:30 Z': 0.59511,
'07 17:00 Z': 0.68796,
'07 17:30 Z': 0.98978,
'07 18:00 Z': 1.68859,
'07 18:30 Z': 4.51376,
'07 19:00 Z': 4.78925,
'07 19:30 Z': 3.90633,
'07 20:00 Z': 2.16072,
'07 20:30 Z': 1.42442,
'07 21:00 Z': 1.06951,
'07 21:30 Z': 0.70603,
'07 22:00 Z': 0.52336,
'07 22:30 Z': 0.69194,
'07 23:00 Z': 0.59498,
'07 23:30 Z': 0.36371,
'08 00:00 Z': 0.66724,
'08 00:30 Z': 0.56901,
'08 01:00 Z': 0.5352,
'08 01:30 Z': 0.51666,
'08 02:00 Z': 0.5302,
'08 02:30 Z': 0.6335,
'08 03:00 Z': 0.74129,
'08 03:30 Z': 0.65671,
'08 04:00 Z': 0.64076,
'08 04:30 Z': 0.62208,
'08 05:00 Z': 0.54249,
'08 05:30 Z': 0.68023,
'08 06:00 Z': 1.12439,
'08 06:30 Z': 1.53165,
'08 07:00 Z': 2.50301,
'08 07:30 Z': 2.05242,
'08 08:00 Z': 2.17356,
'08 08:30 Z': 2.11774,
'08 09:00 Z': 2.02479,
'08 09:30 Z': 1.95643,
'08 10:00 Z': 1.87895,
'08 10:30 Z': 1.34322,
'08 11:00 Z': 1.27821,
'08 11:30 Z': 1.22402,
'08 12:00 Z': 1.04815,
'08 12:30 Z': 0.93149,
'08 13:00 Z': 0.91403,
'08 13:30 Z': 0.73308,
'08 14:00 Z': 0.76106,
'08 14:30 Z': 0.54227,
'08 15:00 Z': 0.47103,
'08 15:30 Z': 0.61311,
'08 16:00 Z': 0.78268,
'08 16:30 Z': 1.18533,
'08 17:00 Z': 1.84987,
'08 17:30 Z': 1.43894,
'08 18:00 Z': 1.5245,
'08 18:30 Z': 2.01532,
'08 19:00 Z': 2.94422,
'08 19:30 Z': 2.5513,
'08 20:00 Z': 2.13589,
'08 20:30 Z': 1.38288,
'08 21:00 Z': 0.97793,
'08 21:30 Z': 0.54029,
'08 22:00 Z': 0.37622,
'08 22:30 Z': 0.33721,
'08 23:00 Z': 0.33844,
'08 23:30 Z': 0.33657,
'09 00:00 Z': 0.4182,
'09 00:30 Z': 0.25346,
'09 01:00 Z': 0.19846,
'09 01:30 Z': 0.11634,
'09 02:00 Z': 0.08745,
'09 02:30 Z': 0.16517,
'09 03:00 Z': 0.20712,
'09 03:30 Z': 0.12485,
'09 04:00 Z': 0.12246,
'09 04:30 Z': 0.01371,
'09 05:00 Z': -0.04005,
'09 05:30 Z': 0.15936,
'09 06:00 Z': 0.49704,
'09 06:30 Z': 0.38786,
'09 07:00 Z': 0.40524,
'09 07:30 Z': 0.33329,
'09 08:00 Z': 0.37085,
'09 08:30 Z': 0.47453,
'09 09:00 Z': 1.09159,
'09 09:30 Z': 1.11761,
'09 10:00 Z': 0.82385,
'09 10:30 Z': 0.55092,
'09 11:00 Z': 0.48316,
'09 11:30 Z': 0.43767,
'09 12:00 Z': 0.47209,
'09 12:30 Z': 0.45787,
'09 13:00 Z': 0.60306,
'09 13:30 Z': 0.45082,
'09 14:00 Z': 0.50724,
'09 14:30 Z': 0.44202,
'09 15:00 Z': 0.49968,
'09 15:30 Z': 0.77256,
'09 16:00 Z': 1.08045,
'09 16:30 Z': 1.6317,
'09 17:00 Z': 2.43417,
'09 17:30 Z': 3.04576,
'09 18:00 Z': 3.32555,
'09 18:30 Z': 3.72929,
'09 19:00 Z': 4.16647,
'09 19:30 Z': 3.54228,
'09 20:00 Z': 1.90728,
'09 20:30 Z': 1.70371,
'09 21:00 Z': 1.47247,
'09 21:30 Z': 0.77496,
'09 22:00 Z': 0.87644,
'09 22:30 Z': 0.67607,
'09 23:00 Z': 0.31416,
'09 23:30 Z': 0.10547,
'10 00:00 Z': 0.29571,
'10 00:30 Z': 0.42256,
'10 01:00 Z': 0.42169,
'10 01:30 Z': 0.36536,
'10 02:00 Z': 0.33064,
'10 02:30 Z': 0.3608,
'10 03:00 Z': 0.40623,
'10 03:30 Z': 0.40341,
'10 04:00 Z': 0.37492,
'10 04:30 Z': 0.32738,
'10 05:00 Z': 0.30338,
'10 05:30 Z': 0.35596,
'10 06:00 Z': 0.51916,
'10 06:30 Z': 0.51882,
'10 07:00 Z': 0.76987,
'10 07:30 Z': 0.89287,
'10 08:00 Z': 0.81061,
'10 08:30 Z': 0.65437,
'10 09:00 Z': 1.35701,
'10 09:30 Z': 1.83076,
'10 10:00 Z': 1.53021,
'10 10:30 Z': 1.07223,
'10 11:00 Z': 0.78999,
'10 11:30 Z': 0.63668,
'10 12:00 Z': 0.59699,
'10 12:30 Z': 0.565,
'10 13:00 Z': 0.56067,
'10 13:30 Z': 0.36776,
'10 14:00 Z': 0.50979,
'10 14:30 Z': 0.362,
'10 15:00 Z': 0.33959,
'10 15:30 Z': 0.41171,
'10 16:00 Z': 1.2046,
'10 16:30 Z': 2.27997,
'10 17:00 Z': 2.54705,
'10 17:30 Z': 3.64878,
'10 18:00 Z': 4.76623,
'10 18:30 Z': 4.9051,
'10 19:00 Z': 4.79505,
'10 19:30 Z': 4.01775,
'10 20:00 Z': 1.94675,
'10 20:30 Z': 1.07131,
'10 21:00 Z': 0.81373,
'10 21:30 Z': 0.78209,
'10 22:00 Z': 0.49034,
'10 22:30 Z': 0.2625,
'10 23:00 Z': 0.17979,
'10 23:30 Z': 0.19766,
'11 00:00 Z': 0.48412,
'11 00:30 Z': 0.54272,
'11 01:00 Z': 0.57411,
'11 01:30 Z': 0.514,
'11 02:00 Z': 0.6487,
'11 02:30 Z': 0.71789,
'11 03:00 Z': 0.86049,
'11 03:30 Z': 0.85568,
'11 04:00 Z': 0.82757,
'11 04:30 Z': 0.94523,
'11 05:00 Z': 1.03416,
'11 05:30 Z': 1.12333,
'11 06:00 Z': 0.69188,
'11 06:30 Z': 0.37662,
'11 07:00 Z': 0.70298,
'11 07:30 Z': 0.89835,
'11 08:00 Z': 1.09838,
'11 08:30 Z': 1.16147,
'11 09:00 Z': 1.33775,
'11 09:30 Z': 1.28982,
'11 10:00 Z': 1.25221,
'11 10:30 Z': 1.20389,
'11 11:00 Z': 1.24919,
'11 11:30 Z': 1.21482,
'11 12:00 Z': 1.23624,
'11 12:30 Z': 1.30392,
'11 13:00 Z': 1.36567,
'11 13:30 Z': 1.05581,
'11 14:00 Z': 1.01713,
'11 14:30 Z': 0.86961,
'11 15:00 Z': 0.7322,
'11 15:30 Z': 0.74188,
'11 16:00 Z': 1.25439,
'11 16:30 Z': 1.51698,
'11 17:00 Z': 2.01897,
'11 17:30 Z': 1.98128,
'11 18:00 Z': 2.2825,
'11 18:30 Z': 2.44762,
'11 19:00 Z': 2.08217,
'11 19:30 Z': 2.04903,
'11 20:00 Z': 1.95943,
'11 20:30 Z': 1.78075,
'11 21:00 Z': 1.03855,
'11 21:30 Z': 0.72442,
'11 22:00 Z': 0.55675,
'11 22:30 Z': 0.25314,
'11 23:00 Z': 0.427,
'11 23:30 Z': 0.48008,
'12 00:00 Z': 0.88157,
'12 00:30 Z': 0.71341,
'12 01:00 Z': 0.67004,
'12 01:30 Z': 0.61936,
'12 02:00 Z': 0.53641,
'12 02:30 Z': 0.51409,
'12 03:00 Z': 0.62107,
'12 03:30 Z': 0.53985,
'12 04:00 Z': 0.51966,
'12 04:30 Z': 0.52852,
'12 05:00 Z': 0.56208,
'12 05:30 Z': 0.60591,
'12 06:00 Z': 0.74688,
'12 06:30 Z': 0.55067,
'12 07:00 Z': 0.85156,
'12 07:30 Z': 0.8217,
'12 08:00 Z': 0.93157,
'12 08:30 Z': 0.99641,
'12 09:00 Z': 1.25742,
'12 09:30 Z': 1.41518,
'12 10:00 Z': 1.4028,
'12 10:30 Z': 1.43544,
'12 11:00 Z': 1.40957,
'12 11:30 Z': 1.28649,
'12 12:00 Z': 1.41299,
'12 12:30 Z': 1.30832,
'12 13:00 Z': 1.49009,
'12 13:30 Z': 1.21947,
'12 14:00 Z': 1.62843,
'12 14:30 Z': 1.32693,
'12 15:00 Z': 1.34871,
'12 15:30 Z': 1.17693,
'12 16:00 Z': 1.48501,
'12 16:30 Z': 1.60671,
'12 17:00 Z': 1.7534,
'12 17:30 Z': 1.77373,
'12 18:00 Z': 2.17057,
'12 18:30 Z': 2.12133,
'12 19:00 Z': 2.03249,
'12 19:30 Z': 1.94846,
'12 20:00 Z': 1.62007,
'12 20:30 Z': 1.79141,
'12 21:00 Z': 1.47205,
'12 21:30 Z': 1.17523,
'12 22:00 Z': 1.37114,
'12 22:30 Z': 0.89317,
'12 23:00 Z': 0.80442,
'12 23:30 Z': 0.93808,
'13 00:00 Z': 1.62425,
'13 00:30 Z': 1.54824,
'13 01:00 Z': 1.45837,
'13 01:30 Z': 1.25528,
'13 02:00 Z': 1.10336,
'13 02:30 Z': 1.20153,
'13 03:00 Z': 1.2077,
'13 03:30 Z': 0.79327,
'13 04:00 Z': 0.68294,
'13 04:30 Z': 0.56349,
'13 05:00 Z': 0.69325,
'13 05:30 Z': 0.80027,
'13 06:00 Z': 0.89303,
'13 06:30 Z': 0.75119,
'13 07:00 Z': 1.11674,
'13 07:30 Z': 1.61897,
'13 08:00 Z': 1.86791,
'13 08:30 Z': 1.88038,
'13 09:00 Z': 2.23046,
'13 09:30 Z': 2.03698,
'13 10:00 Z': 1.95492,
'13 10:30 Z': 1.86354,
'13 11:00 Z': 1.96417,
'13 11:30 Z': 1.83023,
'13 12:00 Z': 1.62521,
'13 12:30 Z': 1.46696,
'13 13:00 Z': 1.38827,
'13 13:30 Z': 1.27845,
'13 14:00 Z': 1.43308,
'13 14:30 Z': 1.31648,
'13 15:00 Z': 1.34716,
'13 15:30 Z': 1.41443,
'13 16:00 Z': 1.56515,
'13 16:30 Z': 1.96346,
'13 17:00 Z': 2.26796,
'13 17:30 Z': 2.36464,
'13 18:00 Z': 2.61811,
'13 18:30 Z': 2.97467,
'13 19:00 Z': 2.64807,
'13 19:30 Z': 2.53343,
'13 20:00 Z': 2.22809,
'13 20:30 Z': 2.14181,
'13 21:00 Z': 1.75548,
'13 21:30 Z': 1.38333,
'13 22:00 Z': 0.95548,
'13 22:30 Z': 0.69378,
'13 23:00 Z': 0.72256,
'13 23:30 Z': 0.79344,
'14 00:00 Z': 0.69118,
'14 00:30 Z': 0.54931,
'14 01:00 Z': 0.46099,
'14 01:30 Z': 0.38249,
'14 02:00 Z': 0.46996,
'14 02:30 Z': 0.44269,
'14 03:00 Z': 0.41577,
'14 03:30 Z': 0.32083,
'14 04:00 Z': 0.31026,
'14 04:30 Z': 0.3216,
'14 05:00 Z': 0.30915,
'14 05:30 Z': 0.36231,
'14 06:00 Z': 0.37964,
'14 06:30 Z': 0.36663,
'14 07:00 Z': 0.26722,
'14 07:30 Z': 0.37099,
'14 08:00 Z': 1.07279,
'14 08:30 Z': 1.53284,
'14 09:00 Z': 1.2839,
'14 09:30 Z': 1.39137,
'14 10:00 Z': 1.31521,
'14 10:30 Z': 1.4468,
'14 11:00 Z': 1.40428,
'14 11:30 Z': 1.36201,
'14 12:00 Z': 1.64918,
'14 12:30 Z': 1.31861,
'14 13:00 Z': 1.29301,
'14 13:30 Z': 0.89339,
'14 14:00 Z': 0.94188,
'14 14:30 Z': 0.88511,
'14 15:00 Z': 0.58969,
'14 15:30 Z': 0.66111,
'14 16:00 Z': 0.72539,
'14 16:30 Z': 0.92051,
'14 17:00 Z': 0.73408,
'14 17:30 Z': 0.72724,
'14 18:00 Z': 1.33453,
'14 18:30 Z': 1.83017,
'14 19:00 Z': 1.86001,
'14 19:30 Z': 1.70454,
'14 20:00 Z': 1.9869,
'14 20:30 Z': 1.92648,
'14 21:00 Z': 1.71046,
'14 21:30 Z': 1.1887,
'14 22:00 Z': 0.49769,
'14 22:30 Z': 0.1487,
'14 23:00 Z': 0.20332,
'14 23:30 Z': 0.1708,
'15 00:00 Z': 0.4265,
'15 00:30 Z': 0.42909,
'15 01:00 Z': 0.43339,
'15 01:30 Z': 0.29964,
'15 02:00 Z': 0.34503,
'15 02:30 Z': 0.34415,
'15 03:00 Z': 0.41224,
'15 03:30 Z': 0.3772,
'15 04:00 Z': 0.25076,
'15 04:30 Z': 0.19841,
'15 05:00 Z': 0.29198,
'15 05:30 Z': 0.42445,
'15 06:00 Z': 0.64396,
'15 06:30 Z': 0.73995,
'15 07:00 Z': 1.19662,
'15 07:30 Z': 0.9751,
'15 08:00 Z': 1.07634,
'15 08:30 Z': 1.06666,
'15 09:00 Z': 1.06103,
'15 09:30 Z': 1.15311,
'15 10:00 Z': 0.97685,
'15 10:30 Z': 0.92587,
'15 11:00 Z': 0.9413,
'15 11:30 Z': 1.0644,
'15 12:00 Z': 1.21928,
'15 12:30 Z': 1.17055,
'15 13:00 Z': 1.02703,
'15 13:30 Z': 0.6154,
'15 14:00 Z': 0.49596,
'15 14:30 Z': 0.55622,
'15 15:00 Z': 0.60299,
'15 15:30 Z': 0.71318,
'15 16:00 Z': 0.96912,
'15 16:30 Z': 1.31154,
'15 17:00 Z': 1.2742,
'15 17:30 Z': 1.26244,
'15 18:00 Z': 1.71436,
'15 18:30 Z': 2.48204,
'15 19:00 Z': 2.11189,
'15 19:30 Z': 1.85689,
'15 20:00 Z': 1.51419,
'15 20:30 Z': 1.2674,
'15 21:00 Z': 1.25207,
'15 21:30 Z': 0.5693,
'15 22:00 Z': 0.35625,
'15 22:30 Z': 0.13718,
'15 23:00 Z': 0.60993,
'15 23:30 Z': 0.6282,
'16 00:00 Z': 0.88637,
'16 00:30 Z': 0.63503,
'16 01:00 Z': 0.62803,
'16 01:30 Z': 0.44234,
'16 02:00 Z': 0.45418,
'16 02:30 Z': 0.55041,
'16 03:00 Z': 0.6964,
'16 03:30 Z': 0.65798,
'16 04:00 Z': 0.56455,
'16 04:30 Z': 0.49212,
'16 05:00 Z': 0.46972,
'16 05:30 Z': 0.59701,
'16 06:00 Z': 0.86927,
'16 06:30 Z': 0.96615,
'16 07:00 Z': 1.15442,
'16 07:30 Z': 1.31171,
'16 08:00 Z': 1.46637,
'16 08:30 Z': 1.49993,
'16 09:00 Z': 1.479,
'16 09:30 Z': 1.42555,
'16 10:00 Z': 1.35559,
'16 10:30 Z': 1.33182,
'16 11:00 Z': 1.22485,
'16 11:30 Z': 1.12273,
'16 12:00 Z': 1.09691,
'16 12:30 Z': 1.09286,
'16 13:00 Z': 0.84446,
'16 13:30 Z': 0.55617,
'16 14:00 Z': 0.54764,
'16 14:30 Z': 0.4292,
'16 15:00 Z': 0.4645,
'16 15:30 Z': 0.46342,
'16 16:00 Z': 0.68965,
'16 16:30 Z': 0.89231,
'16 17:00 Z': 1.11391,
'16 17:30 Z': 0.9915,
'16 18:00 Z': 1.7654,
'16 18:30 Z': 2.3318,
'16 19:00 Z': 1.82558,
'16 19:30 Z': 1.7728,
'16 20:00 Z': 1.35881,
'16 20:30 Z': 1.0437,
'16 21:00 Z': 0.83373,
'16 21:30 Z': 0.25833,
'16 22:00 Z': 0.21972,
'16 22:30 Z': 0.15099,
'16 23:00 Z': 0.41179,
'16 23:30 Z': 0.28606,
'17 00:00 Z': 0.27043,
'17 00:30 Z': 0.28777,
'17 01:00 Z': 0.31243,
'17 01:30 Z': 0.15991,
'17 02:00 Z': 0.10187,
'17 02:30 Z': 0.19024,
'17 03:00 Z': 0.17969,
'17 03:30 Z': -0.04984,
'17 04:00 Z': -0.14297,
'17 04:30 Z': -0.0492,
'17 05:00 Z': 0.21869,
'17 05:30 Z': 0.37641,
'17 06:00 Z': 0.77258,
'17 06:30 Z': 0.88968,
'17 07:00 Z': 1.07367,
'17 07:30 Z': 1.03685,
'17 08:00 Z': 0.87914,
'17 08:30 Z': 0.64937,
'17 09:00 Z': 0.52555,
'17 09:30 Z': 0.59884,
'17 10:00 Z': 0.62224,
'17 10:30 Z': 0.56296,
'17 11:00 Z': 0.59763,
'17 11:30 Z': 0.79395,
'17 12:00 Z': 0.7304,
'17 12:30 Z': 0.69255,
'17 13:00 Z': 0.73528,
'17 13:30 Z': 0.51542,
'17 14:00 Z': 0.68046,
'17 14:30 Z': 0.51274,
'17 15:00 Z': 0.09307,
'17 15:30 Z': 0.11053,
'17 16:00 Z': 0.18042,
'17 16:30 Z': 0.55781,
'17 17:00 Z': 0.61469,
'17 17:30 Z': 0.8005,
'17 18:00 Z': 1.40683,
'17 18:30 Z': 1.75645,
'17 19:00 Z': 1.5465,
'17 19:30 Z': 1.4938,
'17 20:00 Z': 0.98878,
'17 20:30 Z': 0.87213,
'17 21:00 Z': 0.66865,
'17 21:30 Z': 0.37169,
'17 22:00 Z': 0.01644,
'17 22:30 Z': 0.0612,
'17 23:00 Z': 0.20329,
'17 23:30 Z': 0.07454,
'18 00:00 Z': 0.27701,
'18 00:30 Z': 0.2517,
'18 01:00 Z': 0.24552,
'18 01:30 Z': 0.2139,
'18 02:00 Z': 0.17231,
'18 02:30 Z': 0.24659,
'18 03:00 Z': 0.34075,
'18 03:30 Z': 0.25184,
'18 04:00 Z': 0.30052,
'18 04:30 Z': 0.26062,
'18 05:00 Z': 0.49504,
'18 05:30 Z': 0.50554,
'18 06:00 Z': 0.68379,
'18 06:30 Z': 0.77664,
'18 07:00 Z': 1.05206,
'18 07:30 Z': 0.92146,
'18 08:00 Z': 0.90947,
'18 08:30 Z': 0.8067,
'18 09:00 Z': 0.80273,
'18 09:30 Z': 0.76821,
'18 10:00 Z': 0.69628,
'18 10:30 Z': 0.65618,
'18 11:00 Z': 0.71443,
'18 11:30 Z': 0.74739,
'18 12:00 Z': 0.76107,
'18 12:30 Z': 0.68817,
'18 13:00 Z': 0.80607,
'18 13:30 Z': 0.44813,
'18 14:00 Z': 0.48613,
'18 14:30 Z': 0.51196,
'18 15:00 Z': 0.37972,
'18 15:30 Z': 0.46043,
'18 16:00 Z': 0.60337,
'18 16:30 Z': 1.68322,
'18 17:00 Z': 1.36206,
'18 17:30 Z': 1.4248,
'18 18:00 Z': 1.57174,
'18 18:30 Z': 1.67148,
'18 19:00 Z': 1.30431,
'18 19:30 Z': 1.27601,
'18 20:00 Z': 1.43434,
'18 20:30 Z': 0.62705,
'18 21:00 Z': 0.2835,
'18 21:30 Z': -0.01607,
'18 22:00 Z': -0.32991,
'18 22:30 Z': -0.23485,
'18 23:00 Z': 0.1378,
'18 23:30 Z': 0.11389,
'19 00:00 Z': 0.33452,
'19 00:30 Z': 0.39141,
'19 01:00 Z': 0.3583,
'19 01:30 Z': 0.35405,
'19 02:00 Z': 0.2664,
'19 02:30 Z': 0.21133,
'19 03:00 Z': 0.20261,
'19 03:30 Z': 0.0872,
'19 04:00 Z': 0.16305,
'19 04:30 Z': 0.13991,
'19 05:00 Z': 0.29582,
'19 05:30 Z': 0.2739,
'19 06:00 Z': 0.38596,
'19 06:30 Z': 0.43383,
'19 07:00 Z': 0.86966,
'19 07:30 Z': 0.83351,
'19 08:00 Z': 0.97049,
'19 08:30 Z': 0.98157,
'19 09:00 Z': 0.82133,
'19 09:30 Z': 0.77287,
'19 10:00 Z': 0.9733,
'19 10:30 Z': 0.72138,
'19 11:00 Z': 0.63146,
'19 11:30 Z': 0.93709,
'19 12:00 Z': 1.37624,
'19 12:30 Z': 1.3545,
'19 13:00 Z': 0.71627,
'19 13:30 Z': 0.40392,
'19 14:00 Z': 0.60505,
'19 14:30 Z': 0.5343,
'19 15:00 Z': 0.50647,
'19 15:30 Z': 1.04746,
'19 16:00 Z': 1.75396,
'19 16:30 Z': 2.69372,
'19 17:00 Z': 2.00549,
'19 17:30 Z': 1.75578,
'19 18:00 Z': 2.00958,
'19 18:30 Z': 1.6279,
'19 19:00 Z': 1.38534,
'19 19:30 Z': 1.06072,
'19 20:00 Z': 1.18181,
'19 20:30 Z': 0.94312,
'19 21:00 Z': 0.98573,
'19 21:30 Z': 0.71411,
'19 22:00 Z': 1.29541,
'19 22:30 Z': 0.52486,
'19 23:00 Z': 0.96166,
'19 23:30 Z': 0.62316,
'20 00:00 Z': 0.88745,
'20 00:30 Z': 0.63745,
'20 01:00 Z': 0.49148,
'20 01:30 Z': 0.49991,
'20 02:00 Z': 0.39277,
'20 02:30 Z': 0.35069,
'20 03:00 Z': 0.25744,
'20 03:30 Z': 0.19992,
'20 04:00 Z': 0.13187,
'20 04:30 Z': 0.11486,
'20 05:00 Z': 0.10719,
'20 05:30 Z': 0.24525,
'20 06:00 Z': 0.25304,
'20 06:30 Z': 0.09319,
'20 07:00 Z': 0.58948,
'20 07:30 Z': 0.6304,
'20 08:00 Z': 0.77972,
'20 08:30 Z': 1.19828,
'20 09:00 Z': 1.98417,
'20 09:30 Z': 2.09597,
'20 10:00 Z': 2.23986,
'20 10:30 Z': 1.84699,
'20 11:00 Z': 1.79254,
'20 11:30 Z': 1.74756,
'20 12:00 Z': 1.9288,
'20 12:30 Z': 1.75752,
'20 13:00 Z': 1.34373,
'20 13:30 Z': 0.73817,
'20 14:00 Z': 0.82083,
'20 14:30 Z': 0.4787,
'20 15:00 Z': 0.47557,
'20 15:30 Z': 0.44237,
'20 16:00 Z': 0.43104,
'20 16:30 Z': 1.08898,
'20 17:00 Z': 1.4679,
'20 17:30 Z': 1.47616,
'20 18:00 Z': 1.57675,
'20 18:30 Z': 2.29526,
'20 19:00 Z': 1.80741,
'20 19:30 Z': 1.30724,
'20 20:00 Z': 1.30933,
'20 20:30 Z': 0.89315,
'20 21:00 Z': 1.1252,
'20 21:30 Z': 0.92994,
'20 22:00 Z': 0.7761,
'20 22:30 Z': 0.56451,
'20 23:00 Z': 0.95581,
'20 23:30 Z': 0.69589,
'21 00:00 Z': 0.69126,
'21 00:30 Z': 0.44006,
'21 01:00 Z': 0.50563,
'21 01:30 Z': 0.46911,
'21 02:00 Z': 0.45301,
'21 02:30 Z': 0.42055,
'21 03:00 Z': 0.36839,
'21 03:30 Z': 0.26731,
'21 04:00 Z': 0.38124,
'21 04:30 Z': 0.42444,
'21 05:00 Z': 0.43513,
'21 05:30 Z': 0.40624,
'21 06:00 Z': 0.30996,
'21 06:30 Z': 0.37495,
'21 07:00 Z': 0.40512,
'21 07:30 Z': 0.64094,
'21 08:00 Z': 0.82315,
'21 08:30 Z': 0.76015,
'21 09:00 Z': 0.56104,
'21 09:30 Z': 0.48564,
'21 10:00 Z': 0.57018,
'21 10:30 Z': 0.72385,
'21 11:00 Z': 0.60911,
'21 11:30 Z': 0.64478,
'21 12:00 Z': 0.6545,
'21 12:30 Z': 0.65029,
'21 13:00 Z': 0.65378,
'21 13:30 Z': 0.30658,
'21 14:00 Z': 0.37104,
'21 14:30 Z': 0.5958,
'21 15:00 Z': 0.57406,
'21 15:30 Z': 0.57288,
'21 16:00 Z': 0.51545,
'21 16:30 Z': 1.09942,
'21 17:00 Z': 1.34655,
'21 17:30 Z': 1.49687,
'21 18:00 Z': 1.75412,
'21 18:30 Z': 2.02585,
'21 19:00 Z': 2.01553,
'21 19:30 Z': 1.51227,
'21 20:00 Z': 1.34698,
'21 20:30 Z': 0.87699,
'21 21:00 Z': 0.96456,
'21 21:30 Z': 0.42729,
'21 22:00 Z': 0.26279,
'21 22:30 Z': 0.10206,
'21 23:00 Z': 0.12865,
'21 23:30 Z': 0.06409,
'22 00:00 Z': 0.18074,
'22 00:30 Z': 0.09163,
'22 01:00 Z': 0.14019,
'22 01:30 Z': 0.04664,
'22 02:00 Z': 0.0603,
'22 02:30 Z': 0.14436,
'22 03:00 Z': 0.21636,
'22 03:30 Z': 0.21946,
'22 04:00 Z': 0.21618,
'22 04:30 Z': 0.18203,
'22 05:00 Z': 0.18529,
'22 05:30 Z': 0.32595,
'22 06:00 Z': 0.42161,
'22 06:30 Z': 0.48358,
'22 07:00 Z': 1.04851,
'22 07:30 Z': 0.89519,
'22 08:00 Z': 1.09899,
'22 08:30 Z': 0.73635,
'22 09:00 Z': 0.88818,
'22 09:30 Z': 0.67328,
'22 10:00 Z': 0.72674,
'22 10:30 Z': 0.77363,
'22 11:00 Z': 0.87616,
'22 11:30 Z': 0.97572,
'22 12:00 Z': 1.07544,
'22 12:30 Z': 1.06729,
'22 13:00 Z': 0.91621,
'22 13:30 Z': 0.71168,
'22 14:00 Z': 0.70371,
'22 14:30 Z': 0.69791,
'22 15:00 Z': 0.93285,
'22 15:30 Z': 1.15366,
'22 16:00 Z': 1.16451,
'22 16:30 Z': 1.47655,
'22 17:00 Z': 1.82151,
'22 17:30 Z': 1.77049,
'22 18:00 Z': 2.39125,
'22 18:30 Z': 2.4838,
'22 19:00 Z': 2.1312,
'22 19:30 Z': 1.71909,
'22 20:00 Z': 0.76162,
'22 20:30 Z': 0.71536,
'22 21:00 Z': 0.66328,
'22 21:30 Z': 0.21623,
'22 22:00 Z': 0.14804,
'22 22:30 Z': 0.08672,
'22 23:00 Z': 0.49396,
'22 23:30 Z': 0.48611,
'23 00:00 Z': 0.59584,
'23 00:30 Z': 0.67094,
'23 01:00 Z': 0.61334,
'23 01:30 Z': 0.6249,
'23 02:00 Z': 0.55399,
'23 02:30 Z': 0.44676,
'23 03:00 Z': 0.59636,
'23 03:30 Z': 0.50167,
'23 04:00 Z': 0.52005,
'23 04:30 Z': 0.46446,
'23 05:00 Z': 0.54602,
'23 05:30 Z': 0.92357,
'23 06:00 Z': 1.36163,
'23 06:30 Z': 1.18954,
'23 07:00 Z': 1.21581,
'23 07:30 Z': 1.27194,
'23 08:00 Z': 1.43363,
'23 08:30 Z': 1.33334,
'23 09:00 Z': 1.4238,
'23 09:30 Z': 1.72779,
'23 10:00 Z': 1.53913,
'23 10:30 Z': 1.68603,
'23 11:00 Z': 1.51737,
'23 11:30 Z': 1.55956,
'23 12:00 Z': 1.43799,
'23 12:30 Z': 1.73189,
'23 13:00 Z': 1.99099,
'23 13:30 Z': 1.70663,
'23 14:00 Z': 1.82442,
'23 14:30 Z': 1.75523,
'23 15:00 Z': 1.59107,
'23 15:30 Z': 1.77438,
'23 16:00 Z': 2.51192,
'23 16:30 Z': 3.67822,
'23 17:00 Z': 3.30124,
'23 17:30 Z': 2.86229,
'23 18:00 Z': 3.66439,
'23 18:30 Z': 2.83964,
'23 19:00 Z': 3.16143,
'23 19:30 Z': 2.62883,
'23 20:00 Z': 2.2371,
'23 20:30 Z': 1.53805,
'23 21:00 Z': 1.27313,
'23 21:30 Z': 1.05284,
'23 22:00 Z': 1.21011,
'23 22:30 Z': 1.12803,
'23 23:00 Z': 0.66772,
'23 23:30 Z': 0.54166,
'24 00:00 Z': 0.59786,
'24 00:30 Z': 0.59348,
'24 01:00 Z': 0.73075,
'24 01:30 Z': 0.72454,
'24 02:00 Z': 0.67445,
'24 02:30 Z': 0.70582,
'24 03:00 Z': 0.54832,
'24 03:30 Z': 0.39933,
'24 04:00 Z': 0.40217,
'24 04:30 Z': 0.37156,
'24 05:00 Z': 0.38931,
'24 05:30 Z': 0.45016,
'24 06:00 Z': 0.67755,
'24 06:30 Z': 1.03397,
'24 07:00 Z': 1.24248,
'24 07:30 Z': 1.25456,
'24 08:00 Z': 1.25142,
'24 08:30 Z': 1.05148,
'24 09:00 Z': 1.02917,
'24 09:30 Z': 1.06994,
'24 10:00 Z': 0.88926,
'24 10:30 Z': 0.87715,
'24 11:00 Z': 1.04619,
'24 11:30 Z': 1.02378,
'24 12:00 Z': 1.10465,
'24 12:30 Z': 1.17266,
'24 13:00 Z': 1.10041,
'24 13:30 Z': 0.98113,
'24 14:00 Z': 0.99793,
'24 14:30 Z': 1.0303,
'24 15:00 Z': 1.00757,
'24 15:30 Z': 1.11721,
'24 16:00 Z': 1.04077,
'24 16:30 Z': 1.36018,
'24 17:00 Z': 1.3241,
'24 17:30 Z': 1.44128,
'24 18:00 Z': 1.58165,
'24 18:30 Z': 1.85971,
'24 19:00 Z': 1.50691,
'24 19:30 Z': 1.58945,
'24 20:00 Z': 1.31835,
'24 20:30 Z': 1.02388,
'24 21:00 Z': 1.11738,
'24 21:30 Z': 0.94147,
'24 22:00 Z': 0.60886,
'24 22:30 Z': 0.42465,
'24 23:00 Z': 0.60091,
'24 23:30 Z': 0.53301,
'25 00:00 Z': 0.69603,
'25 00:30 Z': 0.72908,
'25 01:00 Z': 0.73427,
'25 01:30 Z': 0.68117,
'25 02:00 Z': 0.60523,
'25 02:30 Z': 0.69748,
'25 03:00 Z': 0.71239,
'25 03:30 Z': 0.50117,
'25 04:00 Z': 0.54057,
'25 04:30 Z': 0.37826,
'25 05:00 Z': 0.3722,
'25 05:30 Z': 0.41769,
'25 06:00 Z': 0.61471,
'25 06:30 Z': 0.71235,
'25 07:00 Z': 1.01711,
'25 07:30 Z': 1.04855,
'25 08:00 Z': 1.69694,
'25 08:30 Z': 1.11999,
'25 09:00 Z': 1.22191,
'25 09:30 Z': 1.30948,
'25 10:00 Z': 1.1372,
'25 10:30 Z': 1.02318,
'25 11:00 Z': 1.06508,
'25 11:30 Z': 1.15599,
'25 12:00 Z': 1.37569,
'25 12:30 Z': 1.22273,
'25 13:00 Z': 1.1755,
'25 13:30 Z': 1.10752,
'25 14:00 Z': 1.35659,
'25 14:30 Z': 1.22209,
'25 15:00 Z': 1.14463,
'25 15:30 Z': 1.31601,
'25 16:00 Z': 1.48803,
'25 16:30 Z': 1.82514,
'25 17:00 Z': 1.73296,
'25 17:30 Z': 1.87105,
'25 18:00 Z': 1.99045,
'25 18:30 Z': 1.77012,
'25 19:00 Z': 1.52063,
'25 19:30 Z': 1.30638,
'25 20:00 Z': 1.21577,
'25 20:30 Z': 1.0957,
'25 21:00 Z': 0.89883,
'25 21:30 Z': 0.95881,
'25 22:00 Z': 0.75757,
'25 22:30 Z': 0.42702,
'25 23:00 Z': 0.3649,
'25 23:30 Z': 0.49088,
'26 00:00 Z': 0.82783,
'26 00:30 Z': 0.53132,
'26 01:00 Z': 0.62718,
'26 01:30 Z': 0.61013,
'26 02:00 Z': 0.41747,
'26 02:30 Z': 0.49076,
'26 03:00 Z': 0.50262,
'26 03:30 Z': 0.5004,
'26 04:00 Z': 0.41897,
'26 04:30 Z': 0.28568,
'26 05:00 Z': 0.42799,
'26 05:30 Z': 0.39869,
'26 06:00 Z': 0.48172,
'26 06:30 Z': 0.41567,
'26 07:00 Z': 1.10487,
'26 07:30 Z': 1.25545,
'26 08:00 Z': 1.26147,
'26 08:30 Z': 1.08053,
'26 09:00 Z': 1.15565,
'26 09:30 Z': 1.08714,
'26 10:00 Z': 0.91379,
'26 10:30 Z': 0.77605,
'26 11:00 Z': 1.03679,
'26 11:30 Z': 1.02645,
'26 12:00 Z': 0.99214,
'26 12:30 Z': 0.80525,
'26 13:00 Z': 0.83532,
'26 13:30 Z': 0.52712,
'26 14:00 Z': 0.56078,
'26 14:30 Z': 0.65332,
'26 15:00 Z': 0.36104,
'26 15:30 Z': 0.45491,
'26 16:00 Z': 0.41359,
'26 16:30 Z': 0.69696,
'26 17:00 Z': 0.85033,
'26 17:30 Z': 0.90186,
'26 18:00 Z': 1.19689,
'26 18:30 Z': 1.03141,
'26 19:00 Z': 1.0355,
'26 19:30 Z': 1.29463,
'26 20:00 Z': 1.29308,
'26 20:30 Z': 1.10228,
'26 21:00 Z': 0.91516,
'26 21:30 Z': 0.73837,
'26 22:00 Z': 0.77018,
'26 22:30 Z': 0.66772,
'26 23:00 Z': 0.34183,
'26 23:30 Z': 0.58755,
'27 00:00 Z': 1.22508,
'27 00:30 Z': 0.86718,
'27 01:00 Z': 0.82403,
'27 01:30 Z': 0.39794,
'27 02:00 Z': 0.34789,
'27 02:30 Z': 0.40609,
'27 03:00 Z': 0.50087,
'27 03:30 Z': 0.43019,
'27 04:00 Z': 0.45225,
'27 04:30 Z': 0.46675,
'27 05:00 Z': 0.48937,
'27 05:30 Z': 0.46597,
'27 06:00 Z': 0.40811,
'27 06:30 Z': 0.53808,
'27 07:00 Z': 0.89632,
'27 07:30 Z': 0.84302,
'27 08:00 Z': 1.26328,
'27 08:30 Z': 1.14921,
'27 09:00 Z': 0.88884,
'27 09:30 Z': 0.91347,
'27 10:00 Z': 0.81913,
'27 10:30 Z': 0.71324,
'27 11:00 Z': 0.67931,
'27 11:30 Z': 0.72585,
'27 12:00 Z': 0.68516,
'27 12:30 Z': 0.64825,
'27 13:00 Z': 0.5573,
'27 13:30 Z': 0.25773,
'27 14:00 Z': 0.24654,
'27 14:30 Z': 0.09314,
'27 15:00 Z': 0.0787,
'27 15:30 Z': -0.00088,
'27 16:00 Z': 0.17564,
'27 16:30 Z': 0.66862,
'27 17:00 Z': 0.6782,
'27 17:30 Z': 0.85389,
'27 18:00 Z': 0.92553,
'27 18:30 Z': 1.36792,
'27 19:00 Z': 1.45407,
'27 19:30 Z': 1.29141,
'27 20:00 Z': 1.3573,
'27 20:30 Z': 1.34896,
'27 21:00 Z': 0.86883,
'27 21:30 Z': 0.34881,
'27 22:00 Z': 0.31026,
'27 22:30 Z': 0.17705,
'27 23:00 Z': 0.23044,
'27 23:30 Z': 0.02667,
'28 00:00 Z': 0.00974,
'28 00:30 Z': 0.00555,
'28 01:00 Z': 0.38195,
'28 01:30 Z': 0.33737,
'28 02:00 Z': 0.25924,
'28 02:30 Z': 0.25588,
'28 03:00 Z': 0.47988,
'28 03:30 Z': 0.59013,
'28 04:00 Z': 0.56002,
'28 04:30 Z': 0.42607,
'28 05:00 Z': 0.54394,
'28 05:30 Z': 0.46783,
'28 06:00 Z': 0.44924,
'28 06:30 Z': 0.42884,
'28 07:00 Z': 0.5516,
'28 07:30 Z': 0.55429,
'28 08:00 Z': 0.38146,
'28 08:30 Z': 0.24805,
'28 09:00 Z': 0.4569,
'28 09:30 Z': 0.72006,
'28 10:00 Z': 0.81733,
'28 10:30 Z': 0.88653,
'28 11:00 Z': 1.06218,
'28 11:30 Z': 1.06327,
'28 12:00 Z': 1.31563,
'28 12:30 Z': 1.01337,
'28 13:00 Z': 0.88896,
'28 13:30 Z': 0.56022,
'28 14:00 Z': 0.57237,
'28 14:30 Z': 0.61354,
'28 15:00 Z': 0.77689,
'28 15:30 Z': 1.1442,
'28 16:00 Z': 1.31989,
'28 16:30 Z': 1.52103,
'28 17:00 Z': 1.99336,
'28 17:30 Z': 1.97167,
'28 18:00 Z': 1.79584,
'28 18:30 Z': 1.96886,
'28 19:00 Z': 2.00853,
'28 19:30 Z': 1.72807,
'28 20:00 Z': 1.48324,
'28 20:30 Z': 1.11773,
'28 21:00 Z': 0.77477,
'28 21:30 Z': 0.4181,
'28 22:00 Z': 0.29343,
'28 22:30 Z': 0.29104,
'28 23:00 Z': 0.3233,
'28 23:30 Z': 0.39211,
'29 00:00 Z': 0.36174,
'29 00:30 Z': 0.42563,
'29 01:00 Z': 0.30937,
'29 01:30 Z': 0.21416,
'29 02:00 Z': 0.28196,
'29 02:30 Z': 0.2825,
'29 03:00 Z': 0.24559,
'29 03:30 Z': 0.16015,
'29 04:00 Z': 0.22507,
'29 04:30 Z': 0.13315,
'29 05:00 Z': 0.52215,
'29 05:30 Z': 0.39038,
'29 06:00 Z': 0.94821,
'29 06:30 Z': 1.34329,
'29 07:00 Z': 1.5581,
'29 07:30 Z': 0.90338,
'29 08:00 Z': 0.79753,
'29 08:30 Z': 0.84068,
'29 09:00 Z': 1.07121,
'29 09:30 Z': 0.98553,
'29 10:00 Z': 1.1717,
'29 10:30 Z': 1.07501,
'29 11:00 Z': 1.10692,
'29 11:30 Z': 1.05648,
'29 12:00 Z': 1.08794,
'29 12:30 Z': 1.00283,
'29 13:00 Z': 1.01894,
'29 13:30 Z': 1.0234,
'29 14:00 Z': 0.71823,
'29 14:30 Z': 0.94136,
'29 15:00 Z': 1.08833,
'29 15:30 Z': 1.44523,
'29 16:00 Z': 1.36049,
'29 16:30 Z': 1.44759,
'29 17:00 Z': 1.38695,
'29 17:30 Z': 1.12092,
'29 18:00 Z': 0.90363,
'29 18:30 Z': 1.31566,
'29 19:00 Z': 0.72135,
'29 19:30 Z': 0.49015,
'29 20:00 Z': 0.7323,
'29 20:30 Z': 0.60919,
'29 21:00 Z': 0.73258,
'29 21:30 Z': 0.71289,
'29 22:00 Z': 0.41323,
'29 22:30 Z': 0.55791,
'29 23:00 Z': 0.63184,
'29 23:30 Z': 0.51051,
'30 00:00 Z': 0.54828,
'30 00:30 Z': 0.63117,
'30 01:00 Z': 0.61916,
'30 01:30 Z': 0.53708,
'30 02:00 Z': 0.50634,
'30 02:30 Z': 0.49432,
'30 03:00 Z': 0.48099,
'30 03:30 Z': 0.44775,
'30 04:00 Z': 0.20403,
'30 04:30 Z': 0.57443,
'30 05:00 Z': 0.84441,
'30 05:30 Z': 1.07925,
'30 06:00 Z': 1.39301,
'30 06:30 Z': 1.2731,
'30 07:00 Z': 1.17579,
'30 07:30 Z': 1.14686,
'30 08:00 Z': 0.9208,
'30 08:30 Z': 0.96383,
'30 09:00 Z': 0.89884,
'30 09:30 Z': 1.06932,
'30 10:00 Z': 1.18459,
'30 10:30 Z': 1.16859,
'30 11:00 Z': 1.23852,
'30 11:30 Z': 1.0538,
'30 12:00 Z': 1.09316,
'30 12:30 Z': 0.68954,
'30 13:00 Z': 0.80776,
'30 13:30 Z': 0.80648,
'30 14:00 Z': 0.75742,
'30 14:30 Z': 0.90071,
'30 15:00 Z': 0.97215,
'30 15:30 Z': 1.42885,
'30 16:00 Z': 1.4642,
'30 16:30 Z': 1.37221,
'30 17:00 Z': 1.1612,
'30 17:30 Z': 1.07885,
'30 18:00 Z': 1.31898,
'30 18:30 Z': 1.42981,
'30 19:00 Z': 1.63274,
'30 19:30 Z': 1.77496,
'30 20:00 Z': 1.01033,
'30 20:30 Z': 1.07744,
'30 21:00 Z': 0.66633,
'30 21:30 Z': 0.56909,
'30 22:00 Z': 0.67377,
'30 22:30 Z': 0.67036,
'30 23:00 Z': 0.71549,
'30 23:30 Z': 0.46516,
'31 00:00 Z': 0.63461,
'31 00:30 Z': 0.70522,
'31 01:00 Z': 0.56524,
'31 01:30 Z': 0.59123,
'31 02:00 Z': 0.54621,
'31 02:30 Z': 0.65095,
'31 03:00 Z': 0.58043,
'31 03:30 Z': 0.7466,
'31 04:00 Z': 0.55338,
'31 04:30 Z': 0.4982,
'31 05:00 Z': 0.72106,
'31 05:30 Z': 0.63327,
'31 06:00 Z': 1.37418,
'31 06:30 Z': 1.49205,
'31 07:00 Z': 1.70139,
'31 07:30 Z': 1.19903,
'31 08:00 Z': 1.63252,
'31 08:30 Z': 1.54294,
'31 09:00 Z': 1.79961,
'31 09:30 Z': 1.19312,
'31 10:00 Z': 1.33947,
'31 10:30 Z': 1.57357,
'31 11:00 Z': 1.70352,
'31 11:30 Z': 1.9534,
'31 12:00 Z': 1.5956,
'31 12:30 Z': 1.39091,
'31 13:00 Z': 1.44701,
'31 13:30 Z': 1.2089,
'31 14:00 Z': 1.27027,
'31 14:30 Z': 1.34489,
'31 15:00 Z': 1.58025,
'31 15:30 Z': 1.65583,
'31 16:00 Z': 1.78512,
'31 16:30 Z': 1.49603,
'31 17:00 Z': 1.34294,
'31 17:30 Z': 1.21177,
'31 18:00 Z': 1.31763,
'31 18:30 Z': 1.51553,
'31 19:00 Z': 1.6921,
'31 19:30 Z': 1.2893,
'31 20:00 Z': 0.93044,
'31 20:30 Z': 1.15762,
'31 21:00 Z': 0.96351,
'31 21:30 Z': 1.06892,
'31 22:00 Z': 0.90227,
'31 22:30 Z': 0.86559,
'31 23:00 Z': 0.80602,
'31 23:30 Z': 0.57789}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bsuos]]></value>
        <value><![CDATA[91]]></value>
        <value><![CDATA[2010-04-01T00:00Z]]></value>
        <value><![CDATA[def rates_gbp_per_mwh():
    return {
'01 00:00 Z': 1.03518,
'01 00:30 Z': 1.04602,
'01 01:00 Z': 0.86666,
'01 01:30 Z': 1.0976,
'01 02:00 Z': 1.02574,
'01 02:30 Z': 0.97254,
'01 03:00 Z': 1.06753,
'01 03:30 Z': 0.92691,
'01 04:00 Z': 1.33489,
'01 04:30 Z': 1.40809,
'01 05:00 Z': 1.60226,
'01 05:30 Z': 0.9751,
'01 06:00 Z': 1.43375,
'01 06:30 Z': 1.78852,
'01 07:00 Z': 1.9903,
'01 07:30 Z': 1.59691,
'01 08:00 Z': 1.59801,
'01 08:30 Z': 1.35002,
'01 09:00 Z': 1.29102,
'01 09:30 Z': 1.48993,
'01 10:00 Z': 1.22109,
'01 10:30 Z': 1.04692,
'01 11:00 Z': 1.37434,
'01 11:30 Z': 1.08615,
'01 12:00 Z': 1.34891,
'01 12:30 Z': 0.82723,
'01 13:00 Z': 0.63522,
'01 13:30 Z': 0.52136,
'01 14:00 Z': 0.45627,
'01 14:30 Z': 0.47636,
'01 15:00 Z': 0.52942,
'01 15:30 Z': 0.70104,
'01 16:00 Z': 0.81157,
'01 16:30 Z': 0.77586,
'01 17:00 Z': 0.67205,
'01 17:30 Z': 0.80681,
'01 18:00 Z': 0.92419,
'01 18:30 Z': 1.28576,
'01 19:00 Z': 1.2181,
'01 19:30 Z': 1.27087,
'01 20:00 Z': 1.57887,
'01 20:30 Z': 1.39965,
'01 21:00 Z': 1.23084,
'01 21:30 Z': 1.36888,
'01 22:00 Z': 1.77386,
'01 22:30 Z': 2.0521,
'01 23:00 Z': 1.42019,
'01 23:30 Z': 1.19894,
'02 00:00 Z': 1.4158,
'02 00:30 Z': 1.3186,
'02 01:00 Z': 1.06625,
'02 01:30 Z': 0.88942,
'02 02:00 Z': 0.82128,
'02 02:30 Z': 0.87542,
'02 03:00 Z': 0.73377,
'02 03:30 Z': 0.74239,
'02 04:00 Z': 0.78404,
'02 04:30 Z': 0.55922,
'02 05:00 Z': 1.0502,
'02 05:30 Z': 0.88164,
'02 06:00 Z': 1.20307,
'02 06:30 Z': 1.3139,
'02 07:00 Z': 1.39811,
'02 07:30 Z': 1.45309,
'02 08:00 Z': 1.16328,
'02 08:30 Z': 1.22787,
'02 09:00 Z': 1.47006,
'02 09:30 Z': 1.48598,
'02 10:00 Z': 1.48315,
'02 10:30 Z': 1.68858,
'02 11:00 Z': 1.97089,
'02 11:30 Z': 1.79373,
'02 12:00 Z': 1.83252,
'02 12:30 Z': 1.74751,
'02 13:00 Z': 1.83596,
'02 13:30 Z': 1.46227,
'02 14:00 Z': 1.02606,
'02 14:30 Z': 0.97999,
'02 15:00 Z': 0.91927,
'02 15:30 Z': 0.89529,
'02 16:00 Z': 1.02462,
'02 16:30 Z': 1.00043,
'02 17:00 Z': 0.9242,
'02 17:30 Z': 0.94358,
'02 18:00 Z': 1.202,
'02 18:30 Z': 1.40887,
'02 19:00 Z': 1.72249,
'02 19:30 Z': 1.71476,
'02 20:00 Z': 1.45162,
'02 20:30 Z': 1.20548,
'02 21:00 Z': 1.11117,
'02 21:30 Z': 1.36589,
'02 22:00 Z': 1.3396,
'02 22:30 Z': 1.49875,
'02 23:00 Z': 1.09193,
'02 23:30 Z': 0.96252,
'03 00:00 Z': 0.7823,
'03 00:30 Z': 1.04501,
'03 01:00 Z': 0.87078,
'03 01:30 Z': 1.05178,
'03 02:00 Z': 1.25364,
'03 02:30 Z': 1.19708,
'03 03:00 Z': 1.0814,
'03 03:30 Z': 0.86246,
'03 04:00 Z': 0.84129,
'03 04:30 Z': 0.90925,
'03 05:00 Z': 1.13667,
'03 05:30 Z': 0.74645,
'03 06:00 Z': 0.76254,
'03 06:30 Z': 0.99532,
'03 07:00 Z': 1.03661,
'03 07:30 Z': 1.08076,
'03 08:00 Z': 1.34633,
'03 08:30 Z': 1.35283,
'03 09:00 Z': 1.42908,
'03 09:30 Z': 1.45241,
'03 10:00 Z': 1.3936,
'03 10:30 Z': 1.37625,
'03 11:00 Z': 1.44729,
'03 11:30 Z': 1.4287,
'03 12:00 Z': 1.39563,
'03 12:30 Z': 1.09563,
'03 13:00 Z': 1.05576,
'03 13:30 Z': 0.83373,
'03 14:00 Z': 0.87229,
'03 14:30 Z': 0.88998,
'03 15:00 Z': 0.89576,
'03 15:30 Z': 1.01865,
'03 16:00 Z': 1.13743,
'03 16:30 Z': 1.15798,
'03 17:00 Z': 1.12402,
'03 17:30 Z': 1.0841,
'03 18:00 Z': 1.35593,
'03 18:30 Z': 2.13537,
'03 19:00 Z': 2.09041,
'03 19:30 Z': 1.6935,
'03 20:00 Z': 1.47132,
'03 20:30 Z': 1.26521,
'03 21:00 Z': 1.04451,
'03 21:30 Z': 0.86843,
'03 22:00 Z': 0.71859,
'03 22:30 Z': 0.8371,
'03 23:00 Z': 0.82057,
'03 23:30 Z': 0.60283,
'04 00:00 Z': 0.82774,
'04 00:30 Z': 0.96809,
'04 01:00 Z': 0.92098,
'04 01:30 Z': 0.79536,
'04 02:00 Z': 0.80841,
'04 02:30 Z': 0.85676,
'04 03:00 Z': 0.84123,
'04 03:30 Z': 0.7211,
'04 04:00 Z': 0.6453,
'04 04:30 Z': 0.57192,
'04 05:00 Z': 0.56329,
'04 05:30 Z': 0.39294,
'04 06:00 Z': 0.29015,
'04 06:30 Z': 0.47593,
'04 07:00 Z': 0.69694,
'04 07:30 Z': 0.75956,
'04 08:00 Z': 0.56163,
'04 08:30 Z': 0.63981,
'04 09:00 Z': 1.101,
'04 09:30 Z': 1.25895,
'04 10:00 Z': 1.88731,
'04 10:30 Z': 1.91863,
'04 11:00 Z': 1.8789,
'04 11:30 Z': 1.94308,
'04 12:00 Z': 1.62289,
'04 12:30 Z': 1.20163,
'04 13:00 Z': 0.86665,
'04 13:30 Z': 0.72129,
'04 14:00 Z': 0.72265,
'04 14:30 Z': 0.64551,
'04 15:00 Z': 0.59349,
'04 15:30 Z': 0.49046,
'04 16:00 Z': 0.39036,
'04 16:30 Z': 0.34514,
'04 17:00 Z': 0.31087,
'04 17:30 Z': 0.45098,
'04 18:00 Z': 0.41987,
'04 18:30 Z': 1.02921,
'04 19:00 Z': 1.35767,
'04 19:30 Z': 1.02146,
'04 20:00 Z': 1.05423,
'04 20:30 Z': 0.9052,
'04 21:00 Z': 0.4316,
'04 21:30 Z': 0.24512,
'04 22:00 Z': 0.35624,
'04 22:30 Z': 0.53995,
'04 23:00 Z': 0.50547,
'04 23:30 Z': 0.43881,
'05 00:00 Z': 0.84756,
'05 00:30 Z': 1.04907,
'05 01:00 Z': 1.0448,
'05 01:30 Z': 1.05763,
'05 02:00 Z': 1.07177,
'05 02:30 Z': 0.93098,
'05 03:00 Z': 1.08777,
'05 03:30 Z': 0.92353,
'05 04:00 Z': 0.89144,
'05 04:30 Z': 0.97752,
'05 05:00 Z': 1.19885,
'05 05:30 Z': 0.99373,
'05 06:00 Z': 0.38833,
'05 06:30 Z': 0.29144,
'05 07:00 Z': 0.61156,
'05 07:30 Z': 0.7604,
'05 08:00 Z': 0.52012,
'05 08:30 Z': 0.62569,
'05 09:00 Z': 1.18803,
'05 09:30 Z': 1.32943,
'05 10:00 Z': 1.2082,
'05 10:30 Z': 1.35831,
'05 11:00 Z': 1.48618,
'05 11:30 Z': 1.76052,
'05 12:00 Z': 1.79795,
'05 12:30 Z': 1.60052,
'05 13:00 Z': 1.21475,
'05 13:30 Z': 1.12358,
'05 14:00 Z': 1.13667,
'05 14:30 Z': 1.11148,
'05 15:00 Z': 0.97999,
'05 15:30 Z': 0.94385,
'05 16:00 Z': 0.87645,
'05 16:30 Z': 1.05878,
'05 17:00 Z': 0.90101,
'05 17:30 Z': 0.86944,
'05 18:00 Z': 0.86727,
'05 18:30 Z': 1.9859,
'05 19:00 Z': 1.87619,
'05 19:30 Z': 1.30652,
'05 20:00 Z': 1.0805,
'05 20:30 Z': 0.94033,
'05 21:00 Z': 0.58561,
'05 21:30 Z': 0.3995,
'05 22:00 Z': 0.6061,
'05 22:30 Z': 0.61867,
'05 23:00 Z': 0.65517,
'05 23:30 Z': 0.80683,
'06 00:00 Z': 1.50358,
'06 00:30 Z': 1.59028,
'06 01:00 Z': 1.6563,
'06 01:30 Z': 1.60454,
'06 02:00 Z': 1.64635,
'06 02:30 Z': 1.38022,
'06 03:00 Z': 1.30112,
'06 03:30 Z': 1.0734,
'06 04:00 Z': 1.12609,
'06 04:30 Z': 0.99297,
'06 05:00 Z': 1.07266,
'06 05:30 Z': 0.7427,
'06 06:00 Z': 1.22502,
'06 06:30 Z': 1.21346,
'06 07:00 Z': 1.10273,
'06 07:30 Z': 1.08849,
'06 08:00 Z': 0.86264,
'06 08:30 Z': 0.95304,
'06 09:00 Z': 0.94748,
'06 09:30 Z': 0.82589,
'06 10:00 Z': 0.71112,
'06 10:30 Z': 0.82452,
'06 11:00 Z': 0.85946,
'06 11:30 Z': 0.93466,
'06 12:00 Z': 1.04363,
'06 12:30 Z': 0.68848,
'06 13:00 Z': 0.7584,
'06 13:30 Z': 0.79406,
'06 14:00 Z': 0.93879,
'06 14:30 Z': 1.05793,
'06 15:00 Z': 1.37947,
'06 15:30 Z': 1.36705,
'06 16:00 Z': 1.58149,
'06 16:30 Z': 1.48693,
'06 17:00 Z': 1.56203,
'06 17:30 Z': 1.72599,
'06 18:00 Z': 2.35444,
'06 18:30 Z': 2.02961,
'06 19:00 Z': 3.28334,
'06 19:30 Z': 2.06399,
'06 20:00 Z': 2.06167,
'06 20:30 Z': 1.5887,
'06 21:00 Z': 1.10202,
'06 21:30 Z': 0.81309,
'06 22:00 Z': 1.12642,
'06 22:30 Z': 1.14833,
'06 23:00 Z': 0.98317,
'06 23:30 Z': 0.85754,
'07 00:00 Z': 1.10798,
'07 00:30 Z': 1.30781,
'07 01:00 Z': 1.22386,
'07 01:30 Z': 1.05501,
'07 02:00 Z': 0.96454,
'07 02:30 Z': 0.90972,
'07 03:00 Z': 0.83087,
'07 03:30 Z': 0.84568,
'07 04:00 Z': 0.8138,
'07 04:30 Z': 0.78855,
'07 05:00 Z': 1.31578,
'07 05:30 Z': 0.87629,
'07 06:00 Z': 1.07808,
'07 06:30 Z': 1.26797,
'07 07:00 Z': 1.4761,
'07 07:30 Z': 1.18251,
'07 08:00 Z': 1.91925,
'07 08:30 Z': 1.22441,
'07 09:00 Z': 1.41402,
'07 09:30 Z': 1.52595,
'07 10:00 Z': 1.45397,
'07 10:30 Z': 1.47747,
'07 11:00 Z': 1.23593,
'07 11:30 Z': 1.2142,
'07 12:00 Z': 1.64302,
'07 12:30 Z': 1.3119,
'07 13:00 Z': 1.71767,
'07 13:30 Z': 1.28269,
'07 14:00 Z': 1.41077,
'07 14:30 Z': 1.42099,
'07 15:00 Z': 1.20445,
'07 15:30 Z': 1.36807,
'07 16:00 Z': 1.35453,
'07 16:30 Z': 1.16736,
'07 17:00 Z': 1.05938,
'07 17:30 Z': 0.96839,
'07 18:00 Z': 1.5,
'07 18:30 Z': 1.84532,
'07 19:00 Z': 1.9257,
'07 19:30 Z': 1.56372,
'07 20:00 Z': 1.17593,
'07 20:30 Z': 1.02605,
'07 21:00 Z': 0.76363,
'07 21:30 Z': 0.43831,
'07 22:00 Z': 0.41215,
'07 22:30 Z': 0.67343,
'07 23:00 Z': 0.55106,
'07 23:30 Z': 0.46506,
'08 00:00 Z': 0.71434,
'08 00:30 Z': 0.94167,
'08 01:00 Z': 0.81,
'08 01:30 Z': 0.75609,
'08 02:00 Z': 0.6508,
'08 02:30 Z': 0.41601,
'08 03:00 Z': 0.42897,
'08 03:30 Z': 0.44185,
'08 04:00 Z': 0.68279,
'08 04:30 Z': 0.72543,
'08 05:00 Z': 0.60348,
'08 05:30 Z': 0.48058,
'08 06:00 Z': 0.58741,
'08 06:30 Z': 0.60881,
'08 07:00 Z': 0.81452,
'08 07:30 Z': 0.92588,
'08 08:00 Z': 0.91713,
'08 08:30 Z': 0.97547,
'08 09:00 Z': 0.91477,
'08 09:30 Z': 0.89275,
'08 10:00 Z': 0.99522,
'08 10:30 Z': 0.92539,
'08 11:00 Z': 0.8352,
'08 11:30 Z': 0.95842,
'08 12:00 Z': 0.72992,
'08 12:30 Z': 0.2826,
'08 13:00 Z': 0.40663,
'08 13:30 Z': 0.39627,
'08 14:00 Z': 0.68544,
'08 14:30 Z': 0.59802,
'08 15:00 Z': 0.37744,
'08 15:30 Z': 0.31269,
'08 16:00 Z': 0.31176,
'08 16:30 Z': 0.27361,
'08 17:00 Z': 0.20359,
'08 17:30 Z': 0.14187,
'08 18:00 Z': 0.54081,
'08 18:30 Z': 0.70216,
'08 19:00 Z': 1.58534,
'08 19:30 Z': 1.08288,
'08 20:00 Z': 1.0818,
'08 20:30 Z': 1.11239,
'08 21:00 Z': 0.78763,
'08 21:30 Z': 0.72749,
'08 22:00 Z': 0.78854,
'08 22:30 Z': 0.99537,
'08 23:00 Z': 0.7491,
'08 23:30 Z': 0.70304,
'09 00:00 Z': 0.80308,
'09 00:30 Z': 0.84811,
'09 01:00 Z': 0.80974,
'09 01:30 Z': 0.45756,
'09 02:00 Z': 0.48641,
'09 02:30 Z': 0.42382,
'09 03:00 Z': 0.44823,
'09 03:30 Z': 0.42036,
'09 04:00 Z': 0.54847,
'09 04:30 Z': 0.63171,
'09 05:00 Z': 0.51427,
'09 05:30 Z': 0.20914,
'09 06:00 Z': 0.64975,
'09 06:30 Z': 0.71928,
'09 07:00 Z': 0.78258,
'09 07:30 Z': 0.85222,
'09 08:00 Z': 0.92196,
'09 08:30 Z': 0.7968,
'09 09:00 Z': 0.76626,
'09 09:30 Z': 0.7217,
'09 10:00 Z': 0.68133,
'09 10:30 Z': 0.76032,
'09 11:00 Z': 0.6438,
'09 11:30 Z': 0.47312,
'09 12:00 Z': 0.72652,
'09 12:30 Z': 0.41028,
'09 13:00 Z': 0.34616,
'09 13:30 Z': 0.22044,
'09 14:00 Z': 0.24717,
'09 14:30 Z': 0.29041,
'09 15:00 Z': 0.22344,
'09 15:30 Z': 0.18564,
'09 16:00 Z': 0.12618,
'09 16:30 Z': 0.04719,
'09 17:00 Z': 0.13964,
'09 17:30 Z': 0.19932,
'09 18:00 Z': 0.65659,
'09 18:30 Z': 0.82551,
'09 19:00 Z': 1.08852,
'09 19:30 Z': 0.9101,
'09 20:00 Z': 0.81112,
'09 20:30 Z': 0.6981,
'09 21:00 Z': 0.47658,
'09 21:30 Z': 0.52776,
'09 22:00 Z': 0.44687,
'09 22:30 Z': 0.54769,
'09 23:00 Z': 0.66296,
'09 23:30 Z': 0.51628,
'10 00:00 Z': 0.59378,
'10 00:30 Z': 0.6551,
'10 01:00 Z': 0.59256,
'10 01:30 Z': 0.44194,
'10 02:00 Z': 0.47911,
'10 02:30 Z': 0.67846,
'10 03:00 Z': 0.771,
'10 03:30 Z': 0.86807,
'10 04:00 Z': 0.76797,
'10 04:30 Z': 0.74509,
'10 05:00 Z': 0.73611,
'10 05:30 Z': 0.46543,
'10 06:00 Z': 1.03319,
'10 06:30 Z': 1.16609,
'10 07:00 Z': 1.30357,
'10 07:30 Z': 1.20201,
'10 08:00 Z': 0.99184,
'10 08:30 Z': 1.07837,
'10 09:00 Z': 1.07629,
'10 09:30 Z': 1.12547,
'10 10:00 Z': 0.86196,
'10 10:30 Z': 0.71801,
'10 11:00 Z': 0.75085,
'10 11:30 Z': 0.74496,
'10 12:00 Z': 0.83589,
'10 12:30 Z': 0.2491,
'10 13:00 Z': 0.30463,
'10 13:30 Z': 0.23217,
'10 14:00 Z': 0.26168,
'10 14:30 Z': 0.30137,
'10 15:00 Z': 0.47577,
'10 15:30 Z': 0.60034,
'10 16:00 Z': 0.82968,
'10 16:30 Z': 0.8904,
'10 17:00 Z': 0.651,
'10 17:30 Z': 0.43826,
'10 18:00 Z': 0.86545,
'10 18:30 Z': 0.85765,
'10 19:00 Z': 1.76651,
'10 19:30 Z': 1.35615,
'10 20:00 Z': 1.25492,
'10 20:30 Z': 1.07212,
'10 21:00 Z': 0.73475,
'10 21:30 Z': 0.65078,
'10 22:00 Z': 0.50343,
'10 22:30 Z': 0.57167,
'10 23:00 Z': 0.47437,
'10 23:30 Z': 0.33729,
'11 00:00 Z': 0.48026,
'11 00:30 Z': 0.45269,
'11 01:00 Z': 0.50482,
'11 01:30 Z': 0.38153,
'11 02:00 Z': 0.39461,
'11 02:30 Z': 0.49052,
'11 03:00 Z': 0.76663,
'11 03:30 Z': 0.74414,
'11 04:00 Z': 0.83804,
'11 04:30 Z': 0.87726,
'11 05:00 Z': 0.79779,
'11 05:30 Z': 0.61414,
'11 06:00 Z': 0.35817,
'11 06:30 Z': 0.31914,
'11 07:00 Z': 0.35314,
'11 07:30 Z': 0.40747,
'11 08:00 Z': 0.3442,
'11 08:30 Z': 0.35314,
'11 09:00 Z': 0.83781,
'11 09:30 Z': 0.78393,
'11 10:00 Z': 0.7181,
'11 10:30 Z': 0.7594,
'11 11:00 Z': 0.83678,
'11 11:30 Z': 0.69674,
'11 12:00 Z': 0.66166,
'11 12:30 Z': 0.65914,
'11 13:00 Z': 0.5023,
'11 13:30 Z': 0.60514,
'11 14:00 Z': 0.74094,
'11 14:30 Z': 0.81411,
'11 15:00 Z': 0.66468,
'11 15:30 Z': 0.73623,
'11 16:00 Z': 0.71808,
'11 16:30 Z': 0.60484,
'11 17:00 Z': 0.56418,
'11 17:30 Z': 0.52838,
'11 18:00 Z': 0.53811,
'11 18:30 Z': 0.87761,
'11 19:00 Z': 1.58684,
'11 19:30 Z': 1.31804,
'11 20:00 Z': 1.1535,
'11 20:30 Z': 1.22559,
'11 21:00 Z': 0.61321,
'11 21:30 Z': 0.78798,
'11 22:00 Z': 0.72841,
'11 22:30 Z': 0.78276,
'11 23:00 Z': 0.67681,
'11 23:30 Z': 0.41033,
'12 00:00 Z': 0.44138,
'12 00:30 Z': 0.55361,
'12 01:00 Z': 0.62045,
'12 01:30 Z': 0.65829,
'12 02:00 Z': 0.75631,
'12 02:30 Z': 0.76758,
'12 03:00 Z': 0.63816,
'12 03:30 Z': 0.35418,
'12 04:00 Z': 0.43398,
'12 04:30 Z': 0.47986,
'12 05:00 Z': 0.52102,
'12 05:30 Z': 0.36558,
'12 06:00 Z': 1.07575,
'12 06:30 Z': 1.12505,
'12 07:00 Z': 1.67942,
'12 07:30 Z': 1.55772,
'12 08:00 Z': 1.5454,
'12 08:30 Z': 1.46266,
'12 09:00 Z': 1.43739,
'12 09:30 Z': 1.47292,
'12 10:00 Z': 1.2793,
'12 10:30 Z': 1.36874,
'12 11:00 Z': 1.24795,
'12 11:30 Z': 1.18703,
'12 12:00 Z': 1.39059,
'12 12:30 Z': 0.98613,
'12 13:00 Z': 1.28757,
'12 13:30 Z': 1.28931,
'12 14:00 Z': 1.25927,
'12 14:30 Z': 1.30128,
'12 15:00 Z': 1.27056,
'12 15:30 Z': 1.31908,
'12 16:00 Z': 1.3091,
'12 16:30 Z': 1.17676,
'12 17:00 Z': 0.88068,
'12 17:30 Z': 0.95715,
'12 18:00 Z': 1.20657,
'12 18:30 Z': 1.26066,
'12 19:00 Z': 1.48846,
'12 19:30 Z': 1.58395,
'12 20:00 Z': 1.79497,
'12 20:30 Z': 1.23424,
'12 21:00 Z': 0.97948,
'12 21:30 Z': 0.87738,
'12 22:00 Z': 0.56524,
'12 22:30 Z': 0.6297,
'12 23:00 Z': 0.43187,
'12 23:30 Z': 0.30653,
'13 00:00 Z': 0.66611,
'13 00:30 Z': 0.78069,
'13 01:00 Z': 0.62454,
'13 01:30 Z': 0.43613,
'13 02:00 Z': 0.33093,
'13 02:30 Z': 0.35256,
'13 03:00 Z': 0.74251,
'13 03:30 Z': 0.51562,
'13 04:00 Z': 0.57217,
'13 04:30 Z': 0.67059,
'13 05:00 Z': 0.60858,
'13 05:30 Z': 0.94054,
'13 06:00 Z': 0.83828,
'13 06:30 Z': 0.71677,
'13 07:00 Z': 1.17266,
'13 07:30 Z': 1.1824,
'13 08:00 Z': 1.09448,
'13 08:30 Z': 1.13039,
'13 09:00 Z': 1.03602,
'13 09:30 Z': 1.11428,
'13 10:00 Z': 1.07848,
'13 10:30 Z': 1.06393,
'13 11:00 Z': 1.0813,
'13 11:30 Z': 1.0679,
'13 12:00 Z': 1.30334,
'13 12:30 Z': 0.85643,
'13 13:00 Z': 0.76372,
'13 13:30 Z': 0.84167,
'13 14:00 Z': 0.79349,
'13 14:30 Z': 1.02932,
'13 15:00 Z': 1.09456,
'13 15:30 Z': 1.10101,
'13 16:00 Z': 1.3597,
'13 16:30 Z': 1.28671,
'13 17:00 Z': 0.9716,
'13 17:30 Z': 0.78071,
'13 18:00 Z': 1.32942,
'13 18:30 Z': 1.5187,
'13 19:00 Z': 1.73439,
'13 19:30 Z': 1.49349,
'13 20:00 Z': 1.77191,
'13 20:30 Z': 1.45993,
'13 21:00 Z': 0.7389,
'13 21:30 Z': 0.48807,
'13 22:00 Z': 0.54606,
'13 22:30 Z': 0.57968,
'13 23:00 Z': 0.40482,
'13 23:30 Z': 0.33644,
'14 00:00 Z': 0.40445,
'14 00:30 Z': 0.61796,
'14 01:00 Z': 0.55926,
'14 01:30 Z': 0.5581,
'14 02:00 Z': 0.50347,
'14 02:30 Z': 0.48458,
'14 03:00 Z': 0.50237,
'14 03:30 Z': 0.54797,
'14 04:00 Z': 0.68463,
'14 04:30 Z': 0.69986,
'14 05:00 Z': 0.6147,
'14 05:30 Z': 0.6192,
'14 06:00 Z': 0.9657,
'14 06:30 Z': 1.08383,
'14 07:00 Z': 1.27486,
'14 07:30 Z': 1.35231,
'14 08:00 Z': 1.76433,
'14 08:30 Z': 1.44771,
'14 09:00 Z': 1.55037,
'14 09:30 Z': 2.04738,
'14 10:00 Z': 1.7203,
'14 10:30 Z': 1.8672,
'14 11:00 Z': 1.76344,
'14 11:30 Z': 1.4188,
'14 12:00 Z': 1.78063,
'14 12:30 Z': 1.2517,
'14 13:00 Z': 1.42727,
'14 13:30 Z': 1.20311,
'14 14:00 Z': 0.86112,
'14 14:30 Z': 0.94553,
'14 15:00 Z': 0.90107,
'14 15:30 Z': 0.99221,
'14 16:00 Z': 0.93318,
'14 16:30 Z': 0.82724,
'14 17:00 Z': 0.71051,
'14 17:30 Z': 0.57148,
'14 18:00 Z': 0.88095,
'14 18:30 Z': 0.85329,
'14 19:00 Z': 1.19814,
'14 19:30 Z': 1.47508,
'14 20:00 Z': 1.66648,
'14 20:30 Z': 1.2324,
'14 21:00 Z': 1.0157,
'14 21:30 Z': 0.7269,
'14 22:00 Z': 0.69686,
'14 22:30 Z': 0.8262,
'14 23:00 Z': 0.68471,
'14 23:30 Z': 0.59296,
'15 00:00 Z': 0.67561,
'15 00:30 Z': 0.80302,
'15 01:00 Z': 0.81936,
'15 01:30 Z': 0.38998,
'15 02:00 Z': 0.33941,
'15 02:30 Z': 0.46463,
'15 03:00 Z': 0.47078,
'15 03:30 Z': 0.40423,
'15 04:00 Z': 0.51247,
'15 04:30 Z': 0.43735,
'15 05:00 Z': 0.62606,
'15 05:30 Z': 0.50198,
'15 06:00 Z': 0.81181,
'15 06:30 Z': 0.90428,
'15 07:00 Z': 0.93388,
'15 07:30 Z': 0.95226,
'15 08:00 Z': 1.07221,
'15 08:30 Z': 1.07517,
'15 09:00 Z': 1.06015,
'15 09:30 Z': 1.08719,
'15 10:00 Z': 1.00871,
'15 10:30 Z': 1.05394,
'15 11:00 Z': 0.97408,
'15 11:30 Z': 0.93091,
'15 12:00 Z': 1.11173,
'15 12:30 Z': 0.86865,
'15 13:00 Z': 0.98679,
'15 13:30 Z': 1.03585,
'15 14:00 Z': 0.52078,
'15 14:30 Z': 0.44117,
'15 15:00 Z': 0.5244,
'15 15:30 Z': 0.48297,
'15 16:00 Z': 0.5981,
'15 16:30 Z': 0.39854,
'15 17:00 Z': 0.54545,
'15 17:30 Z': 0.49045,
'15 18:00 Z': 0.95376,
'15 18:30 Z': 0.8682,
'15 19:00 Z': 1.48341,
'15 19:30 Z': 1.63163,
'15 20:00 Z': 1.38536,
'15 20:30 Z': 1.30581,
'15 21:00 Z': 1.26871,
'15 21:30 Z': 0.71673,
'15 22:00 Z': 0.48524,
'15 22:30 Z': 0.94008,
'15 23:00 Z': 0.93124,
'15 23:30 Z': 0.64379,
'16 00:00 Z': 0.71523,
'16 00:30 Z': 0.65012,
'16 01:00 Z': 0.51102,
'16 01:30 Z': 0.40006,
'16 02:00 Z': 0.32168,
'16 02:30 Z': 0.39215,
'16 03:00 Z': 0.41699,
'16 03:30 Z': 0.47308,
'16 04:00 Z': 0.73589,
'16 04:30 Z': 0.97975,
'16 05:00 Z': 0.95904,
'16 05:30 Z': 0.8155,
'16 06:00 Z': 0.82557,
'16 06:30 Z': 0.91453,
'16 07:00 Z': 1.08559,
'16 07:30 Z': 1.31693,
'16 08:00 Z': 1.05924,
'16 08:30 Z': 0.88121,
'16 09:00 Z': 0.89698,
'16 09:30 Z': 0.91064,
'16 10:00 Z': 0.80373,
'16 10:30 Z': 0.78662,
'16 11:00 Z': 0.73371,
'16 11:30 Z': 0.68957,
'16 12:00 Z': 0.74963,
'16 12:30 Z': 0.39515,
'16 13:00 Z': 0.3073,
'16 13:30 Z': 0.16639,
'16 14:00 Z': 0.03309,
'16 14:30 Z': -0.12526,
'16 15:00 Z': -0.00681,
'16 15:30 Z': 0.13003,
'16 16:00 Z': 0.25525,
'16 16:30 Z': 0.15165,
'16 17:00 Z': -0.02417,
'16 17:30 Z': -0.13527,
'16 18:00 Z': 0.15453,
'16 18:30 Z': 0.19472,
'16 19:00 Z': 0.38457,
'16 19:30 Z': 1.01898,
'16 20:00 Z': 1.35496,
'16 20:30 Z': 1.09083,
'16 21:00 Z': 1.09728,
'16 21:30 Z': 1.10211,
'16 22:00 Z': 0.67784,
'16 22:30 Z': 0.72626,
'16 23:00 Z': 0.72094,
'16 23:30 Z': 0.38533,
'17 00:00 Z': 0.46405,
'17 00:30 Z': 0.57443,
'17 01:00 Z': 0.32746,
'17 01:30 Z': 0.33593,
'17 02:00 Z': 1.05097,
'17 02:30 Z': 0.34257,
'17 03:00 Z': 0.32915,
'17 03:30 Z': 0.20379,
'17 04:00 Z': 0.25326,
'17 04:30 Z': 0.36073,
'17 05:00 Z': 0.71044,
'17 05:30 Z': 0.72722,
'17 06:00 Z': 0.63109,
'17 06:30 Z': 1.18294,
'17 07:00 Z': 1.00909,
'17 07:30 Z': 0.8896,
'17 08:00 Z': 0.90223,
'17 08:30 Z': 0.83817,
'17 09:00 Z': 0.92799,
'17 09:30 Z': 0.79302,
'17 10:00 Z': 0.73243,
'17 10:30 Z': 0.92589,
'17 11:00 Z': 0.58645,
'17 11:30 Z': 0.51788,
'17 12:00 Z': 0.4495,
'17 12:30 Z': 0.07409,
'17 13:00 Z': 0.0202,
'17 13:30 Z': -0.04828,
'17 14:00 Z': 0.01793,
'17 14:30 Z': 0.03867,
'17 15:00 Z': 0.03375,
'17 15:30 Z': 0.05488,
'17 16:00 Z': 0.12664,
'17 16:30 Z': 0.3404,
'17 17:00 Z': 0.28565,
'17 17:30 Z': 0.2715,
'17 18:00 Z': 0.57082,
'17 18:30 Z': 0.7212,
'17 19:00 Z': 1.00436,
'17 19:30 Z': 1.42913,
'17 20:00 Z': 1.38401,
'17 20:30 Z': 1.42501,
'17 21:00 Z': 0.7574,
'17 21:30 Z': 0.74767,
'17 22:00 Z': 0.87449,
'17 22:30 Z': 0.7887,
'17 23:00 Z': 1.06529,
'17 23:30 Z': 0.49376,
'18 00:00 Z': 0.57484,
'18 00:30 Z': 0.57566,
'18 01:00 Z': 0.45203,
'18 01:30 Z': 0.35458,
'18 02:00 Z': 0.36942,
'18 02:30 Z': 0.53061,
'18 03:00 Z': 0.52943,
'18 03:30 Z': 0.48804,
'18 04:00 Z': 0.57875,
'18 04:30 Z': 0.48035,
'18 05:00 Z': 0.39028,
'18 05:30 Z': 0.55653,
'18 06:00 Z': 0.57153,
'18 06:30 Z': 0.58754,
'18 07:00 Z': 0.91697,
'18 07:30 Z': 1.23683,
'18 08:00 Z': 0.64012,
'18 08:30 Z': 0.71738,
'18 09:00 Z': 1.138,
'18 09:30 Z': 1.08806,
'18 10:00 Z': 0.95173,
'18 10:30 Z': 0.94852,
'18 11:00 Z': 0.94877,
'18 11:30 Z': 0.91304,
'18 12:00 Z': 0.9655,
'18 12:30 Z': 0.89575,
'18 13:00 Z': 0.59042,
'18 13:30 Z': 0.4621,
'18 14:00 Z': 0.56962,
'18 14:30 Z': 0.64272,
'18 15:00 Z': 0.72769,
'18 15:30 Z': 0.94519,
'18 16:00 Z': 1.69751,
'18 16:30 Z': 1.59587,
'18 17:00 Z': 1.19185,
'18 17:30 Z': 0.92889,
'18 18:00 Z': 0.86424,
'18 18:30 Z': 1.04487,
'18 19:00 Z': 1.53524,
'18 19:30 Z': 1.47257,
'18 20:00 Z': 1.41445,
'18 20:30 Z': 1.03999,
'18 21:00 Z': 0.78222,
'18 21:30 Z': 0.56233,
'18 22:00 Z': 0.63455,
'18 22:30 Z': 0.53764,
'18 23:00 Z': 0.43436,
'18 23:30 Z': 0.34822,
'19 00:00 Z': 0.44005,
'19 00:30 Z': 0.55736,
'19 01:00 Z': 0.49576,
'19 01:30 Z': 0.44936,
'19 02:00 Z': 0.54179,
'19 02:30 Z': 0.51571,
'19 03:00 Z': 0.53958,
'19 03:30 Z': 0.52676,
'19 04:00 Z': 0.54237,
'19 04:30 Z': 0.50735,
'19 05:00 Z': 0.82256,
'19 05:30 Z': 0.88695,
'19 06:00 Z': 1.12921,
'19 06:30 Z': 1.15341,
'19 07:00 Z': 1.31313,
'19 07:30 Z': 1.10465,
'19 08:00 Z': 1.09696,
'19 08:30 Z': 1.12906,
'19 09:00 Z': 1.02565,
'19 09:30 Z': 0.97335,
'19 10:00 Z': 0.97555,
'19 10:30 Z': 0.99816,
'19 11:00 Z': 1.14958,
'19 11:30 Z': 1.15682,
'19 12:00 Z': 1.2733,
'19 12:30 Z': 0.97226,
'19 13:00 Z': 1.02994,
'19 13:30 Z': 0.90481,
'19 14:00 Z': 0.79027,
'19 14:30 Z': 0.81099,
'19 15:00 Z': 0.93817,
'19 15:30 Z': 0.82726,
'19 16:00 Z': 0.88364,
'19 16:30 Z': 0.76833,
'19 17:00 Z': 0.65365,
'19 17:30 Z': 0.8377,
'19 18:00 Z': 0.93327,
'19 18:30 Z': 1.11153,
'19 19:00 Z': 1.34992,
'19 19:30 Z': 1.21779,
'19 20:00 Z': 1.18195,
'19 20:30 Z': 0.75519,
'19 21:00 Z': 0.52205,
'19 21:30 Z': 0.03228,
'19 22:00 Z': 0.35925,
'19 22:30 Z': 0.5343,
'19 23:00 Z': 0.41181,
'19 23:30 Z': 0.24112,
'20 00:00 Z': 0.36453,
'20 00:30 Z': 0.38297,
'20 01:00 Z': 0.32089,
'20 01:30 Z': 0.28924,
'20 02:00 Z': 0.25306,
'20 02:30 Z': 0.22547,
'20 03:00 Z': 0.41795,
'20 03:30 Z': 0.31388,
'20 04:00 Z': 0.20069,
'20 04:30 Z': 0.14673,
'20 05:00 Z': 0.2436,
'20 05:30 Z': 0.46617,
'20 06:00 Z': 1.01125,
'20 06:30 Z': 1.2245,
'20 07:00 Z': 1.31708,
'20 07:30 Z': 1.13003,
'20 08:00 Z': 1.12222,
'20 08:30 Z': 1.24163,
'20 09:00 Z': 1.15543,
'20 09:30 Z': 1.22073,
'20 10:00 Z': 1.33271,
'20 10:30 Z': 1.47408,
'20 11:00 Z': 1.5433,
'20 11:30 Z': 1.57177,
'20 12:00 Z': 1.56154,
'20 12:30 Z': 1.24299,
'20 13:00 Z': 1.12372,
'20 13:30 Z': 1.32682,
'20 14:00 Z': 0.71991,
'20 14:30 Z': 0.44212,
'20 15:00 Z': 0.52407,
'20 15:30 Z': 0.66965,
'20 16:00 Z': 0.70491,
'20 16:30 Z': 0.51157,
'20 17:00 Z': 0.49854,
'20 17:30 Z': 0.50561,
'20 18:00 Z': 0.78064,
'20 18:30 Z': 0.91785,
'20 19:00 Z': 1.45665,
'20 19:30 Z': 1.11493,
'20 20:00 Z': 1.13497,
'20 20:30 Z': 1.12689,
'20 21:00 Z': 0.82193,
'20 21:30 Z': 0.35385,
'20 22:00 Z': 0.6059,
'20 22:30 Z': 0.62473,
'20 23:00 Z': 0.42103,
'20 23:30 Z': 0.21561,
'21 00:00 Z': 0.42497,
'21 00:30 Z': 0.5238,
'21 01:00 Z': 0.56716,
'21 01:30 Z': 0.50988,
'21 02:00 Z': 0.54449,
'21 02:30 Z': 0.51849,
'21 03:00 Z': 0.56131,
'21 03:30 Z': 0.55339,
'21 04:00 Z': 0.59829,
'21 04:30 Z': 0.5072,
'21 05:00 Z': 0.59707,
'21 05:30 Z': 0.88691,
'21 06:00 Z': 2.07568,
'21 06:30 Z': 2.13618,
'21 07:00 Z': 2.35045,
'21 07:30 Z': 2.51763,
'21 08:00 Z': 2.26178,
'21 08:30 Z': 2.46097,
'21 09:00 Z': 2.76787,
'21 09:30 Z': 2.89993,
'21 10:00 Z': 2.86213,
'21 10:30 Z': 2.59217,
'21 11:00 Z': 2.53352,
'21 11:30 Z': 2.54074,
'21 12:00 Z': 2.37361,
'21 12:30 Z': 1.8148,
'21 13:00 Z': 1.68755,
'21 13:30 Z': 0.97123,
'21 14:00 Z': 0.80987,
'21 14:30 Z': 0.6335,
'21 15:00 Z': 0.45256,
'21 15:30 Z': 0.90538,
'21 16:00 Z': 1.05033,
'21 16:30 Z': 0.84681,
'21 17:00 Z': 0.97035,
'21 17:30 Z': 1.19864,
'21 18:00 Z': 1.69261,
'21 18:30 Z': 1.83935,
'21 19:00 Z': 2.10478,
'21 19:30 Z': 2.56464,
'21 20:00 Z': 2.12707,
'21 20:30 Z': 1.46657,
'21 21:00 Z': 1.04076,
'21 21:30 Z': 0.74932,
'21 22:00 Z': 1.2325,
'21 22:30 Z': 0.99245,
'21 23:00 Z': 0.4578,
'21 23:30 Z': 0.11196,
'22 00:00 Z': 0.35938,
'22 00:30 Z': 0.36588,
'22 01:00 Z': 0.37954,
'22 01:30 Z': 0.32037,
'22 02:00 Z': 0.35868,
'22 02:30 Z': 0.24306,
'22 03:00 Z': 0.31575,
'22 03:30 Z': 0.26815,
'22 04:00 Z': 0.35322,
'22 04:30 Z': 0.23275,
'22 05:00 Z': 0.44705,
'22 05:30 Z': 0.46673,
'22 06:00 Z': 1.13134,
'22 06:30 Z': 1.21499,
'22 07:00 Z': 1.30643,
'22 07:30 Z': 1.26097,
'22 08:00 Z': 1.24196,
'22 08:30 Z': 1.23973,
'22 09:00 Z': 1.16809,
'22 09:30 Z': 1.07878,
'22 10:00 Z': 1.04515,
'22 10:30 Z': 1.01854,
'22 11:00 Z': 1.00015,
'22 11:30 Z': 1.06945,
'22 12:00 Z': 1.2557,
'22 12:30 Z': 0.84078,
'22 13:00 Z': 0.84404,
'22 13:30 Z': 0.82833,
'22 14:00 Z': 0.80385,
'22 14:30 Z': 0.88313,
'22 15:00 Z': 0.80597,
'22 15:30 Z': 0.89255,
'22 16:00 Z': 0.91569,
'22 16:30 Z': 0.90342,
'22 17:00 Z': 0.51856,
'22 17:30 Z': 0.53623,
'22 18:00 Z': 1.06106,
'22 18:30 Z': 1.27326,
'22 19:00 Z': 1.61,
'22 19:30 Z': 2.11265,
'22 20:00 Z': 1.81231,
'22 20:30 Z': 1.26847,
'22 21:00 Z': 0.7246,
'22 21:30 Z': 0.60625,
'22 22:00 Z': 0.64141,
'22 22:30 Z': 0.56188,
'22 23:00 Z': 0.48622,
'22 23:30 Z': 0.40798,
'23 00:00 Z': 0.48987,
'23 00:30 Z': 0.60446,
'23 01:00 Z': 0.4908,
'23 01:30 Z': 0.40633,
'23 02:00 Z': 0.41991,
'23 02:30 Z': 0.35291,
'23 03:00 Z': 0.21843,
'23 03:30 Z': 0.18542,
'23 04:00 Z': 0.45376,
'23 04:30 Z': 0.52568,
'23 05:00 Z': 0.65746,
'23 05:30 Z': 0.90033,
'23 06:00 Z': 1.69318,
'23 06:30 Z': 2.02937,
'23 07:00 Z': 1.89808,
'23 07:30 Z': 1.82557,
'23 08:00 Z': 1.57885,
'23 08:30 Z': 1.52014,
'23 09:00 Z': 1.53219,
'23 09:30 Z': 1.50389,
'23 10:00 Z': 1.71547,
'23 10:30 Z': 1.56784,
'23 11:00 Z': 1.30535,
'23 11:30 Z': 0.94993,
'23 12:00 Z': 0.86488,
'23 12:30 Z': 0.59978,
'23 13:00 Z': 0.80443,
'23 13:30 Z': 0.58368,
'23 14:00 Z': 0.27231,
'23 14:30 Z': 0.53096,
'23 15:00 Z': 0.67098,
'23 15:30 Z': 0.73427,
'23 16:00 Z': 0.64422,
'23 16:30 Z': 0.60657,
'23 17:00 Z': 0.49588,
'23 17:30 Z': 0.41556,
'23 18:00 Z': 0.68152,
'23 18:30 Z': 0.90313,
'23 19:00 Z': 1.15576,
'23 19:30 Z': 2.33324,
'23 20:00 Z': 2.59947,
'23 20:30 Z': 1.48122,
'23 21:00 Z': 1.18259,
'23 21:30 Z': 0.86767,
'23 22:00 Z': 0.61065,
'23 22:30 Z': 0.72779,
'23 23:00 Z': 0.70996,
'23 23:30 Z': 0.60818,
'24 00:00 Z': 0.63307,
'24 00:30 Z': 0.67897,
'24 01:00 Z': 0.38497,
'24 01:30 Z': 0.31828,
'24 02:00 Z': 0.45723,
'24 02:30 Z': 0.46892,
'24 03:00 Z': 0.42464,
'24 03:30 Z': 0.43744,
'24 04:00 Z': 0.37053,
'24 04:30 Z': 0.24999,
'24 05:00 Z': 0.58314,
'24 05:30 Z': 0.41009,
'24 06:00 Z': 0.7243,
'24 06:30 Z': 0.93454,
'24 07:00 Z': 1.55479,
'24 07:30 Z': 2.73443,
'24 08:00 Z': 2.12076,
'24 08:30 Z': 1.8491,
'24 09:00 Z': 1.90141,
'24 09:30 Z': 1.59735,
'24 10:00 Z': 0.97006,
'24 10:30 Z': 0.9171,
'24 11:00 Z': 0.89284,
'24 11:30 Z': 0.94385,
'24 12:00 Z': 0.7974,
'24 12:30 Z': 0.41161,
'24 13:00 Z': 0.29181,
'24 13:30 Z': 0.25814,
'24 14:00 Z': 0.40413,
'24 14:30 Z': 0.48581,
'24 15:00 Z': 0.30887,
'24 15:30 Z': 0.35797,
'24 16:00 Z': 0.36109,
'24 16:30 Z': 0.46332,
'24 17:00 Z': 0.36743,
'24 17:30 Z': 0.28727,
'24 18:00 Z': 0.84613,
'24 18:30 Z': 0.63837,
'24 19:00 Z': 0.87747,
'24 19:30 Z': 1.42179,
'24 20:00 Z': 1.57112,
'24 20:30 Z': 1.35639,
'24 21:00 Z': 0.9269,
'24 21:30 Z': 0.67036,
'24 22:00 Z': 0.21668,
'24 22:30 Z': 0.3424,
'24 23:00 Z': 0.6153,
'24 23:30 Z': 0.4761,
'25 00:00 Z': 0.60985,
'25 00:30 Z': 0.80794,
'25 01:00 Z': 0.69635,
'25 01:30 Z': 0.46111,
'25 02:00 Z': 0.51932,
'25 02:30 Z': 0.65622,
'25 03:00 Z': 0.58177,
'25 03:30 Z': 0.43998,
'25 04:00 Z': 0.44921,
'25 04:30 Z': 0.26807,
'25 05:00 Z': 0.29067,
'25 05:30 Z': 0.52681,
'25 06:00 Z': 0.68227,
'25 06:30 Z': 0.8769,
'25 07:00 Z': 1.42132,
'25 07:30 Z': 1.94313,
'25 08:00 Z': 1.37871,
'25 08:30 Z': 0.95971,
'25 09:00 Z': 1.67766,
'25 09:30 Z': 1.64943,
'25 10:00 Z': 1.30349,
'25 10:30 Z': 1.43268,
'25 11:00 Z': 1.63481,
'25 11:30 Z': 1.63065,
'25 12:00 Z': 1.69552,
'25 12:30 Z': 1.3757,
'25 13:00 Z': 0.9,
'25 13:30 Z': 1.06958,
'25 14:00 Z': 1.07608,
'25 14:30 Z': 1.17659,
'25 15:00 Z': 1.51034,
'25 15:30 Z': 1.64205,
'25 16:00 Z': 1.42599,
'25 16:30 Z': 0.93537,
'25 17:00 Z': 0.70448,
'25 17:30 Z': 0.72845,
'25 18:00 Z': 1.00464,
'25 18:30 Z': 1.54093,
'25 19:00 Z': 1.60345,
'25 19:30 Z': 1.54966,
'25 20:00 Z': 1.66285,
'25 20:30 Z': 1.27127,
'25 21:00 Z': 0.67357,
'25 21:30 Z': 0.13184,
'25 22:00 Z': 0.12956,
'25 22:30 Z': 0.26291,
'25 23:00 Z': 0.14542,
'25 23:30 Z': 0.35174,
'26 00:00 Z': 0.57137,
'26 00:30 Z': 0.73402,
'26 01:00 Z': 0.70881,
'26 01:30 Z': 0.3,
'26 02:00 Z': 0.37292,
'26 02:30 Z': 0.35176,
'26 03:00 Z': 0.36268,
'26 03:30 Z': 0.13339,
'26 04:00 Z': 0.05557,
'26 04:30 Z': 0.36271,
'26 05:00 Z': 0.58051,
'26 05:30 Z': 0.55787,
'26 06:00 Z': 0.47056,
'26 06:30 Z': 0.78644,
'26 07:00 Z': 1.00193,
'26 07:30 Z': 1.00797,
'26 08:00 Z': 0.98731,
'26 08:30 Z': 0.90686,
'26 09:00 Z': 0.68959,
'26 09:30 Z': 0.70412,
'26 10:00 Z': 0.74322,
'26 10:30 Z': 0.81032,
'26 11:00 Z': 0.75837,
'26 11:30 Z': 0.72658,
'26 12:00 Z': 0.79896,
'26 12:30 Z': 0.73134,
'26 13:00 Z': 0.37288,
'26 13:30 Z': 0.53801,
'26 14:00 Z': 0.42709,
'26 14:30 Z': 0.585,
'26 15:00 Z': 1.2837,
'26 15:30 Z': 1.27738,
'26 16:00 Z': 0.95708,
'26 16:30 Z': 0.80636,
'26 17:00 Z': 0.60471,
'26 17:30 Z': 0.42818,
'26 18:00 Z': 0.30907,
'26 18:30 Z': 0.75575,
'26 19:00 Z': 1.05484,
'26 19:30 Z': 2.03923,
'26 20:00 Z': 1.29027,
'26 20:30 Z': 0.80423,
'26 21:00 Z': 1.22809,
'26 21:30 Z': 0.4523,
'26 22:00 Z': 0.44727,
'26 22:30 Z': 0.59736,
'26 23:00 Z': 0.63273,
'26 23:30 Z': 0.4587,
'27 00:00 Z': 0.49574,
'27 00:30 Z': 0.5593,
'27 01:00 Z': 0.39481,
'27 01:30 Z': 0.35108,
'27 02:00 Z': 0.46917,
'27 02:30 Z': 0.41801,
'27 03:00 Z': 0.50394,
'27 03:30 Z': 0.60224,
'27 04:00 Z': 0.62507,
'27 04:30 Z': 0.40491,
'27 05:00 Z': 0.70625,
'27 05:30 Z': 0.54487,
'27 06:00 Z': 0.95977,
'27 06:30 Z': 1.35394,
'27 07:00 Z': 1.42711,
'27 07:30 Z': 1.22097,
'27 08:00 Z': 1.07931,
'27 08:30 Z': 0.95385,
'27 09:00 Z': 0.95867,
'27 09:30 Z': 0.87444,
'27 10:00 Z': 0.84535,
'27 10:30 Z': 1.00533,
'27 11:00 Z': 0.94925,
'27 11:30 Z': 0.99114,
'27 12:00 Z': 1.09356,
'27 12:30 Z': 0.84422,
'27 13:00 Z': 0.48507,
'27 13:30 Z': 0.34194,
'27 14:00 Z': 0.43068,
'27 14:30 Z': 0.73412,
'27 15:00 Z': 1.07834,
'27 15:30 Z': 1.09681,
'27 16:00 Z': 1.23674,
'27 16:30 Z': 1.09158,
'27 17:00 Z': 0.68775,
'27 17:30 Z': 0.81602,
'27 18:00 Z': 0.77143,
'27 18:30 Z': 1.02186,
'27 19:00 Z': 1.23534,
'27 19:30 Z': 1.42724,
'27 20:00 Z': 1.65152,
'27 20:30 Z': 1.29939,
'27 21:00 Z': 1.0634,
'27 21:30 Z': 0.93547,
'27 22:00 Z': 0.75382,
'27 22:30 Z': 0.56133,
'27 23:00 Z': 0.57515,
'27 23:30 Z': 0.53255,
'28 00:00 Z': 0.86721,
'28 00:30 Z': 0.73664,
'28 01:00 Z': 0.62224,
'28 01:30 Z': 0.45848,
'28 02:00 Z': 0.39209,
'28 02:30 Z': 0.31392,
'28 03:00 Z': 0.32557,
'28 03:30 Z': 0.29812,
'28 04:00 Z': 0.48746,
'28 04:30 Z': 0.30023,
'28 05:00 Z': 0.50925,
'28 05:30 Z': 0.64561,
'28 06:00 Z': 0.56723,
'28 06:30 Z': 1.07831,
'28 07:00 Z': 1.57489,
'28 07:30 Z': 1.53378,
'28 08:00 Z': 1.06423,
'28 08:30 Z': 1.07729,
'28 09:00 Z': 1.12543,
'28 09:30 Z': 0.8388,
'28 10:00 Z': 1.13909,
'28 10:30 Z': 1.25534,
'28 11:00 Z': 1.25367,
'28 11:30 Z': 0.80762,
'28 12:00 Z': 0.92629,
'28 12:30 Z': 0.84272,
'28 13:00 Z': 0.50195,
'28 13:30 Z': 0.2882,
'28 14:00 Z': 0.63499,
'28 14:30 Z': 0.88143,
'28 15:00 Z': 1.42441,
'28 15:30 Z': 1.53978,
'28 16:00 Z': 1.43445,
'28 16:30 Z': 1.14514,
'28 17:00 Z': 0.79737,
'28 17:30 Z': 1.03301,
'28 18:00 Z': 0.99945,
'28 18:30 Z': 1.21822,
'28 19:00 Z': 1.12995,
'28 19:30 Z': 1.53727,
'28 20:00 Z': 1.52987,
'28 20:30 Z': 1.19205,
'28 21:00 Z': 1.42024,
'28 21:30 Z': 0.604,
'28 22:00 Z': 0.62749,
'28 22:30 Z': 0.83811,
'28 23:00 Z': 0.94932,
'28 23:30 Z': 0.79374,
'29 00:00 Z': 0.88408,
'29 00:30 Z': 0.88106,
'29 01:00 Z': 0.7319,
'29 01:30 Z': 0.64825,
'29 02:00 Z': 0.67577,
'29 02:30 Z': 0.78016,
'29 03:00 Z': 0.83509,
'29 03:30 Z': 0.7651,
'29 04:00 Z': 1.37243,
'29 04:30 Z': 1.09667,
'29 05:00 Z': 1.37273,
'29 05:30 Z': 1.54762,
'29 06:00 Z': 1.53095,
'29 06:30 Z': 2.02744,
'29 07:00 Z': 1.72942,
'29 07:30 Z': 1.25794,
'29 08:00 Z': 1.85803,
'29 08:30 Z': 1.97254,
'29 09:00 Z': 1.77828,
'29 09:30 Z': 1.89489,
'29 10:00 Z': 1.30934,
'29 10:30 Z': 1.30577,
'29 11:00 Z': 1.23664,
'29 11:30 Z': 1.0783,
'29 12:00 Z': 1.16017,
'29 12:30 Z': 1.04824,
'29 13:00 Z': 1.06542,
'29 13:30 Z': 0.69913,
'29 14:00 Z': 0.54445,
'29 14:30 Z': 1.15175,
'29 15:00 Z': 2.14317,
'29 15:30 Z': 2.16215,
'29 16:00 Z': 2.0171,
'29 16:30 Z': 2.1346,
'29 17:00 Z': 1.66332,
'29 17:30 Z': 1.67034,
'29 18:00 Z': 1.82949,
'29 18:30 Z': 1.99024,
'29 19:00 Z': 1.98041,
'29 19:30 Z': 1.8732,
'29 20:00 Z': 1.79652,
'29 20:30 Z': 1.38739,
'29 21:00 Z': 1.45049,
'29 21:30 Z': 0.93233,
'29 22:00 Z': 0.65614,
'29 22:30 Z': 0.77564,
'29 23:00 Z': 0.59114,
'29 23:30 Z': 0.46373,
'30 00:00 Z': 0.42115,
'30 00:30 Z': 0.44856,
'30 01:00 Z': 0.39079,
'30 01:30 Z': 0.46499,
'30 02:00 Z': 0.34899,
'30 02:30 Z': 0.42184,
'30 03:00 Z': 0.4155,
'30 03:30 Z': 0.32646,
'30 04:00 Z': 0.61359,
'30 04:30 Z': 0.41512,
'30 05:00 Z': 0.96618,
'30 05:30 Z': 1.06961,
'30 06:00 Z': 0.81636,
'30 06:30 Z': 1.32456,
'30 07:00 Z': 0.95402,
'30 07:30 Z': 0.80784,
'30 08:00 Z': 0.86261,
'30 08:30 Z': 0.92739,
'30 09:00 Z': 0.99728,
'30 09:30 Z': 0.85239,
'30 10:00 Z': 0.87959,
'30 10:30 Z': 0.94815,
'30 11:00 Z': 0.89352,
'30 11:30 Z': 0.76571,
'30 12:00 Z': 0.76824,
'30 12:30 Z': 0.66233,
'30 13:00 Z': 0.39594,
'30 13:30 Z': 0.2502,
'30 14:00 Z': 0.0995,
'30 14:30 Z': 0.15877,
'30 15:00 Z': 0.54924,
'30 15:30 Z': 0.70842,
'30 16:00 Z': 0.67908,
'30 16:30 Z': 0.4643,
'30 17:00 Z': 0.3152,
'30 17:30 Z': 0.35696,
'30 18:00 Z': 0.50869,
'30 18:30 Z': 0.82066,
'30 19:00 Z': 0.65484,
'30 19:30 Z': 0.91228,
'30 20:00 Z': 1.04626,
'30 20:30 Z': 0.6801,
'30 21:00 Z': 1.13434,
'30 21:30 Z': 0.72462,
'30 22:00 Z': 0.58878,
'30 22:30 Z': 0.84884,
'30 23:00 Z': 0.77135,
'30 23:30 Z': 0.60889}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bsuos]]></value>
        <value><![CDATA[139]]></value>
        <value><![CDATA[2010-05-01T00:00Z]]></value>
        <value><![CDATA[def rates_gbp_per_mwh():
    return {
'01 00:00 Z': 0.69902,
'01 00:30 Z': 0.66475,
'01 01:00 Z': 0.51698,
'01 01:30 Z': 0.45216,
'01 02:00 Z': 0.62961,
'01 02:30 Z': 0.55365,
'01 03:00 Z': 0.52928,
'01 03:30 Z': 0.51287,
'01 04:00 Z': 0.335,
'01 04:30 Z': 0.24224,
'01 05:00 Z': 0.72425,
'01 05:30 Z': 0.76405,
'01 06:00 Z': 0.50189,
'01 06:30 Z': 0.92959,
'01 07:00 Z': 0.98356,
'01 07:30 Z': 1.02868,
'01 08:00 Z': 0.97495,
'01 08:30 Z': 0.90086,
'01 09:00 Z': 1.10363,
'01 09:30 Z': 1.20267,
'01 10:00 Z': 1.38508,
'01 10:30 Z': 1.27915,
'01 11:00 Z': 1.20114,
'01 11:30 Z': 1.28458,
'01 12:00 Z': 1.10791,
'01 12:30 Z': 0.82932,
'01 13:00 Z': 0.4702,
'01 13:30 Z': 0.48401,
'01 14:00 Z': 0.5149,
'01 14:30 Z': 0.4647,
'01 15:00 Z': 0.91448,
'01 15:30 Z': 1.13881,
'01 16:00 Z': 1.48445,
'01 16:30 Z': 1.56218,
'01 17:00 Z': 1.37052,
'01 17:30 Z': 1.03841,
'01 18:00 Z': 1.04734,
'01 18:30 Z': 1.19893,
'01 19:00 Z': 1.13397,
'01 19:30 Z': 1.07905,
'01 20:00 Z': 1.34328,
'01 20:30 Z': 1.01646,
'01 21:00 Z': 0.74214,
'01 21:30 Z': 0.55941,
'01 22:00 Z': 0.53266,
'01 22:30 Z': 0.50104,
'01 23:00 Z': 0.27378,
'01 23:30 Z': 0.29072,
'02 00:00 Z': 0.42541,
'02 00:30 Z': 0.39726,
'02 01:00 Z': 0.36015,
'02 01:30 Z': 0.28611,
'02 02:00 Z': 0.59905,
'02 02:30 Z': 0.71287,
'02 03:00 Z': 0.52767,
'02 03:30 Z': 0.40401,
'02 04:00 Z': 0.27654,
'02 04:30 Z': 0.16626,
'02 05:00 Z': 0.42179,
'02 05:30 Z': 0.51641,
'02 06:00 Z': 0.52197,
'02 06:30 Z': 0.58419,
'02 07:00 Z': 0.68093,
'02 07:30 Z': 0.5041,
'02 08:00 Z': 0.20122,
'02 08:30 Z': 0.79477,
'02 09:00 Z': 1.1458,
'02 09:30 Z': 1.26796,
'02 10:00 Z': 1.24013,
'02 10:30 Z': 1.64653,
'02 11:00 Z': 2.54585,
'02 11:30 Z': 2.62235,
'02 12:00 Z': 2.47725,
'02 12:30 Z': 1.25279,
'02 13:00 Z': 1.04228,
'02 13:30 Z': 0.88441,
'02 14:00 Z': 0.87359,
'02 14:30 Z': 1.01136,
'02 15:00 Z': 1.20966,
'02 15:30 Z': 1.21454,
'02 16:00 Z': 1.20805,
'02 16:30 Z': 1.20372,
'02 17:00 Z': 1.261,
'02 17:30 Z': 1.26752,
'02 18:00 Z': 1.12264,
'02 18:30 Z': 1.41614,
'02 19:00 Z': 1.59429,
'02 19:30 Z': 1.82543,
'02 20:00 Z': 1.80763,
'02 20:30 Z': 1.34869,
'02 21:00 Z': 1.22746,
'02 21:30 Z': 0.86841,
'02 22:00 Z': 1.03354,
'02 22:30 Z': 1.15116,
'02 23:00 Z': 1.10371,
'02 23:30 Z': 0.66256,
'03 00:00 Z': 0.79411,
'03 00:30 Z': 0.86029,
'03 01:00 Z': 0.79019,
'03 01:30 Z': 0.75955,
'03 02:00 Z': 0.91541,
'03 02:30 Z': 0.67165,
'03 03:00 Z': 0.7108,
'03 03:30 Z': 0.86863,
'03 04:00 Z': 1.03942,
'03 04:30 Z': 1.04995,
'03 05:00 Z': 1.34987,
'03 05:30 Z': 1.05611,
'03 06:00 Z': 0.99673,
'03 06:30 Z': 1.26914,
'03 07:00 Z': 1.62545,
'03 07:30 Z': 2.36501,
'03 08:00 Z': 2.05813,
'03 08:30 Z': 3.22294,
'03 09:00 Z': 2.71242,
'03 09:30 Z': 2.37504,
'03 10:00 Z': 2.1686,
'03 10:30 Z': 1.81603,
'03 11:00 Z': 1.89302,
'03 11:30 Z': 2.25345,
'03 12:00 Z': 1.90049,
'03 12:30 Z': 1.26528,
'03 13:00 Z': 1.14867,
'03 13:30 Z': 0.91843,
'03 14:00 Z': 0.74626,
'03 14:30 Z': 0.71413,
'03 15:00 Z': 0.7069,
'03 15:30 Z': 0.89551,
'03 16:00 Z': 0.87637,
'03 16:30 Z': 2.40116,
'03 17:00 Z': 3.45985,
'03 17:30 Z': 3.22632,
'03 18:00 Z': 1.74524,
'03 18:30 Z': 1.65485,
'03 19:00 Z': 2.14424,
'03 19:30 Z': 2.26057,
'03 20:00 Z': 2.78915,
'03 20:30 Z': 2.26148,
'03 21:00 Z': 2.18035,
'03 21:30 Z': 1.18798,
'03 22:00 Z': 0.75002,
'03 22:30 Z': 0.69058,
'03 23:00 Z': 0.4524,
'03 23:30 Z': 0.40445,
'04 00:00 Z': 0.60869,
'04 00:30 Z': 0.77525,
'04 01:00 Z': 0.62751,
'04 01:30 Z': 0.5376,
'04 02:00 Z': 0.63357,
'04 02:30 Z': 0.702,
'04 03:00 Z': 0.62171,
'04 03:30 Z': 0.51248,
'04 04:00 Z': 0.53091,
'04 04:30 Z': 0.49586,
'04 05:00 Z': 0.63499,
'04 05:30 Z': 0.82217,
'04 06:00 Z': 1.33779,
'04 06:30 Z': 2.20338,
'04 07:00 Z': 1.8058,
'04 07:30 Z': 1.22783,
'04 08:00 Z': 1.90249,
'04 08:30 Z': 1.59568,
'04 09:00 Z': 1.53699,
'04 09:30 Z': 1.52131,
'04 10:00 Z': 1.85889,
'04 10:30 Z': 1.57138,
'04 11:00 Z': 1.76512,
'04 11:30 Z': 1.4562,
'04 12:00 Z': 1.47586,
'04 12:30 Z': 1.02656,
'04 13:00 Z': 0.83492,
'04 13:30 Z': 0.60554,
'04 14:00 Z': 0.43077,
'04 14:30 Z': 0.83959,
'04 15:00 Z': 1.10357,
'04 15:30 Z': 1.28472,
'04 16:00 Z': 1.48343,
'04 16:30 Z': 1.32488,
'04 17:00 Z': 1.0092,
'04 17:30 Z': 1.11744,
'04 18:00 Z': 1.25729,
'04 18:30 Z': 1.5026,
'04 19:00 Z': 1.64671,
'04 19:30 Z': 1.7423,
'04 20:00 Z': 2.06406,
'04 20:30 Z': 1.48998,
'04 21:00 Z': 1.44943,
'04 21:30 Z': 1.15961,
'04 22:00 Z': 1.34417,
'04 22:30 Z': 1.06565,
'04 23:00 Z': 0.66564,
'04 23:30 Z': 0.6998,
'05 00:00 Z': 0.46744,
'05 00:30 Z': 0.51611,
'05 01:00 Z': 0.50505,
'05 01:30 Z': 0.80651,
'05 02:00 Z': 0.64497,
'05 02:30 Z': 0.67934,
'05 03:00 Z': 0.76723,
'05 03:30 Z': 0.9824,
'05 04:00 Z': 1.02555,
'05 04:30 Z': 1.01496,
'05 05:00 Z': 1.22714,
'05 05:30 Z': 0.77352,
'05 06:00 Z': 0.7042,
'05 06:30 Z': 1.18132,
'05 07:00 Z': 1.27048,
'05 07:30 Z': 1.20512,
'05 08:00 Z': 1.08006,
'05 08:30 Z': 1.1037,
'05 09:00 Z': 0.99818,
'05 09:30 Z': 0.94191,
'05 10:00 Z': 1.11377,
'05 10:30 Z': 1.19335,
'05 11:00 Z': 1.15135,
'05 11:30 Z': 1.32614,
'05 12:00 Z': 1.4188,
'05 12:30 Z': 1.33784,
'05 13:00 Z': 1.01715,
'05 13:30 Z': 1.04963,
'05 14:00 Z': 1.06918,
'05 14:30 Z': 1.09546,
'05 15:00 Z': 1.66351,
'05 15:30 Z': 1.45525,
'05 16:00 Z': 1.2974,
'05 16:30 Z': 1.15267,
'05 17:00 Z': 1.10889,
'05 17:30 Z': 1.09033,
'05 18:00 Z': 1.24474,
'05 18:30 Z': 1.84429,
'05 19:00 Z': 1.81828,
'05 19:30 Z': 1.6445,
'05 20:00 Z': 1.69346,
'05 20:30 Z': 1.26351,
'05 21:00 Z': 1.20854,
'05 21:30 Z': 0.42815,
'05 22:00 Z': 0.39828,
'05 22:30 Z': 0.47423,
'05 23:00 Z': 0.44219,
'05 23:30 Z': 0.35648,
'06 00:00 Z': 0.40897,
'06 00:30 Z': 0.37408,
'06 01:00 Z': 0.41617,
'06 01:30 Z': 0.18505,
'06 02:00 Z': 0.25439,
'06 02:30 Z': 0.13967,
'06 03:00 Z': 0.16574,
'06 03:30 Z': 0.41062,
'06 04:00 Z': 0.15073,
'06 04:30 Z': 0.32396,
'06 05:00 Z': 0.35663,
'06 05:30 Z': 0.26374,
'06 06:00 Z': 0.63308,
'06 06:30 Z': 1.24592,
'06 07:00 Z': 1.55642,
'06 07:30 Z': 1.38346,
'06 08:00 Z': 1.21999,
'06 08:30 Z': 1.52725,
'06 09:00 Z': 1.34426,
'06 09:30 Z': 1.24639,
'06 10:00 Z': 1.22225,
'06 10:30 Z': 1.24215,
'06 11:00 Z': 1.63446,
'06 11:30 Z': 1.45237,
'06 12:00 Z': 1.602,
'06 12:30 Z': 1.28476,
'06 13:00 Z': 0.83467,
'06 13:30 Z': 0.63443,
'06 14:00 Z': 0.67627,
'06 14:30 Z': 0.88665,
'06 15:00 Z': 1.18754,
'06 15:30 Z': 1.32264,
'06 16:00 Z': 1.55992,
'06 16:30 Z': 1.37541,
'06 17:00 Z': 1.06798,
'06 17:30 Z': 0.7018,
'06 18:00 Z': 0.67395,
'06 18:30 Z': 1.41842,
'06 19:00 Z': 1.46638,
'06 19:30 Z': 1.64024,
'06 20:00 Z': 1.82307,
'06 20:30 Z': 1.70266,
'06 21:00 Z': 1.84619,
'06 21:30 Z': 1.17911,
'06 22:00 Z': 1.17012,
'06 22:30 Z': 1.3627,
'06 23:00 Z': 1.79387,
'06 23:30 Z': 1.30175,
'07 00:00 Z': 1.23093,
'07 00:30 Z': 1.23573,
'07 01:00 Z': 0.87196,
'07 01:30 Z': 0.65982,
'07 02:00 Z': 0.5697,
'07 02:30 Z': 0.59768,
'07 03:00 Z': 0.61878,
'07 03:30 Z': 0.58772,
'07 04:00 Z': 0.73614,
'07 04:30 Z': 0.57448,
'07 05:00 Z': 0.88607,
'07 05:30 Z': 0.52308,
'07 06:00 Z': 0.73239,
'07 06:30 Z': 1.37656,
'07 07:00 Z': 1.53693,
'07 07:30 Z': 1.63388,
'07 08:00 Z': 1.37835,
'07 08:30 Z': 1.36521,
'07 09:00 Z': 1.36236,
'07 09:30 Z': 1.35116,
'07 10:00 Z': 1.18649,
'07 10:30 Z': 1.11105,
'07 11:00 Z': 1.06431,
'07 11:30 Z': 0.92752,
'07 12:00 Z': 1.19125,
'07 12:30 Z': 1.18859,
'07 13:00 Z': 0.90296,
'07 13:30 Z': 0.74461,
'07 14:00 Z': 0.43512,
'07 14:30 Z': 0.66148,
'07 15:00 Z': 1.06048,
'07 15:30 Z': 1.14529,
'07 16:00 Z': 1.17276,
'07 16:30 Z': 0.9211,
'07 17:00 Z': 0.80878,
'07 17:30 Z': 1.00487,
'07 18:00 Z': 0.97505,
'07 18:30 Z': 1.31381,
'07 19:00 Z': 1.57047,
'07 19:30 Z': 1.61416,
'07 20:00 Z': 1.8727,
'07 20:30 Z': 1.45009,
'07 21:00 Z': 1.30394,
'07 21:30 Z': 0.78604,
'07 22:00 Z': 0.37523,
'07 22:30 Z': 0.48649,
'07 23:00 Z': 0.81722,
'07 23:30 Z': 0.58315,
'08 00:00 Z': 0.62224,
'08 00:30 Z': 0.69628,
'08 01:00 Z': 0.57556,
'08 01:30 Z': 0.63542,
'08 02:00 Z': 0.74468,
'08 02:30 Z': 0.63721,
'08 03:00 Z': 0.64583,
'08 03:30 Z': 0.60659,
'08 04:00 Z': 0.45238,
'08 04:30 Z': 0.40051,
'08 05:00 Z': 0.79257,
'08 05:30 Z': 0.63143,
'08 06:00 Z': 0.58541,
'08 06:30 Z': 1.34825,
'08 07:00 Z': 1.45955,
'08 07:30 Z': 1.25883,
'08 08:00 Z': 1.30967,
'08 08:30 Z': 1.43745,
'08 09:00 Z': 1.67951,
'08 09:30 Z': 2.05993,
'08 10:00 Z': 3.18766,
'08 10:30 Z': 3.12667,
'08 11:00 Z': 2.33164,
'08 11:30 Z': 1.97637,
'08 12:00 Z': 1.70022,
'08 12:30 Z': 1.66101,
'08 13:00 Z': 1.18759,
'08 13:30 Z': 1.33174,
'08 14:00 Z': 1.47813,
'08 14:30 Z': 1.32311,
'08 15:00 Z': 1.64456,
'08 15:30 Z': 1.76899,
'08 16:00 Z': 2.03929,
'08 16:30 Z': 2.13103,
'08 17:00 Z': 2.06718,
'08 17:30 Z': 1.75891,
'08 18:00 Z': 1.46246,
'08 18:30 Z': 1.80801,
'08 19:00 Z': 2.23399,
'08 19:30 Z': 1.90051,
'08 20:00 Z': 2.38039,
'08 20:30 Z': 1.77608,
'08 21:00 Z': 1.42973,
'08 21:30 Z': 0.94538,
'08 22:00 Z': 0.9412,
'08 22:30 Z': 1.42087,
'08 23:00 Z': 0.95292,
'08 23:30 Z': 0.71337,
'09 00:00 Z': 0.69985,
'09 00:30 Z': 1.1121,
'09 01:00 Z': 0.93202,
'09 01:30 Z': 0.84366,
'09 02:00 Z': 1.06607,
'09 02:30 Z': 1.03419,
'09 03:00 Z': 0.61134,
'09 03:30 Z': 0.53056,
'09 04:00 Z': 0.23053,
'09 04:30 Z': -0.01672,
'09 05:00 Z': 0.14004,
'09 05:30 Z': 0.24636,
'09 06:00 Z': 0.69879,
'09 06:30 Z': 0.71035,
'09 07:00 Z': 1.18984,
'09 07:30 Z': 0.90697,
'09 08:00 Z': 0.35847,
'09 08:30 Z': 1.01507,
'09 09:00 Z': 1.57727,
'09 09:30 Z': 1.86145,
'09 10:00 Z': 1.83864,
'09 10:30 Z': 1.68196,
'09 11:00 Z': 1.90528,
'09 11:30 Z': 1.9119,
'09 12:00 Z': 1.90318,
'09 12:30 Z': 1.1771,
'09 13:00 Z': 1.41064,
'09 13:30 Z': 1.3929,
'09 14:00 Z': 1.95573,
'09 14:30 Z': 1.18506,
'09 15:00 Z': 1.16034,
'09 15:30 Z': 1.20903,
'09 16:00 Z': 1.3045,
'09 16:30 Z': 1.40905,
'09 17:00 Z': 1.38928,
'09 17:30 Z': 1.5657,
'09 18:00 Z': 1.79765,
'09 18:30 Z': 1.58095,
'09 19:00 Z': 1.82659,
'09 19:30 Z': 1.59619,
'09 20:00 Z': 2.45905,
'09 20:30 Z': 1.63788,
'09 21:00 Z': 1.37407,
'09 21:30 Z': 0.71027,
'09 22:00 Z': 1.14626,
'09 22:30 Z': 0.66221,
'09 23:00 Z': 0.50498,
'09 23:30 Z': 0.38295,
'10 00:00 Z': 0.39382,
'10 00:30 Z': 0.56761,
'10 01:00 Z': 0.64291,
'10 01:30 Z': 0.72906,
'10 02:00 Z': 0.80635,
'10 02:30 Z': 0.6428,
'10 03:00 Z': 0.50934,
'10 03:30 Z': 0.56007,
'10 04:00 Z': 0.73749,
'10 04:30 Z': 0.74669,
'10 05:00 Z': 1.08708,
'10 05:30 Z': 1.09566,
'10 06:00 Z': 1.01234,
'10 06:30 Z': 1.54839,
'10 07:00 Z': 1.82935,
'10 07:30 Z': 0.93568,
'10 08:00 Z': 1.81024,
'10 08:30 Z': 2.12571,
'10 09:00 Z': 1.88954,
'10 09:30 Z': 1.26972,
'10 10:00 Z': 1.41263,
'10 10:30 Z': 1.48325,
'10 11:00 Z': 2.51005,
'10 11:30 Z': 1.68533,
'10 12:00 Z': 1.4505,
'10 12:30 Z': 1.16358,
'10 13:00 Z': 0.92035,
'10 13:30 Z': 1.16201,
'10 14:00 Z': 1.10445,
'10 14:30 Z': 1.1962,
'10 15:00 Z': 1.89422,
'10 15:30 Z': 2.01042,
'10 16:00 Z': 2.27397,
'10 16:30 Z': 1.94329,
'10 17:00 Z': 1.39908,
'10 17:30 Z': 1.21475,
'10 18:00 Z': 1.08191,
'10 18:30 Z': 1.19639,
'10 19:00 Z': 1.03239,
'10 19:30 Z': 1.09094,
'10 20:00 Z': 1.15418,
'10 20:30 Z': 0.84207,
'10 21:00 Z': 1.23162,
'10 21:30 Z': 0.67992,
'10 22:00 Z': 0.41805,
'10 22:30 Z': 0.48317,
'10 23:00 Z': 0.44295,
'10 23:30 Z': 0.25857,
'11 00:00 Z': 0.57678,
'11 00:30 Z': 0.66185,
'11 01:00 Z': 0.50981,
'11 01:30 Z': 0.55273,
'11 02:00 Z': 0.55344,
'11 02:30 Z': 0.44553,
'11 03:00 Z': 0.66503,
'11 03:30 Z': 0.33502,
'11 04:00 Z': 0.34294,
'11 04:30 Z': 0.15432,
'11 05:00 Z': 0.81229,
'11 05:30 Z': 0.86062,
'11 06:00 Z': 0.48609,
'11 06:30 Z': 0.95427,
'11 07:00 Z': 0.76702,
'11 07:30 Z': 0.61705,
'11 08:00 Z': 0.65149,
'11 08:30 Z': 0.59577,
'11 09:00 Z': 0.57821,
'11 09:30 Z': 0.61868,
'11 10:00 Z': 0.65541,
'11 10:30 Z': 0.87745,
'11 11:00 Z': 1.05419,
'11 11:30 Z': 0.96545,
'11 12:00 Z': 0.87981,
'11 12:30 Z': 0.84976,
'11 13:00 Z': 0.57496,
'11 13:30 Z': 0.5153,
'11 14:00 Z': 0.3694,
'11 14:30 Z': 0.49156,
'11 15:00 Z': 0.93531,
'11 15:30 Z': 1.29126,
'11 16:00 Z': 1.31639,
'11 16:30 Z': 1.04748,
'11 17:00 Z': 0.64749,
'11 17:30 Z': 0.72431,
'11 18:00 Z': 0.73773,
'11 18:30 Z': 1.12986,
'11 19:00 Z': 1.09169,
'11 19:30 Z': 1.169,
'11 20:00 Z': 1.83251,
'11 20:30 Z': 1.25322,
'11 21:00 Z': 0.89709,
'11 21:30 Z': 0.44939,
'11 22:00 Z': 0.57648,
'11 22:30 Z': 0.56379,
'11 23:00 Z': 0.90906,
'11 23:30 Z': 0.74603,
'12 00:00 Z': 0.73619,
'12 00:30 Z': 0.7454,
'12 01:00 Z': 0.54622,
'12 01:30 Z': 0.48261,
'12 02:00 Z': 0.54317,
'12 02:30 Z': 0.56299,
'12 03:00 Z': 0.68104,
'12 03:30 Z': 0.56851,
'12 04:00 Z': 0.43736,
'12 04:30 Z': 0.41026,
'12 05:00 Z': 1.22219,
'12 05:30 Z': 1.52161,
'12 06:00 Z': 1.32355,
'12 06:30 Z': 1.27496,
'12 07:00 Z': 1.02417,
'12 07:30 Z': 0.83299,
'12 08:00 Z': 0.96344,
'12 08:30 Z': 1.20203,
'12 09:00 Z': 0.96134,
'12 09:30 Z': 0.99659,
'12 10:00 Z': 0.98146,
'12 10:30 Z': 0.95412,
'12 11:00 Z': 0.96947,
'12 11:30 Z': 0.82321,
'12 12:00 Z': 0.92197,
'12 12:30 Z': 0.84558,
'12 13:00 Z': 0.64322,
'12 13:30 Z': 0.62979,
'12 14:00 Z': 0.5721,
'12 14:30 Z': 0.73917,
'12 15:00 Z': 1.01077,
'12 15:30 Z': 1.03717,
'12 16:00 Z': 1.59405,
'12 16:30 Z': 1.36296,
'12 17:00 Z': 0.89794,
'12 17:30 Z': 0.9194,
'12 18:00 Z': 1.15361,
'12 18:30 Z': 1.37796,
'12 19:00 Z': 1.3749,
'12 19:30 Z': 1.41488,
'12 20:00 Z': 1.26521,
'12 20:30 Z': 1.25358,
'12 21:00 Z': 1.70142,
'12 21:30 Z': 0.74949,
'12 22:00 Z': 0.46589,
'12 22:30 Z': 0.45599,
'12 23:00 Z': 0.73674,
'12 23:30 Z': 0.42972,
'13 00:00 Z': 0.50162,
'13 00:30 Z': 0.71577,
'13 01:00 Z': 0.66503,
'13 01:30 Z': 0.50192,
'13 02:00 Z': 0.6805,
'13 02:30 Z': 0.63811,
'13 03:00 Z': 0.66303,
'13 03:30 Z': 0.6315,
'13 04:00 Z': 0.11621,
'13 04:30 Z': 0.26274,
'13 05:00 Z': 0.55003,
'13 05:30 Z': 0.60348,
'13 06:00 Z': 0.23348,
'13 06:30 Z': 0.82706,
'13 07:00 Z': 0.77261,
'13 07:30 Z': 0.63864,
'13 08:00 Z': 0.73529,
'13 08:30 Z': 0.7196,
'13 09:00 Z': 0.74729,
'13 09:30 Z': 1.15332,
'13 10:00 Z': 1.03358,
'13 10:30 Z': 1.11632,
'13 11:00 Z': 1.25442,
'13 11:30 Z': 1.04348,
'13 12:00 Z': 0.93396,
'13 12:30 Z': 0.68174,
'13 13:00 Z': 0.3203,
'13 13:30 Z': 0.1302,
'13 14:00 Z': 0.10381,
'13 14:30 Z': 0.4442,
'13 15:00 Z': 1.00485,
'13 15:30 Z': 1.07793,
'13 16:00 Z': 0.94113,
'13 16:30 Z': 0.85356,
'13 17:00 Z': 0.51969,
'13 17:30 Z': 0.59669,
'13 18:00 Z': 0.7392,
'13 18:30 Z': 0.98269,
'13 19:00 Z': 1.23027,
'13 19:30 Z': 1.49426,
'13 20:00 Z': 1.75856,
'13 20:30 Z': 1.14381,
'13 21:00 Z': 1.03793,
'13 21:30 Z': 0.31574,
'13 22:00 Z': 0.74695,
'13 22:30 Z': 0.56567,
'13 23:00 Z': 0.40276,
'13 23:30 Z': 0.38005,
'14 00:00 Z': 0.57387,
'14 00:30 Z': 0.59736,
'14 01:00 Z': 0.59032,
'14 01:30 Z': 0.41222,
'14 02:00 Z': 0.60006,
'14 02:30 Z': 0.66043,
'14 03:00 Z': 0.83023,
'14 03:30 Z': 0.81967,
'14 04:00 Z': 0.49638,
'14 04:30 Z': 0.29683,
'14 05:00 Z': 0.76699,
'14 05:30 Z': 1.14649,
'14 06:00 Z': 0.98848,
'14 06:30 Z': 1.56191,
'14 07:00 Z': 1.59491,
'14 07:30 Z': 1.19487,
'14 08:00 Z': 1.17287,
'14 08:30 Z': 1.05023,
'14 09:00 Z': 0.91644,
'14 09:30 Z': 1.05375,
'14 10:00 Z': 1.10517,
'14 10:30 Z': 1.32255,
'14 11:00 Z': 1.19062,
'14 11:30 Z': 1.09045,
'14 12:00 Z': 1.11215,
'14 12:30 Z': 1.01696,
'14 13:00 Z': 0.62871,
'14 13:30 Z': 0.4487,
'14 14:00 Z': 0.36643,
'14 14:30 Z': 0.72422,
'14 15:00 Z': 1.24276,
'14 15:30 Z': 1.5182,
'14 16:00 Z': 1.61424,
'14 16:30 Z': 1.46471,
'14 17:00 Z': 0.94497,
'14 17:30 Z': 1.03042,
'14 18:00 Z': 1.02971,
'14 18:30 Z': 1.44188,
'14 19:00 Z': 1.30136,
'14 19:30 Z': 1.52119,
'14 20:00 Z': 1.69903,
'14 20:30 Z': 1.19608,
'14 21:00 Z': 1.23681,
'14 21:30 Z': 0.89792,
'14 22:00 Z': 0.76731,
'14 22:30 Z': 0.84536,
'14 23:00 Z': 0.99214,
'14 23:30 Z': 0.78181,
'15 00:00 Z': 0.82137,
'15 00:30 Z': 0.83719,
'15 01:00 Z': 0.88001,
'15 01:30 Z': 1.14593,
'15 02:00 Z': 1.27126,
'15 02:30 Z': 1.35451,
'15 03:00 Z': 1.18873,
'15 03:30 Z': 0.64136,
'15 04:00 Z': 0.19868,
'15 04:30 Z': 0.32006,
'15 05:00 Z': 1.14687,
'15 05:30 Z': 0.80296,
'15 06:00 Z': 0.85503,
'15 06:30 Z': 1.9641,
'15 07:00 Z': 1.99332,
'15 07:30 Z': 1.94183,
'15 08:00 Z': 1.54215,
'15 08:30 Z': 1.4107,
'15 09:00 Z': 1.49872,
'15 09:30 Z': 1.36943,
'15 10:00 Z': 1.25007,
'15 10:30 Z': 1.05886,
'15 11:00 Z': 0.99066,
'15 11:30 Z': 0.92119,
'15 12:00 Z': 0.82076,
'15 12:30 Z': 0.64573,
'15 13:00 Z': 0.03492,
'15 13:30 Z': 0.23972,
'15 14:00 Z': 0.25248,
'15 14:30 Z': 0.36169,
'15 15:00 Z': 0.53376,
'15 15:30 Z': 0.59833,
'15 16:00 Z': 0.892,
'15 16:30 Z': 1.18062,
'15 17:00 Z': 0.77332,
'15 17:30 Z': 0.82341,
'15 18:00 Z': 0.95615,
'15 18:30 Z': 1.36321,
'15 19:00 Z': 1.23452,
'15 19:30 Z': 0.95852,
'15 20:00 Z': 1.9006,
'15 20:30 Z': 1.63054,
'15 21:00 Z': 1.49112,
'15 21:30 Z': 0.934,
'15 22:00 Z': 1.01281,
'15 22:30 Z': 0.89328,
'15 23:00 Z': 0.80523,
'15 23:30 Z': 0.88676,
'16 00:00 Z': 1.05627,
'16 00:30 Z': 1.13461,
'16 01:00 Z': 1.04379,
'16 01:30 Z': 1.15804,
'16 02:00 Z': 1.29972,
'16 02:30 Z': 1.165,
'16 03:00 Z': 1.10574,
'16 03:30 Z': 0.80047,
'16 04:00 Z': 0.71623,
'16 04:30 Z': 0.68645,
'16 05:00 Z': 0.87515,
'16 05:30 Z': 1.08731,
'16 06:00 Z': 0.92806,
'16 06:30 Z': 0.97276,
'16 07:00 Z': 1.1005,
'16 07:30 Z': 1.04329,
'16 08:00 Z': 0.90294,
'16 08:30 Z': 1.1589,
'16 09:00 Z': 1.49469,
'16 09:30 Z': 1.55969,
'16 10:00 Z': 1.51598,
'16 10:30 Z': 1.58278,
'16 11:00 Z': 1.60995,
'16 11:30 Z': 1.61037,
'16 12:00 Z': 1.69609,
'16 12:30 Z': 1.26225,
'16 13:00 Z': 1.18038,
'16 13:30 Z': 0.89705,
'16 14:00 Z': 0.86289,
'16 14:30 Z': 0.83752,
'16 15:00 Z': 0.95999,
'16 15:30 Z': 0.90967,
'16 16:00 Z': 1.05304,
'16 16:30 Z': 1.25712,
'16 17:00 Z': 1.23502,
'16 17:30 Z': 1.14018,
'16 18:00 Z': 0.96461,
'16 18:30 Z': 1.34055,
'16 19:00 Z': 1.52279,
'16 19:30 Z': 1.33011,
'16 20:00 Z': 1.59002,
'16 20:30 Z': 1.62602,
'16 21:00 Z': 1.12129,
'16 21:30 Z': 0.56217,
'16 22:00 Z': 1.19677,
'16 22:30 Z': 1.1417,
'16 23:00 Z': 0.76864,
'16 23:30 Z': 0.53362,
'17 00:00 Z': 0.58703,
'17 00:30 Z': 0.678,
'17 01:00 Z': 0.56032,
'17 01:30 Z': 0.44658,
'17 02:00 Z': 0.4756,
'17 02:30 Z': 0.55772,
'17 03:00 Z': 0.63025,
'17 03:30 Z': 0.54809,
'17 04:00 Z': 0.64238,
'17 04:30 Z': 0.65784,
'17 05:00 Z': 0.63219,
'17 05:30 Z': 0.69096,
'17 06:00 Z': 0.93839,
'17 06:30 Z': 1.10463,
'17 07:00 Z': 1.15273,
'17 07:30 Z': 1.18755,
'17 08:00 Z': 1.11197,
'17 08:30 Z': 1.1771,
'17 09:00 Z': 1.1262,
'17 09:30 Z': 1.35305,
'17 10:00 Z': 1.64758,
'17 10:30 Z': 1.87147,
'17 11:00 Z': 1.8028,
'17 11:30 Z': 1.45736,
'17 12:00 Z': 1.09723,
'17 12:30 Z': 1.35984,
'17 13:00 Z': 1.57358,
'17 13:30 Z': 1.40946,
'17 14:00 Z': 1.77018,
'17 14:30 Z': 1.5477,
'17 15:00 Z': 1.8159,
'17 15:30 Z': 1.34902,
'17 16:00 Z': 1.45733,
'17 16:30 Z': 1.25714,
'17 17:00 Z': 0.93766,
'17 17:30 Z': 1.02772,
'17 18:00 Z': 0.98499,
'17 18:30 Z': 1.63191,
'17 19:00 Z': 1.39648,
'17 19:30 Z': 1.35307,
'17 20:00 Z': 2.06628,
'17 20:30 Z': 2.00726,
'17 21:00 Z': 1.85599,
'17 21:30 Z': 1.33406,
'17 22:00 Z': 0.85301,
'17 22:30 Z': 0.77232,
'17 23:00 Z': 0.73562,
'17 23:30 Z': 0.75874,
'18 00:00 Z': 0.88434,
'18 00:30 Z': 0.9317,
'18 01:00 Z': 0.80895,
'18 01:30 Z': 0.62959,
'18 02:00 Z': 0.69653,
'18 02:30 Z': 0.64866,
'18 03:00 Z': 0.56783,
'18 03:30 Z': 0.61533,
'18 04:00 Z': 0.3204,
'18 04:30 Z': 0.35619,
'18 05:00 Z': 0.94016,
'18 05:30 Z': 0.78327,
'18 06:00 Z': 0.94162,
'18 06:30 Z': 1.34902,
'18 07:00 Z': 1.37041,
'18 07:30 Z': 1.40257,
'18 08:00 Z': 1.67858,
'18 08:30 Z': 1.94294,
'18 09:00 Z': 1.81775,
'18 09:30 Z': 1.82855,
'18 10:00 Z': 1.80019,
'18 10:30 Z': 1.8937,
'18 11:00 Z': 1.88655,
'18 11:30 Z': 1.64489,
'18 12:00 Z': 1.76013,
'18 12:30 Z': 1.74549,
'18 13:00 Z': 1.59494,
'18 13:30 Z': 1.38333,
'18 14:00 Z': 1.10856,
'18 14:30 Z': 1.25198,
'18 15:00 Z': 1.50706,
'18 15:30 Z': 1.56194,
'18 16:00 Z': 1.62592,
'18 16:30 Z': 1.64594,
'18 17:00 Z': 1.14825,
'18 17:30 Z': 1.18103,
'18 18:00 Z': 1.27194,
'18 18:30 Z': 1.80931,
'18 19:00 Z': 1.8774,
'18 19:30 Z': 1.41716,
'18 20:00 Z': 1.38811,
'18 20:30 Z': 2.00797,
'18 21:00 Z': 1.17068,
'18 21:30 Z': 0.62404,
'18 22:00 Z': 0.8925,
'18 22:30 Z': 0.55861,
'18 23:00 Z': 0.45613,
'18 23:30 Z': 0.68565,
'19 00:00 Z': 0.66524,
'19 00:30 Z': 0.48346,
'19 01:00 Z': 0.37601,
'19 01:30 Z': 0.12099,
'19 02:00 Z': 0.42136,
'19 02:30 Z': 0.29271,
'19 03:00 Z': 0.47687,
'19 03:30 Z': 0.24136,
'19 04:00 Z': 0.68574,
'19 04:30 Z': 0.8541,
'19 05:00 Z': 1.04385,
'19 05:30 Z': 1.07266,
'19 06:00 Z': 0.88817,
'19 06:30 Z': 1.11749,
'19 07:00 Z': 1.16567,
'19 07:30 Z': 0.89663,
'19 08:00 Z': 1.90884,
'19 08:30 Z': 1.3369,
'19 09:00 Z': 1.19612,
'19 09:30 Z': 1.85171,
'19 10:00 Z': 1.95756,
'19 10:30 Z': 1.68936,
'19 11:00 Z': 1.61579,
'19 11:30 Z': 1.69224,
'19 12:00 Z': 2.00675,
'19 12:30 Z': 1.92127,
'19 13:00 Z': 1.79041,
'19 13:30 Z': 1.3846,
'19 14:00 Z': 1.20704,
'19 14:30 Z': 1.31423,
'19 15:00 Z': 1.63306,
'19 15:30 Z': 1.936,
'19 16:00 Z': 2.11838,
'19 16:30 Z': 1.91148,
'19 17:00 Z': 1.63538,
'19 17:30 Z': 1.80404,
'19 18:00 Z': 1.91092,
'19 18:30 Z': 2.0902,
'19 19:00 Z': 2.07969,
'19 19:30 Z': 1.85566,
'19 20:00 Z': 2.03606,
'19 20:30 Z': 1.67588,
'19 21:00 Z': 1.55357,
'19 21:30 Z': 1.10802,
'19 22:00 Z': 0.98212,
'19 22:30 Z': 0.81644,
'19 23:00 Z': 0.96813,
'19 23:30 Z': 1.05208,
'20 00:00 Z': 0.99253,
'20 00:30 Z': 0.75164,
'20 01:00 Z': 0.84153,
'20 01:30 Z': 0.7524,
'20 02:00 Z': 0.57286,
'20 02:30 Z': 0.41013,
'20 03:00 Z': 0.49358,
'20 03:30 Z': 0.34798,
'20 04:00 Z': 0.84426,
'20 04:30 Z': 1.26298,
'20 05:00 Z': 1.52054,
'20 05:30 Z': 1.18598,
'20 06:00 Z': 0.94686,
'20 06:30 Z': 1.50785,
'20 07:00 Z': 1.62548,
'20 07:30 Z': 1.553,
'20 08:00 Z': 1.56346,
'20 08:30 Z': 1.41284,
'20 09:00 Z': 1.19152,
'20 09:30 Z': 1.30438,
'20 10:00 Z': 1.57214,
'20 10:30 Z': 1.95722,
'20 11:00 Z': 1.92636,
'20 11:30 Z': 1.60103,
'20 12:00 Z': 1.50252,
'20 12:30 Z': 1.44169,
'20 13:00 Z': 1.54672,
'20 13:30 Z': 1.54612,
'20 14:00 Z': 1.55212,
'20 14:30 Z': 1.65678,
'20 15:00 Z': 1.99724,
'20 15:30 Z': 2.00566,
'20 16:00 Z': 2.08861,
'20 16:30 Z': 1.94306,
'20 17:00 Z': 1.78966,
'20 17:30 Z': 1.62786,
'20 18:00 Z': 1.80115,
'20 18:30 Z': 2.16323,
'20 19:00 Z': 2.08727,
'20 19:30 Z': 1.86622,
'20 20:00 Z': 2.16913,
'20 20:30 Z': 1.71228,
'20 21:00 Z': 1.53505,
'20 21:30 Z': 1.05864,
'20 22:00 Z': 1.07532,
'20 22:30 Z': 1.0979,
'20 23:00 Z': 0.84462,
'20 23:30 Z': 0.77055,
'21 00:00 Z': 1.12963,
'21 00:30 Z': 0.99352,
'21 01:00 Z': 0.90814,
'21 01:30 Z': 0.88276,
'21 02:00 Z': 0.70734,
'21 02:30 Z': 0.69744,
'21 03:00 Z': 0.54932,
'21 03:30 Z': 0.49464,
'21 04:00 Z': 1.24056,
'21 04:30 Z': 1.36287,
'21 05:00 Z': 1.76106,
'21 05:30 Z': 1.8144,
'21 06:00 Z': 1.68062,
'21 06:30 Z': 2.39557,
'21 07:00 Z': 2.94971,
'21 07:30 Z': 2.90363,
'21 08:00 Z': 2.84236,
'21 08:30 Z': 2.54594,
'21 09:00 Z': 2.95254,
'21 09:30 Z': 2.33152,
'21 10:00 Z': 2.37611,
'21 10:30 Z': 2.30855,
'21 11:00 Z': 2.15419,
'21 11:30 Z': 1.77617,
'21 12:00 Z': 1.48344,
'21 12:30 Z': 1.3842,
'21 13:00 Z': 1.15924,
'21 13:30 Z': 1.69705,
'21 14:00 Z': 1.49932,
'21 14:30 Z': 1.58027,
'21 15:00 Z': 1.79299,
'21 15:30 Z': 2.20706,
'21 16:00 Z': 2.29493,
'21 16:30 Z': 1.74344,
'21 17:00 Z': 1.21501,
'21 17:30 Z': 1.27544,
'21 18:00 Z': 1.56802,
'21 18:30 Z': 2.27422,
'21 19:00 Z': 2.03553,
'21 19:30 Z': 1.85089,
'21 20:00 Z': 2.18567,
'21 20:30 Z': 2.02255,
'21 21:00 Z': 2.08505,
'21 21:30 Z': 1.62509,
'21 22:00 Z': 1.67361,
'21 22:30 Z': 1.84945,
'21 23:00 Z': 1.37252,
'21 23:30 Z': 1.23002,
'22 00:00 Z': 1.12621,
'22 00:30 Z': 0.94532,
'22 01:00 Z': 0.66395,
'22 01:30 Z': 0.48642,
'22 02:00 Z': 0.6133,
'22 02:30 Z': 0.58024,
'22 03:00 Z': 0.67092,
'22 03:30 Z': 0.70813,
'22 04:00 Z': 0.72022,
'22 04:30 Z': 0.71626,
'22 05:00 Z': 0.83007,
'22 05:30 Z': 1.91924,
'22 06:00 Z': 1.72464,
'22 06:30 Z': 2.30006,
'22 07:00 Z': 3.07242,
'22 07:30 Z': 2.76602,
'22 08:00 Z': 3.92897,
'22 08:30 Z': 3.19648,
'22 09:00 Z': 2.09911,
'22 09:30 Z': 1.901,
'22 10:00 Z': 1.58267,
'22 10:30 Z': 1.63597,
'22 11:00 Z': 1.47252,
'22 11:30 Z': 1.44664,
'22 12:00 Z': 1.54186,
'22 12:30 Z': 0.99826,
'22 13:00 Z': 0.62986,
'22 13:30 Z': 0.56262,
'22 14:00 Z': 1.13467,
'22 14:30 Z': 1.00833,
'22 15:00 Z': 1.47809,
'22 15:30 Z': 1.77207,
'22 16:00 Z': 2.14389,
'22 16:30 Z': 2.60643,
'22 17:00 Z': 2.15459,
'22 17:30 Z': 1.55934,
'22 18:00 Z': 1.40345,
'22 18:30 Z': 1.35617,
'22 19:00 Z': 1.24831,
'22 19:30 Z': 1.3488,
'22 20:00 Z': 1.24148,
'22 20:30 Z': 2.15179,
'22 21:00 Z': 1.58558,
'22 21:30 Z': 1.06458,
'22 22:00 Z': 1.18823,
'22 22:30 Z': 0.80166,
'22 23:00 Z': 0.95129,
'22 23:30 Z': 1.20206,
'23 00:00 Z': 1.23165,
'23 00:30 Z': 1.10625,
'23 01:00 Z': 1.06385,
'23 01:30 Z': 0.88411,
'23 02:00 Z': 0.84746,
'23 02:30 Z': 0.98515,
'23 03:00 Z': 0.95978,
'23 03:30 Z': 1.05418,
'23 04:00 Z': 1.0349,
'23 04:30 Z': 1.2439,
'23 05:00 Z': 1.45576,
'23 05:30 Z': 1.22154,
'23 06:00 Z': 1.1867,
'23 06:30 Z': 1.19686,
'23 07:00 Z': 1.59315,
'23 07:30 Z': 1.90295,
'23 08:00 Z': 1.95054,
'23 08:30 Z': 2.10781,
'23 09:00 Z': 2.2547,
'23 09:30 Z': 2.74115,
'23 10:00 Z': 2.06964,
'23 10:30 Z': 1.83159,
'23 11:00 Z': 1.79068,
'23 11:30 Z': 1.75573,
'23 12:00 Z': 1.49974,
'23 12:30 Z': 1.04533,
'23 13:00 Z': 0.83459,
'23 13:30 Z': 0.66508,
'23 14:00 Z': 0.7929,
'23 14:30 Z': 0.88505,
'23 15:00 Z': 1.08068,
'23 15:30 Z': 1.10072,
'23 16:00 Z': 1.10313,
'23 16:30 Z': 1.16649,
'23 17:00 Z': 1.04999,
'23 17:30 Z': 0.83851,
'23 18:00 Z': 0.98858,
'23 18:30 Z': 1.46659,
'23 19:00 Z': 1.43518,
'23 19:30 Z': 1.3172,
'23 20:00 Z': 2.08644,
'23 20:30 Z': 2.08614,
'23 21:00 Z': 1.78465,
'23 21:30 Z': 0.80989,
'23 22:00 Z': 0.96882,
'23 22:30 Z': 1.1617,
'23 23:00 Z': 1.16586,
'23 23:30 Z': 1.18737,
'24 00:00 Z': 1.17143,
'24 00:30 Z': 0.62211,
'24 01:00 Z': 0.32857,
'24 01:30 Z': 0.37365,
'24 02:00 Z': 0.90749,
'24 02:30 Z': 1.1434,
'24 03:00 Z': 1.5124,
'24 03:30 Z': 0.98638,
'24 04:00 Z': 1.00073,
'24 04:30 Z': 0.99224,
'24 05:00 Z': 1.30128,
'24 05:30 Z': 2.06827,
'24 06:00 Z': 1.95601,
'24 06:30 Z': 1.83677,
'24 07:00 Z': 2.26653,
'24 07:30 Z': 2.0469,
'24 08:00 Z': 3.41463,
'24 08:30 Z': 2.88785,
'24 09:00 Z': 2.10221,
'24 09:30 Z': 2.74428,
'24 10:00 Z': 2.19008,
'24 10:30 Z': 1.75881,
'24 11:00 Z': 3.43421,
'24 11:30 Z': 3.28498,
'24 12:00 Z': 2.83545,
'24 12:30 Z': 2.12737,
'24 13:00 Z': 1.4876,
'24 13:30 Z': 1.43863,
'24 14:00 Z': 1.35514,
'24 14:30 Z': 1.13966,
'24 15:00 Z': 1.51664,
'24 15:30 Z': 1.8091,
'24 16:00 Z': 1.99841,
'24 16:30 Z': 1.40145,
'24 17:00 Z': 0.9388,
'24 17:30 Z': 0.95174,
'24 18:00 Z': 1.17517,
'24 18:30 Z': 1.47909,
'24 19:00 Z': 1.21643,
'24 19:30 Z': 1.38,
'24 20:00 Z': 1.53317,
'24 20:30 Z': 1.74792,
'24 21:00 Z': 1.16744,
'24 21:30 Z': 0.62719,
'24 22:00 Z': 1.79084,
'24 22:30 Z': 1.1277,
'24 23:00 Z': 0.63029,
'24 23:30 Z': 0.60227,
'25 00:00 Z': 0.77627,
'25 00:30 Z': 0.84799,
'25 01:00 Z': 0.54256,
'25 01:30 Z': 0.41737,
'25 02:00 Z': 0.50144,
'25 02:30 Z': 0.6472,
'25 03:00 Z': 0.63609,
'25 03:30 Z': 0.45822,
'25 04:00 Z': 0.70098,
'25 04:30 Z': 0.65717,
'25 05:00 Z': 0.90736,
'25 05:30 Z': 1.04086,
'25 06:00 Z': 0.62664,
'25 06:30 Z': 1.13392,
'25 07:00 Z': 1.33893,
'25 07:30 Z': 0.89942,
'25 08:00 Z': 0.87909,
'25 08:30 Z': 0.89963,
'25 09:00 Z': 0.8699,
'25 09:30 Z': 0.90799,
'25 10:00 Z': 1.15853,
'25 10:30 Z': 1.36607,
'25 11:00 Z': 2.02344,
'25 11:30 Z': 1.51631,
'25 12:00 Z': 1.82217,
'25 12:30 Z': 1.55904,
'25 13:00 Z': 0.97068,
'25 13:30 Z': 0.83444,
'25 14:00 Z': 0.92766,
'25 14:30 Z': 1.01541,
'25 15:00 Z': 1.62243,
'25 15:30 Z': 1.74733,
'25 16:00 Z': 1.86853,
'25 16:30 Z': 1.62084,
'25 17:00 Z': 1.39537,
'25 17:30 Z': 1.50647,
'25 18:00 Z': 1.28827,
'25 18:30 Z': 2.15092,
'25 19:00 Z': 1.80881,
'25 19:30 Z': 1.35741,
'25 20:00 Z': 1.62606,
'25 20:30 Z': 1.48435,
'25 21:00 Z': 1.54247,
'25 21:30 Z': 0.96072,
'25 22:00 Z': 1.30126,
'25 22:30 Z': 1.20249,
'25 23:00 Z': 0.74698,
'25 23:30 Z': 0.55634,
'26 00:00 Z': 0.43666,
'26 00:30 Z': 0.46333,
'26 01:00 Z': 0.23544,
'26 01:30 Z': 0.12783,
'26 02:00 Z': 0.14689,
'26 02:30 Z': 0.39401,
'26 03:00 Z': 0.63858,
'26 03:30 Z': 0.26649,
'26 04:00 Z': 0.42873,
'26 04:30 Z': 0.47077,
'26 05:00 Z': 0.60122,
'26 05:30 Z': 0.71383,
'26 06:00 Z': 0.86726,
'26 06:30 Z': 1.42606,
'26 07:00 Z': 1.35473,
'26 07:30 Z': 1.21545,
'26 08:00 Z': 0.94148,
'26 08:30 Z': 0.93848,
'26 09:00 Z': 1.01336,
'26 09:30 Z': 1.16105,
'26 10:00 Z': 1.16416,
'26 10:30 Z': 1.03396,
'26 11:00 Z': 1.14265,
'26 11:30 Z': 0.97361,
'26 12:00 Z': 1.05811,
'26 12:30 Z': 1.06988,
'26 13:00 Z': 0.70266,
'26 13:30 Z': 0.86845,
'26 14:00 Z': 0.90997,
'26 14:30 Z': 1.09964,
'26 15:00 Z': 1.47821,
'26 15:30 Z': 1.55682,
'26 16:00 Z': 1.56388,
'26 16:30 Z': 1.47048,
'26 17:00 Z': 0.8485,
'26 17:30 Z': 0.9403,
'26 18:00 Z': 0.92746,
'26 18:30 Z': 1.42652,
'26 19:00 Z': 1.58132,
'26 19:30 Z': 1.26867,
'26 20:00 Z': 1.36964,
'26 20:30 Z': 0.97276,
'26 21:00 Z': 0.84382,
'26 21:30 Z': 0.18749,
'26 22:00 Z': 0.85358,
'26 22:30 Z': 0.85018,
'26 23:00 Z': 0.65501,
'26 23:30 Z': 0.51731,
'27 00:00 Z': 0.5302,
'27 00:30 Z': 0.46395,
'27 01:00 Z': 0.40281,
'27 01:30 Z': 0.37883,
'27 02:00 Z': 0.23573,
'27 02:30 Z': 0.29147,
'27 03:00 Z': 0.35697,
'27 03:30 Z': 0.11343,
'27 04:00 Z': 0.46072,
'27 04:30 Z': 0.56869,
'27 05:00 Z': 0.9849,
'27 05:30 Z': 0.82889,
'27 06:00 Z': 0.459,
'27 06:30 Z': 0.94467,
'27 07:00 Z': 1.72446,
'27 07:30 Z': 1.53271,
'27 08:00 Z': 1.17213,
'27 08:30 Z': 1.24249,
'27 09:00 Z': 1.08564,
'27 09:30 Z': 1.11966,
'27 10:00 Z': 1.18107,
'27 10:30 Z': 1.10449,
'27 11:00 Z': 1.07471,
'27 11:30 Z': 1.07589,
'27 12:00 Z': 1.10956,
'27 12:30 Z': 0.9806,
'27 13:00 Z': 0.58327,
'27 13:30 Z': 0.77004,
'27 14:00 Z': 0.91394,
'27 14:30 Z': 0.91544,
'27 15:00 Z': 1.19317,
'27 15:30 Z': 1.30294,
'27 16:00 Z': 1.70782,
'27 16:30 Z': 0.88788,
'27 17:00 Z': 0.73388,
'27 17:30 Z': 0.81125,
'27 18:00 Z': 0.90088,
'27 18:30 Z': 1.1595,
'27 19:00 Z': 1.11209,
'27 19:30 Z': 0.91363,
'27 20:00 Z': 1.19386,
'27 20:30 Z': 1.51544,
'27 21:00 Z': 1.32584,
'27 21:30 Z': 0.70034,
'27 22:00 Z': 0.62116,
'27 22:30 Z': 0.8471,
'27 23:00 Z': 0.56095,
'27 23:30 Z': 0.45963,
'28 00:00 Z': 0.58705,
'28 00:30 Z': 0.44599,
'28 01:00 Z': 0.37433,
'28 01:30 Z': 0.24541,
'28 02:00 Z': 0.31335,
'28 02:30 Z': 0.37432,
'28 03:00 Z': 0.43327,
'28 03:30 Z': 0.16471,
'28 04:00 Z': 0.47425,
'28 04:30 Z': 0.3495,
'28 05:00 Z': 1.17903,
'28 05:30 Z': 1.31555,
'28 06:00 Z': 1.09533,
'28 06:30 Z': 1.42643,
'28 07:00 Z': 1.1109,
'28 07:30 Z': 0.79738,
'28 08:00 Z': 0.81856,
'28 08:30 Z': 0.88189,
'28 09:00 Z': 0.88278,
'28 09:30 Z': 1.04543,
'28 10:00 Z': 0.8398,
'28 10:30 Z': 0.80734,
'28 11:00 Z': 0.71617,
'28 11:30 Z': 0.60156,
'28 12:00 Z': 0.59868,
'28 12:30 Z': 0.49191,
'28 13:00 Z': 0.12484,
'28 13:30 Z': 0.18417,
'28 14:00 Z': 0.09636,
'28 14:30 Z': 0.03007,
'28 15:00 Z': 0.62533,
'28 15:30 Z': 0.92625,
'28 16:00 Z': 0.89207,
'28 16:30 Z': 0.83025,
'28 17:00 Z': 0.3819,
'28 17:30 Z': 0.45676,
'28 18:00 Z': 0.6543,
'28 18:30 Z': 0.99238,
'28 19:00 Z': 0.91962,
'28 19:30 Z': 0.91792,
'28 20:00 Z': 1.19885,
'28 20:30 Z': 1.38145,
'28 21:00 Z': 1.45631,
'28 21:30 Z': 1.0582,
'28 22:00 Z': 0.98292,
'28 22:30 Z': 0.59313,
'28 23:00 Z': 0.76956,
'28 23:30 Z': 0.7759,
'29 00:00 Z': 1.20304,
'29 00:30 Z': 0.80884,
'29 01:00 Z': 0.9931,
'29 01:30 Z': 0.99741,
'29 02:00 Z': 0.96472,
'29 02:30 Z': 1.06716,
'29 03:00 Z': 0.96363,
'29 03:30 Z': 0.76406,
'29 04:00 Z': 0.80819,
'29 04:30 Z': 1.04946,
'29 05:00 Z': 1.07236,
'29 05:30 Z': 1.43164,
'29 06:00 Z': 0.90529,
'29 06:30 Z': 1.39848,
'29 07:00 Z': 1.03091,
'29 07:30 Z': 1.26541,
'29 08:00 Z': 1.20105,
'29 08:30 Z': 1.61403,
'29 09:00 Z': 1.64298,
'29 09:30 Z': 1.58576,
'29 10:00 Z': 1.58943,
'29 10:30 Z': 1.7478,
'29 11:00 Z': 2.14559,
'29 11:30 Z': 2.24693,
'29 12:00 Z': 2.06391,
'29 12:30 Z': 1.98897,
'29 13:00 Z': 1.54125,
'29 13:30 Z': 1.00118,
'29 14:00 Z': 0.8528,
'29 14:30 Z': 0.76759,
'29 15:00 Z': 1.37001,
'29 15:30 Z': 1.55506,
'29 16:00 Z': 1.1512,
'29 16:30 Z': 1.25801,
'29 17:00 Z': 0.86537,
'29 17:30 Z': 1.22769,
'29 18:00 Z': 1.49166,
'29 18:30 Z': 1.73551,
'29 19:00 Z': 1.94429,
'29 19:30 Z': 1.47371,
'29 20:00 Z': 1.50461,
'29 20:30 Z': 1.70721,
'29 21:00 Z': 1.13715,
'29 21:30 Z': 0.50542,
'29 22:00 Z': 1.259,
'29 22:30 Z': 1.2748,
'29 23:00 Z': 1.29864,
'29 23:30 Z': 1.01541,
'30 00:00 Z': 1.78194,
'30 00:30 Z': 2.17439,
'30 01:00 Z': 2.14974,
'30 01:30 Z': 1.9571,
'30 02:00 Z': 2.68007,
'30 02:30 Z': 2.95741,
'30 03:00 Z': 3.06486,
'30 03:30 Z': 2.51477,
'30 04:00 Z': 1.99872,
'30 04:30 Z': 1.86488,
'30 05:00 Z': 2.30486,
'30 05:30 Z': 2.83934,
'30 06:00 Z': 2.59817,
'30 06:30 Z': 2.92776,
'30 07:00 Z': 2.92602,
'30 07:30 Z': 1.91945,
'30 08:00 Z': 1.28879,
'30 08:30 Z': 1.23714,
'30 09:00 Z': 1.41795,
'30 09:30 Z': 1.40404,
'30 10:00 Z': 1.36657,
'30 10:30 Z': 1.3791,
'30 11:00 Z': 1.04082,
'30 11:30 Z': 0.93458,
'30 12:00 Z': 1.27515,
'30 12:30 Z': 0.36724,
'30 13:00 Z': 0.44122,
'30 13:30 Z': 0.42147,
'30 14:00 Z': 1.07233,
'30 14:30 Z': 1.0315,
'30 15:00 Z': 0.54718,
'30 15:30 Z': 0.54254,
'30 16:00 Z': 0.69901,
'30 16:30 Z': 0.6973,
'30 17:00 Z': 0.67662,
'30 17:30 Z': 0.63759,
'30 18:00 Z': 0.52974,
'30 18:30 Z': 0.84139,
'30 19:00 Z': 1.07396,
'30 19:30 Z': 0.90406,
'30 20:00 Z': 1.38607,
'30 20:30 Z': 1.46514,
'30 21:00 Z': 1.24796,
'30 21:30 Z': 0.56878,
'30 22:00 Z': 1.14787,
'30 22:30 Z': 1.03507,
'30 23:00 Z': 0.99278,
'30 23:30 Z': 1.06638,
'31 00:00 Z': 0.93898,
'31 00:30 Z': 0.80527,
'31 01:00 Z': 0.65301,
'31 01:30 Z': 0.43568,
'31 02:00 Z': 0.54208,
'31 02:30 Z': 0.70907,
'31 03:00 Z': 0.85411,
'31 03:30 Z': 0.68091,
'31 04:00 Z': 1.35444,
'31 04:30 Z': 1.10079,
'31 05:00 Z': 1.78795,
'31 05:30 Z': 1.65111,
'31 06:00 Z': 1.54482,
'31 06:30 Z': 1.30581,
'31 07:00 Z': 1.40812,
'31 07:30 Z': 1.39147,
'31 08:00 Z': 1.11506,
'31 08:30 Z': 1.3072,
'31 09:00 Z': 1.6743,
'31 09:30 Z': 1.45499,
'31 10:00 Z': 1.22039,
'31 10:30 Z': 1.4225,
'31 11:00 Z': 1.51188,
'31 11:30 Z': 1.25259,
'31 12:00 Z': 1.46341,
'31 12:30 Z': 0.98025,
'31 13:00 Z': 0.81763,
'31 13:30 Z': 0.77219,
'31 14:00 Z': 0.6932,
'31 14:30 Z': 0.54388,
'31 15:00 Z': 0.46264,
'31 15:30 Z': 0.56382,
'31 16:00 Z': 0.52436,
'31 16:30 Z': 0.56096,
'31 17:00 Z': 0.91753,
'31 17:30 Z': 1.09874,
'31 18:00 Z': 0.81442,
'31 18:30 Z': 1.33774,
'31 19:00 Z': 1.0337,
'31 19:30 Z': 0.96878,
'31 20:00 Z': 1.33581,
'31 20:30 Z': 1.60414,
'31 21:00 Z': 1.47156,
'31 21:30 Z': 0.53413,
'31 22:00 Z': 0.7786,
'31 22:30 Z': 0.85223,
'31 23:00 Z': 1.45438,
'31 23:30 Z': 1.66962}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bsuos]]></value>
        <value><![CDATA[155]]></value>
        <value><![CDATA[2010-06-01T00:00Z]]></value>
        <value><![CDATA[def rates_gbp_per_mwh():
    return {
'01 00:00 Z': 1.52641,
'01 00:30 Z': 1.45648,
'01 01:00 Z': 1.0823,
'01 01:30 Z': 0.81357,
'01 02:00 Z': 1.38686,
'01 02:30 Z': 1.32349,
'01 03:00 Z': 1.28384,
'01 03:30 Z': 1.088,
'01 04:00 Z': 1.62006,
'01 04:30 Z': 0.99864,
'01 05:00 Z': 0.93631,
'01 05:30 Z': 0.65781,
'01 06:00 Z': 0.20865,
'01 06:30 Z': 0.81316,
'01 07:00 Z': 1.13093,
'01 07:30 Z': 1.3061,
'01 08:00 Z': 1.49185,
'01 08:30 Z': 1.30436,
'01 09:00 Z': 1.09371,
'01 09:30 Z': 1.20817,
'01 10:00 Z': 1.16177,
'01 10:30 Z': 1.83018,
'01 11:00 Z': 2.19834,
'01 11:30 Z': 1.99127,
'01 12:00 Z': 1.55046,
'01 12:30 Z': 1.44522,
'01 13:00 Z': 1.4416,
'01 13:30 Z': 1.3059,
'01 14:00 Z': 1.12099,
'01 14:30 Z': 1.17441,
'01 15:00 Z': 1.67075,
'01 15:30 Z': 1.70979,
'01 16:00 Z': 1.75832,
'01 16:30 Z': 1.67076,
'01 17:00 Z': 1.60966,
'01 17:30 Z': 1.58761,
'01 18:00 Z': 1.77749,
'01 18:30 Z': 2.51546,
'01 19:00 Z': 2.31047,
'01 19:30 Z': 1.63386,
'01 20:00 Z': 2.01295,
'01 20:30 Z': 1.70403,
'01 21:00 Z': 1.85495,
'01 21:30 Z': 1.26215,
'01 22:00 Z': 1.13134,
'01 22:30 Z': 1.47651,
'01 23:00 Z': 1.35849,
'01 23:30 Z': 1.14537,
'02 00:00 Z': 1.13084,
'02 00:30 Z': 1.10333,
'02 01:00 Z': 0.82327,
'02 01:30 Z': 0.6761,
'02 02:00 Z': 0.62497,
'02 02:30 Z': 0.71966,
'02 03:00 Z': 0.68729,
'02 03:30 Z': 0.71877,
'02 04:00 Z': 0.78109,
'02 04:30 Z': 0.76567,
'02 05:00 Z': 0.73159,
'02 05:30 Z': 0.58325,
'02 06:00 Z': 0.25494,
'02 06:30 Z': 0.7628,
'02 07:00 Z': 0.84561,
'02 07:30 Z': 0.79752,
'02 08:00 Z': 0.7996,
'02 08:30 Z': 0.66539,
'02 09:00 Z': 0.63703,
'02 09:30 Z': 0.56463,
'02 10:00 Z': 0.53534,
'02 10:30 Z': 0.50184,
'02 11:00 Z': 0.41663,
'02 11:30 Z': 0.34831,
'02 12:00 Z': 0.37087,
'02 12:30 Z': 0.59849,
'02 13:00 Z': 0.44597,
'02 13:30 Z': 0.40748,
'02 14:00 Z': 0.61175,
'02 14:30 Z': 0.64049,
'02 15:00 Z': 0.68582,
'02 15:30 Z': 0.6522,
'02 16:00 Z': 0.65822,
'02 16:30 Z': 0.83357,
'02 17:00 Z': 0.41766,
'02 17:30 Z': 0.61139,
'02 18:00 Z': 0.91611,
'02 18:30 Z': 1.30038,
'02 19:00 Z': 1.00755,
'02 19:30 Z': 0.66471,
'02 20:00 Z': 1.00133,
'02 20:30 Z': 1.6692,
'02 21:00 Z': 1.77273,
'02 21:30 Z': 1.31452,
'02 22:00 Z': 0.90856,
'02 22:30 Z': 1.61183,
'02 23:00 Z': 1.54466,
'02 23:30 Z': 1.23811,
'03 00:00 Z': 1.2648,
'03 00:30 Z': 1.37489,
'03 01:00 Z': 1.22372,
'03 01:30 Z': 1.03581,
'03 02:00 Z': 1.19813,
'03 02:30 Z': 1.27814,
'03 03:00 Z': 1.27321,
'03 03:30 Z': 1.01336,
'03 04:00 Z': 1.0902,
'03 04:30 Z': 1.26773,
'03 05:00 Z': 1.88464,
'03 05:30 Z': 2.18734,
'03 06:00 Z': 0.5948,
'03 06:30 Z': 0.91642,
'03 07:00 Z': 1.04005,
'03 07:30 Z': 1.14478,
'03 08:00 Z': 1.78414,
'03 08:30 Z': 1.90984,
'03 09:00 Z': 1.80516,
'03 09:30 Z': 1.64545,
'03 10:00 Z': 1.40592,
'03 10:30 Z': 1.32971,
'03 11:00 Z': 1.40698,
'03 11:30 Z': 1.12524,
'03 12:00 Z': 1.09731,
'03 12:30 Z': 1.0509,
'03 13:00 Z': 0.75438,
'03 13:30 Z': 0.82327,
'03 14:00 Z': 0.92868,
'03 14:30 Z': 0.80105,
'03 15:00 Z': 0.75984,
'03 15:30 Z': 0.86568,
'03 16:00 Z': 0.88173,
'03 16:30 Z': 0.76925,
'03 17:00 Z': 0.26724,
'03 17:30 Z': 0.41437,
'03 18:00 Z': 0.71572,
'03 18:30 Z': 1.18686,
'03 19:00 Z': 1.18249,
'03 19:30 Z': 0.74484,
'03 20:00 Z': 0.90594,
'03 20:30 Z': 1.03238,
'03 21:00 Z': 1.38395,
'03 21:30 Z': 0.61428,
'03 22:00 Z': 0.44172,
'03 22:30 Z': 1.0705,
'03 23:00 Z': 1.52555,
'03 23:30 Z': 1.31829,
'04 00:00 Z': 1.67138,
'04 00:30 Z': 1.33456,
'04 01:00 Z': 1.29228,
'04 01:30 Z': 1.08374,
'04 02:00 Z': 1.47648,
'04 02:30 Z': 1.60782,
'04 03:00 Z': 1.49917,
'04 03:30 Z': 0.91754,
'04 04:00 Z': 1.56254,
'04 04:30 Z': 1.34642,
'04 05:00 Z': 1.9813,
'04 05:30 Z': 1.42317,
'04 06:00 Z': 0.20959,
'04 06:30 Z': 0.53001,
'04 07:00 Z': 0.47424,
'04 07:30 Z': 1.11879,
'04 08:00 Z': 1.1179,
'04 08:30 Z': 1.40626,
'04 09:00 Z': 1.31111,
'04 09:30 Z': 1.11145,
'04 10:00 Z': 0.96893,
'04 10:30 Z': 1.0656,
'04 11:00 Z': 0.99018,
'04 11:30 Z': 0.91762,
'04 12:00 Z': 1.01716,
'04 12:30 Z': 0.93951,
'04 13:00 Z': 0.69348,
'04 13:30 Z': 0.76049,
'04 14:00 Z': 0.594,
'04 14:30 Z': 0.89599,
'04 15:00 Z': 1.39389,
'04 15:30 Z': 1.7211,
'04 16:00 Z': 1.20057,
'04 16:30 Z': 0.72388,
'04 17:00 Z': 0.33817,
'04 17:30 Z': 0.90971,
'04 18:00 Z': 1.13423,
'04 18:30 Z': 1.4838,
'04 19:00 Z': 1.21311,
'04 19:30 Z': 1.26272,
'04 20:00 Z': 2.19232,
'04 20:30 Z': 2.20382,
'04 21:00 Z': 2.01604,
'04 21:30 Z': 1.31187,
'04 22:00 Z': 1.1225,
'04 22:30 Z': 1.28001,
'04 23:00 Z': 1.98533,
'04 23:30 Z': 2.36464,
'05 00:00 Z': 1.76554,
'05 00:30 Z': 1.6143,
'05 01:00 Z': 1.48551,
'05 01:30 Z': 1.20397,
'05 02:00 Z': 1.50974,
'05 02:30 Z': 1.52591,
'05 03:00 Z': 1.45502,
'05 03:30 Z': 1.09513,
'05 04:00 Z': 0.90681,
'05 04:30 Z': 1.08554,
'05 05:00 Z': 1.19576,
'05 05:30 Z': 1.19228,
'05 06:00 Z': 0.76306,
'05 06:30 Z': 1.52757,
'05 07:00 Z': 2.14944,
'05 07:30 Z': 1.53229,
'05 08:00 Z': 1.63996,
'05 08:30 Z': 1.49071,
'05 09:00 Z': 1.44724,
'05 09:30 Z': 1.30363,
'05 10:00 Z': 1.32339,
'05 10:30 Z': 1.23243,
'05 11:00 Z': 1.23941,
'05 11:30 Z': 1.13861,
'05 12:00 Z': 1.31873,
'05 12:30 Z': 1.16724,
'05 13:00 Z': 1.28693,
'05 13:30 Z': 0.81165,
'05 14:00 Z': 1.61583,
'05 14:30 Z': 1.75454,
'05 15:00 Z': 2.26055,
'05 15:30 Z': 2.28083,
'05 16:00 Z': 2.71062,
'05 16:30 Z': 2.65825,
'05 17:00 Z': 1.79546,
'05 17:30 Z': 1.48492,
'05 18:00 Z': 1.72848,
'05 18:30 Z': 1.70636,
'05 19:00 Z': 1.3768,
'05 19:30 Z': 1.30072,
'05 20:00 Z': 1.745,
'05 20:30 Z': 1.87705,
'05 21:00 Z': 1.99745,
'05 21:30 Z': 1.28386,
'05 22:00 Z': 1.96557,
'05 22:30 Z': 2.17101,
'05 23:00 Z': 1.59426,
'05 23:30 Z': 1.77111,
'06 00:00 Z': 1.94337,
'06 00:30 Z': 2.2934,
'06 01:00 Z': 1.98672,
'06 01:30 Z': 1.69162,
'06 02:00 Z': 1.95375,
'06 02:30 Z': 1.84482,
'06 03:00 Z': 1.65124,
'06 03:30 Z': 1.59031,
'06 04:00 Z': 1.5557,
'06 04:30 Z': 1.60177,
'06 05:00 Z': 1.4726,
'06 05:30 Z': 1.83709,
'06 06:00 Z': 1.75009,
'06 06:30 Z': 1.72422,
'06 07:00 Z': 0.98884,
'06 07:30 Z': 0.89017,
'06 08:00 Z': 0.60223,
'06 08:30 Z': 0.79636,
'06 09:00 Z': 1.06561,
'06 09:30 Z': 1.2913,
'06 10:00 Z': 1.79487,
'06 10:30 Z': 2.11189,
'06 11:00 Z': 2.27102,
'06 11:30 Z': 2.30527,
'06 12:00 Z': 1.76305,
'06 12:30 Z': 1.24068,
'06 13:00 Z': 1.08915,
'06 13:30 Z': 0.97269,
'06 14:00 Z': 1.40037,
'06 14:30 Z': 1.46629,
'06 15:00 Z': 1.4764,
'06 15:30 Z': 1.60149,
'06 16:00 Z': 1.69963,
'06 16:30 Z': 1.75659,
'06 17:00 Z': 2.15471,
'06 17:30 Z': 1.93078,
'06 18:00 Z': 1.42782,
'06 18:30 Z': 1.77059,
'06 19:00 Z': 1.62841,
'06 19:30 Z': 1.60848,
'06 20:00 Z': 1.42735,
'06 20:30 Z': 1.5669,
'06 21:00 Z': 1.41117,
'06 21:30 Z': 0.56941,
'06 22:00 Z': 0.8944,
'06 22:30 Z': 1.06286,
'06 23:00 Z': 1.45451,
'06 23:30 Z': 1.06075,
'07 00:00 Z': 1.08368,
'07 00:30 Z': 0.89185,
'07 01:00 Z': 0.8321,
'07 01:30 Z': 0.79456,
'07 02:00 Z': 0.95967,
'07 02:30 Z': 1.0217,
'07 03:00 Z': 1.05019,
'07 03:30 Z': 0.6858,
'07 04:00 Z': 0.86198,
'07 04:30 Z': 0.64698,
'07 05:00 Z': 1.36908,
'07 05:30 Z': 1.16677,
'07 06:00 Z': 1.63686,
'07 06:30 Z': 1.65635,
'07 07:00 Z': 1.45497,
'07 07:30 Z': 1.20581,
'07 08:00 Z': 1.46013,
'07 08:30 Z': 1.56373,
'07 09:00 Z': 1.58449,
'07 09:30 Z': 1.55141,
'07 10:00 Z': 1.68628,
'07 10:30 Z': 1.6211,
'07 11:00 Z': 1.45074,
'07 11:30 Z': 1.29114,
'07 12:00 Z': 1.39732,
'07 12:30 Z': 1.467,
'07 13:00 Z': 1.11529,
'07 13:30 Z': 0.98726,
'07 14:00 Z': 1.1133,
'07 14:30 Z': 1.26644,
'07 15:00 Z': 1.67776,
'07 15:30 Z': 1.3351,
'07 16:00 Z': 1.20798,
'07 16:30 Z': 1.12441,
'07 17:00 Z': 0.74729,
'07 17:30 Z': 0.84829,
'07 18:00 Z': 1.60278,
'07 18:30 Z': 3.30222,
'07 19:00 Z': 2.55796,
'07 19:30 Z': 1.91655,
'07 20:00 Z': 1.82193,
'07 20:30 Z': 1.68236,
'07 21:00 Z': 1.08547,
'07 21:30 Z': 0.36991,
'07 22:00 Z': 1.05141,
'07 22:30 Z': 1.01678,
'07 23:00 Z': 0.64222,
'07 23:30 Z': 0.68046,
'08 00:00 Z': 0.85877,
'08 00:30 Z': 0.73915,
'08 01:00 Z': 0.50032,
'08 01:30 Z': 0.38082,
'08 02:00 Z': 0.46974,
'08 02:30 Z': 0.54514,
'08 03:00 Z': 0.78322,
'08 03:30 Z': 0.73859,
'08 04:00 Z': 0.87515,
'08 04:30 Z': 0.85619,
'08 05:00 Z': 1.05536,
'08 05:30 Z': 1.03047,
'08 06:00 Z': 0.76874,
'08 06:30 Z': 1.29222,
'08 07:00 Z': 1.19638,
'08 07:30 Z': 0.94399,
'08 08:00 Z': 0.77394,
'08 08:30 Z': 0.87194,
'08 09:00 Z': 1.14201,
'08 09:30 Z': 1.01343,
'08 10:00 Z': 0.88211,
'08 10:30 Z': 0.95766,
'08 11:00 Z': 0.94294,
'08 11:30 Z': 0.87647,
'08 12:00 Z': 1.28947,
'08 12:30 Z': 1.29315,
'08 13:00 Z': 0.72604,
'08 13:30 Z': 0.64795,
'08 14:00 Z': 0.58252,
'08 14:30 Z': 0.73636,
'08 15:00 Z': 1.27403,
'08 15:30 Z': 1.40387,
'08 16:00 Z': 1.58608,
'08 16:30 Z': 1.28585,
'08 17:00 Z': 0.90435,
'08 17:30 Z': 1.15677,
'08 18:00 Z': 1.07912,
'08 18:30 Z': 1.50839,
'08 19:00 Z': 1.53322,
'08 19:30 Z': 1.30895,
'08 20:00 Z': 1.15373,
'08 20:30 Z': 0.93717,
'08 21:00 Z': 1.09372,
'08 21:30 Z': 0.52226,
'08 22:00 Z': 0.60735,
'08 22:30 Z': 0.5251,
'08 23:00 Z': 0.84,
'08 23:30 Z': 0.83832,
'09 00:00 Z': 0.82311,
'09 00:30 Z': 0.65981,
'09 01:00 Z': 0.62299,
'09 01:30 Z': 0.62409,
'09 02:00 Z': 0.66127,
'09 02:30 Z': 0.6472,
'09 03:00 Z': 0.57693,
'09 03:30 Z': 0.39451,
'09 04:00 Z': 0.625,
'09 04:30 Z': 0.49363,
'09 05:00 Z': 0.78844,
'09 05:30 Z': 1.12267,
'09 06:00 Z': 1.61523,
'09 06:30 Z': 1.45246,
'09 07:00 Z': 1.42557,
'09 07:30 Z': 1.35928,
'09 08:00 Z': 1.64049,
'09 08:30 Z': 1.63273,
'09 09:00 Z': 1.46269,
'09 09:30 Z': 1.42863,
'09 10:00 Z': 1.61192,
'09 10:30 Z': 1.82005,
'09 11:00 Z': 1.96183,
'09 11:30 Z': 1.99276,
'09 12:00 Z': 2.37438,
'09 12:30 Z': 2.38663,
'09 13:00 Z': 2.11825,
'09 13:30 Z': 1.44509,
'09 14:00 Z': 1.456,
'09 14:30 Z': 1.74825,
'09 15:00 Z': 2.63859,
'09 15:30 Z': 3.20474,
'09 16:00 Z': 3.24636,
'09 16:30 Z': 3.72645,
'09 17:00 Z': 2.99403,
'09 17:30 Z': 2.69386,
'09 18:00 Z': 2.25316,
'09 18:30 Z': 2.39056,
'09 19:00 Z': 2.38219,
'09 19:30 Z': 1.77015,
'09 20:00 Z': 2.56221,
'09 20:30 Z': 2.44139,
'09 21:00 Z': 2.07859,
'09 21:30 Z': 1.24225,
'09 22:00 Z': 0.97355,
'09 22:30 Z': 1.21864,
'09 23:00 Z': 1.28158,
'09 23:30 Z': 1.16631,
'10 00:00 Z': 1.27453,
'10 00:30 Z': 1.14244,
'10 01:00 Z': 1.14828,
'10 01:30 Z': 0.89218,
'10 02:00 Z': 0.94082,
'10 02:30 Z': 0.92625,
'10 03:00 Z': 1.05689,
'10 03:30 Z': 1.23282,
'10 04:00 Z': 1.68738,
'10 04:30 Z': 1.42843,
'10 05:00 Z': 1.57554,
'10 05:30 Z': 1.435,
'10 06:00 Z': 2.19494,
'10 06:30 Z': 3.7369,
'10 07:00 Z': 2.33121,
'10 07:30 Z': 2.49288,
'10 08:00 Z': 2.51263,
'10 08:30 Z': 2.49333,
'10 09:00 Z': 2.44931,
'10 09:30 Z': 2.24459,
'10 10:00 Z': 2.22262,
'10 10:30 Z': 2.47463,
'10 11:00 Z': 2.6459,
'10 11:30 Z': 2.60786,
'10 12:00 Z': 2.31295,
'10 12:30 Z': 2.16557,
'10 13:00 Z': 2.02574,
'10 13:30 Z': 2.02853,
'10 14:00 Z': 1.89903,
'10 14:30 Z': 2.11102,
'10 15:00 Z': 2.37859,
'10 15:30 Z': 2.44887,
'10 16:00 Z': 2.18371,
'10 16:30 Z': 2.12809,
'10 17:00 Z': 2.05807,
'10 17:30 Z': 2.32894,
'10 18:00 Z': 2.38109,
'10 18:30 Z': 2.19621,
'10 19:00 Z': 2.37366,
'10 19:30 Z': 1.82504,
'10 20:00 Z': 1.93132,
'10 20:30 Z': 1.85433,
'10 21:00 Z': 1.48052,
'10 21:30 Z': 0.8374,
'10 22:00 Z': 0.64682,
'10 22:30 Z': 1.08222,
'10 23:00 Z': 1.17632,
'10 23:30 Z': 0.79162,
'11 00:00 Z': 1.09799,
'11 00:30 Z': 0.99653,
'11 01:00 Z': 0.89609,
'11 01:30 Z': 0.88304,
'11 02:00 Z': 1.11709,
'11 02:30 Z': 0.99963,
'11 03:00 Z': 1.02287,
'11 03:30 Z': 0.9254,
'11 04:00 Z': 1.21744,
'11 04:30 Z': 0.9648,
'11 05:00 Z': 1.3943,
'11 05:30 Z': 1.38696,
'11 06:00 Z': 1.46221,
'11 06:30 Z': 1.74142,
'11 07:00 Z': 2.04986,
'11 07:30 Z': 2.10259,
'11 08:00 Z': 2.01431,
'11 08:30 Z': 1.95906,
'11 09:00 Z': 1.71235,
'11 09:30 Z': 1.5926,
'11 10:00 Z': 1.57958,
'11 10:30 Z': 1.5635,
'11 11:00 Z': 1.61395,
'11 11:30 Z': 1.42934,
'11 12:00 Z': 1.5067,
'11 12:30 Z': 1.61217,
'11 13:00 Z': 1.04945,
'11 13:30 Z': 0.91175,
'11 14:00 Z': 0.56874,
'11 14:30 Z': 0.99561,
'11 15:00 Z': 1.45001,
'11 15:30 Z': 1.3593,
'11 16:00 Z': 1.35785,
'11 16:30 Z': 0.94004,
'11 17:00 Z': 0.49816,
'11 17:30 Z': 1.0365,
'11 18:00 Z': 0.90769,
'11 18:30 Z': 1.23147,
'11 19:00 Z': 1.55538,
'11 19:30 Z': 1.09939,
'11 20:00 Z': 1.06052,
'11 20:30 Z': 1.43021,
'11 21:00 Z': 1.73213,
'11 21:30 Z': 0.61902,
'11 22:00 Z': 0.40068,
'11 22:30 Z': 0.62096,
'11 23:00 Z': 0.95311,
'11 23:30 Z': 1.25163,
'12 00:00 Z': 1.75567,
'12 00:30 Z': 2.02306,
'12 01:00 Z': 1.5798,
'12 01:30 Z': 1.3858,
'12 02:00 Z': 1.23635,
'12 02:30 Z': 1.34549,
'12 03:00 Z': 1.01087,
'12 03:30 Z': 0.34676,
'12 04:00 Z': 0.55852,
'12 04:30 Z': 0.66319,
'12 05:00 Z': 1.47337,
'12 05:30 Z': 1.6102,
'12 06:00 Z': 1.0045,
'12 06:30 Z': 1.52509,
'12 07:00 Z': 1.92361,
'12 07:30 Z': 1.37307,
'12 08:00 Z': 1.2375,
'12 08:30 Z': 1.50317,
'12 09:00 Z': 1.39672,
'12 09:30 Z': 1.30853,
'12 10:00 Z': 1.21346,
'12 10:30 Z': 1.48522,
'12 11:00 Z': 1.35959,
'12 11:30 Z': 1.15759,
'12 12:00 Z': 1.21754,
'12 12:30 Z': 1.28187,
'12 13:00 Z': 1.11056,
'12 13:30 Z': 0.93994,
'12 14:00 Z': 1.11845,
'12 14:30 Z': 1.1747,
'12 15:00 Z': 1.48794,
'12 15:30 Z': 1.68001,
'12 16:00 Z': 1.91236,
'12 16:30 Z': 2.03097,
'12 17:00 Z': 1.59373,
'12 17:30 Z': 1.55166,
'12 18:00 Z': 1.15869,
'12 18:30 Z': 1.05779,
'12 19:00 Z': 1.6309,
'12 19:30 Z': 0.96478,
'12 20:00 Z': 0.73666,
'12 20:30 Z': 1.58537,
'12 21:00 Z': 1.41232,
'12 21:30 Z': 0.81927,
'12 22:00 Z': 0.75738,
'12 22:30 Z': 0.78887,
'12 23:00 Z': 0.9747,
'12 23:30 Z': 1.13958,
'13 00:00 Z': 1.79947,
'13 00:30 Z': 2.47389,
'13 01:00 Z': 2.58171,
'13 01:30 Z': 2.39608,
'13 02:00 Z': 2.57686,
'13 02:30 Z': 2.5328,
'13 03:00 Z': 2.39616,
'13 03:30 Z': 2.11316,
'13 04:00 Z': 1.91073,
'13 04:30 Z': 2.02344,
'13 05:00 Z': 2.2016,
'13 05:30 Z': 2.29703,
'13 06:00 Z': 2.17263,
'13 06:30 Z': 2.05394,
'13 07:00 Z': 1.71276,
'13 07:30 Z': 1.33827,
'13 08:00 Z': 0.77534,
'13 08:30 Z': 1.02277,
'13 09:00 Z': 1.25494,
'13 09:30 Z': 1.32428,
'13 10:00 Z': 1.27553,
'13 10:30 Z': 1.54913,
'13 11:00 Z': 1.71838,
'13 11:30 Z': 1.6781,
'13 12:00 Z': 1.53789,
'13 12:30 Z': 1.12621,
'13 13:00 Z': 1.31918,
'13 13:30 Z': 1.26956,
'13 14:00 Z': 1.74075,
'13 14:30 Z': 1.92448,
'13 15:00 Z': 2.42435,
'13 15:30 Z': 2.53317,
'13 16:00 Z': 2.62736,
'13 16:30 Z': 2.55122,
'13 17:00 Z': 2.39002,
'13 17:30 Z': 2.23571,
'13 18:00 Z': 2.48767,
'13 18:30 Z': 2.43694,
'13 19:00 Z': 2.39354,
'13 19:30 Z': 2.19473,
'13 20:00 Z': 2.04602,
'13 20:30 Z': 2.03306,
'13 21:00 Z': 1.62661,
'13 21:30 Z': 0.48712,
'13 22:00 Z': 0.59348,
'13 22:30 Z': 0.72917,
'13 23:00 Z': 0.98855,
'13 23:30 Z': 0.94462,
'14 00:00 Z': 1.03108,
'14 00:30 Z': 0.81552,
'14 01:00 Z': 0.86067,
'14 01:30 Z': 0.91942,
'14 02:00 Z': 0.86637,
'14 02:30 Z': 0.7984,
'14 03:00 Z': 0.86859,
'14 03:30 Z': 1.06508,
'14 04:00 Z': 1.38929,
'14 04:30 Z': 1.18687,
'14 05:00 Z': 0.81963,
'14 05:30 Z': 1.27952,
'14 06:00 Z': 1.57619,
'14 06:30 Z': 1.68643,
'14 07:00 Z': 1.86159,
'14 07:30 Z': 1.40233,
'14 08:00 Z': 1.18843,
'14 08:30 Z': 0.84516,
'14 09:00 Z': 0.77179,
'14 09:30 Z': 0.67471,
'14 10:00 Z': 0.80106,
'14 10:30 Z': 0.81773,
'14 11:00 Z': 1.03561,
'14 11:30 Z': 0.98881,
'14 12:00 Z': 0.70045,
'14 12:30 Z': 0.71774,
'14 13:00 Z': 0.49647,
'14 13:30 Z': 0.5369,
'14 14:00 Z': 0.52816,
'14 14:30 Z': 0.68093,
'14 15:00 Z': 1.21012,
'14 15:30 Z': 1.35567,
'14 16:00 Z': 1.40834,
'14 16:30 Z': 1.47716,
'14 17:00 Z': 1.33817,
'14 17:30 Z': 1.53484,
'14 18:00 Z': 1.48476,
'14 18:30 Z': 1.94311,
'14 19:00 Z': 2.24766,
'14 19:30 Z': 1.63787,
'14 20:00 Z': 1.45409,
'14 20:30 Z': 1.77875,
'14 21:00 Z': 1.49483,
'14 21:30 Z': 0.48391,
'14 22:00 Z': 0.46399,
'14 22:30 Z': 0.21857,
'14 23:00 Z': 0.41327,
'14 23:30 Z': 0.38764,
'15 00:00 Z': 0.82854,
'15 00:30 Z': 0.80376,
'15 01:00 Z': 0.8105,
'15 01:30 Z': 0.8494,
'15 02:00 Z': 1.01201,
'15 02:30 Z': 1.1202,
'15 03:00 Z': 1.104,
'15 03:30 Z': 0.72913,
'15 04:00 Z': 0.85278,
'15 04:30 Z': 0.70522,
'15 05:00 Z': 0.9868,
'15 05:30 Z': 0.92322,
'15 06:00 Z': 1.52319,
'15 06:30 Z': 1.81354,
'15 07:00 Z': 1.57441,
'15 07:30 Z': 1.23268,
'15 08:00 Z': 1.13623,
'15 08:30 Z': 1.1151,
'15 09:00 Z': 0.91442,
'15 09:30 Z': 0.91196,
'15 10:00 Z': 1.13724,
'15 10:30 Z': 1.16093,
'15 11:00 Z': 1.03484,
'15 11:30 Z': 0.84423,
'15 12:00 Z': 0.86798,
'15 12:30 Z': 0.99857,
'15 13:00 Z': 0.33217,
'15 13:30 Z': 0.57334,
'15 14:00 Z': 0.69168,
'15 14:30 Z': 0.61007,
'15 15:00 Z': 1.18337,
'15 15:30 Z': 1.29277,
'15 16:00 Z': 1.25088,
'15 16:30 Z': 1.29987,
'15 17:00 Z': 0.78351,
'15 17:30 Z': 1.31991,
'15 18:00 Z': 1.10494,
'15 18:30 Z': 1.54782,
'15 19:00 Z': 1.89891,
'15 19:30 Z': 1.18747,
'15 20:00 Z': 1.23765,
'15 20:30 Z': 1.31363,
'15 21:00 Z': 1.42435,
'15 21:30 Z': 0.64934,
'15 22:00 Z': 0.81412,
'15 22:30 Z': 0.75873,
'15 23:00 Z': 0.6355,
'15 23:30 Z': 0.70237,
'16 00:00 Z': 0.85044,
'16 00:30 Z': 0.68954,
'16 01:00 Z': 0.83254,
'16 01:30 Z': 0.76007,
'16 02:00 Z': 0.7452,
'16 02:30 Z': 0.83325,
'16 03:00 Z': 0.56419,
'16 03:30 Z': 0.3999,
'16 04:00 Z': 0.80466,
'16 04:30 Z': 0.75279,
'16 05:00 Z': 0.60517,
'16 05:30 Z': 0.79489,
'16 06:00 Z': 0.67357,
'16 06:30 Z': 1.15584,
'16 07:00 Z': 1.31509,
'16 07:30 Z': 0.97326,
'16 08:00 Z': 0.76222,
'16 08:30 Z': 0.7221,
'16 09:00 Z': 0.81658,
'16 09:30 Z': 0.80028,
'16 10:00 Z': 0.54337,
'16 10:30 Z': 0.60803,
'16 11:00 Z': 0.716,
'16 11:30 Z': 0.56769,
'16 12:00 Z': 0.65269,
'16 12:30 Z': 0.74641,
'16 13:00 Z': 0.48541,
'16 13:30 Z': 0.37888,
'16 14:00 Z': 0.42128,
'16 14:30 Z': 0.6013,
'16 15:00 Z': 1.0636,
'16 15:30 Z': 1.11922,
'16 16:00 Z': 1.14007,
'16 16:30 Z': 1.08159,
'16 17:00 Z': 0.70539,
'16 17:30 Z': 0.79596,
'16 18:00 Z': 1.05886,
'16 18:30 Z': 1.58999,
'16 19:00 Z': 1.63383,
'16 19:30 Z': 1.06864,
'16 20:00 Z': 1.10046,
'16 20:30 Z': 1.35822,
'16 21:00 Z': 1.46353,
'16 21:30 Z': 0.2297,
'16 22:00 Z': 0.12695,
'16 22:30 Z': 0.88491,
'16 23:00 Z': 0.98741,
'16 23:30 Z': 1.00038,
'17 00:00 Z': 1.4081,
'17 00:30 Z': 1.31555,
'17 01:00 Z': 1.21976,
'17 01:30 Z': 1.22516,
'17 02:00 Z': 1.12838,
'17 02:30 Z': 1.14401,
'17 03:00 Z': 1.1842,
'17 03:30 Z': 1.18716,
'17 04:00 Z': 1.41283,
'17 04:30 Z': 1.22481,
'17 05:00 Z': 1.37313,
'17 05:30 Z': 1.27484,
'17 06:00 Z': 1.02656,
'17 06:30 Z': 1.4507,
'17 07:00 Z': 1.51868,
'17 07:30 Z': 0.97324,
'17 08:00 Z': 0.79026,
'17 08:30 Z': 0.90652,
'17 09:00 Z': 1.34331,
'17 09:30 Z': 2.08134,
'17 10:00 Z': 2.37333,
'17 10:30 Z': 2.38942,
'17 11:00 Z': 2.62028,
'17 11:30 Z': 1.52968,
'17 12:00 Z': 1.72305,
'17 12:30 Z': 1.83286,
'17 13:00 Z': 1.54627,
'17 13:30 Z': 1.32958,
'17 14:00 Z': 1.4862,
'17 14:30 Z': 1.45625,
'17 15:00 Z': 1.30258,
'17 15:30 Z': 1.50544,
'17 16:00 Z': 1.35804,
'17 16:30 Z': 1.18239,
'17 17:00 Z': 1.04649,
'17 17:30 Z': 1.27412,
'17 18:00 Z': 1.28807,
'17 18:30 Z': 1.69887,
'17 19:00 Z': 1.2322,
'17 19:30 Z': 1.03548,
'17 20:00 Z': 1.00871,
'17 20:30 Z': 1.33448,
'17 21:00 Z': 1.59539,
'17 21:30 Z': 0.79081,
'17 22:00 Z': 0.63932,
'17 22:30 Z': 0.80622,
'17 23:00 Z': 0.68561,
'17 23:30 Z': 0.60584,
'18 00:00 Z': 0.76174,
'18 00:30 Z': 0.70887,
'18 01:00 Z': 0.77509,
'18 01:30 Z': 0.82517,
'18 02:00 Z': 0.88822,
'18 02:30 Z': 0.89792,
'18 03:00 Z': 0.79439,
'18 03:30 Z': 0.58686,
'18 04:00 Z': 1.15409,
'18 04:30 Z': 0.89873,
'18 05:00 Z': 1.27269,
'18 05:30 Z': 1.26152,
'18 06:00 Z': 1.22019,
'18 06:30 Z': 1.50655,
'18 07:00 Z': 1.78337,
'18 07:30 Z': 1.33862,
'18 08:00 Z': 1.20328,
'18 08:30 Z': 1.1238,
'18 09:00 Z': 0.9832,
'18 09:30 Z': 1.12099,
'18 10:00 Z': 1.13914,
'18 10:30 Z': 1.25884,
'18 11:00 Z': 1.26939,
'18 11:30 Z': 1.31372,
'18 12:00 Z': 1.36047,
'18 12:30 Z': 1.42385,
'18 13:00 Z': 1.08694,
'18 13:30 Z': 1.13048,
'18 14:00 Z': 1.0179,
'18 14:30 Z': 1.37941,
'18 15:00 Z': 1.21982,
'18 15:30 Z': 1.35855,
'18 16:00 Z': 1.42204,
'18 16:30 Z': 1.28638,
'18 17:00 Z': 0.91252,
'18 17:30 Z': 1.13664,
'18 18:00 Z': 1.11488,
'18 18:30 Z': 1.28828,
'18 19:00 Z': 1.67281,
'18 19:30 Z': 1.24141,
'18 20:00 Z': 1.25724,
'18 20:30 Z': 1.44077,
'18 21:00 Z': 1.19269,
'18 21:30 Z': 0.62522,
'18 22:00 Z': 0.67897,
'18 22:30 Z': 0.4196,
'18 23:00 Z': 0.39634,
'18 23:30 Z': 0.43668,
'19 00:00 Z': 1.21675,
'19 00:30 Z': 1.28669,
'19 01:00 Z': 1.26064,
'19 01:30 Z': 1.21294,
'19 02:00 Z': 1.57036,
'19 02:30 Z': 1.61895,
'19 03:00 Z': 1.21883,
'19 03:30 Z': 1.13879,
'19 04:00 Z': 1.16619,
'19 04:30 Z': 1.30223,
'19 05:00 Z': 1.45844,
'19 05:30 Z': 1.29573,
'19 06:00 Z': 0.73968,
'19 06:30 Z': 1.39483,
'19 07:00 Z': 1.39438,
'19 07:30 Z': 0.6743,
'19 08:00 Z': 0.81598,
'19 08:30 Z': 0.9687,
'19 09:00 Z': 1.11265,
'19 09:30 Z': 0.95641,
'19 10:00 Z': 0.92253,
'19 10:30 Z': 0.82977,
'19 11:00 Z': 0.78834,
'19 11:30 Z': 0.6344,
'19 12:00 Z': 0.63644,
'19 12:30 Z': 0.49144,
'19 13:00 Z': -0.0091,
'19 13:30 Z': 0.19409,
'19 14:00 Z': 0.11138,
'19 14:30 Z': 0.01374,
'19 15:00 Z': 0.44202,
'19 15:30 Z': 0.67052,
'19 16:00 Z': 0.97121,
'19 16:30 Z': 1.39059,
'19 17:00 Z': 0.93862,
'19 17:30 Z': 0.7734,
'19 18:00 Z': 0.58921,
'19 18:30 Z': 0.78215,
'19 19:00 Z': 0.65165,
'19 19:30 Z': 0.57939,
'19 20:00 Z': 0.85114,
'19 20:30 Z': 0.8802,
'19 21:00 Z': 1.22172,
'19 21:30 Z': 0.4744,
'19 22:00 Z': 0.61278,
'19 22:30 Z': 0.72178,
'19 23:00 Z': 0.70942,
'19 23:30 Z': 0.9861,
'20 00:00 Z': 1.75881,
'20 00:30 Z': 1.8695,
'20 01:00 Z': 1.69517,
'20 01:30 Z': 1.80164,
'20 02:00 Z': 1.96901,
'20 02:30 Z': 2.15613,
'20 03:00 Z': 2.13118,
'20 03:30 Z': 1.67619,
'20 04:00 Z': 1.43223,
'20 04:30 Z': 1.64577,
'20 05:00 Z': 1.83951,
'20 05:30 Z': 1.8544,
'20 06:00 Z': 1.16798,
'20 06:30 Z': 0.97213,
'20 07:00 Z': 1.21296,
'20 07:30 Z': 1.49403,
'20 08:00 Z': 1.45209,
'20 08:30 Z': 1.23917,
'20 09:00 Z': 1.59077,
'20 09:30 Z': 1.38541,
'20 10:00 Z': 1.11562,
'20 10:30 Z': 1.03407,
'20 11:00 Z': 0.99578,
'20 11:30 Z': 1.0437,
'20 12:00 Z': 1.00962,
'20 12:30 Z': 0.72565,
'20 13:00 Z': 0.42897,
'20 13:30 Z': 0.30533,
'20 14:00 Z': 0.48785,
'20 14:30 Z': 0.29343,
'20 15:00 Z': 0.32691,
'20 15:30 Z': 0.40746,
'20 16:00 Z': 0.4724,
'20 16:30 Z': 0.37769,
'20 17:00 Z': 0.32596,
'20 17:30 Z': 0.21116,
'20 18:00 Z': 0.3282,
'20 18:30 Z': 0.45004,
'20 19:00 Z': 0.86033,
'20 19:30 Z': 0.68798,
'20 20:00 Z': 0.69431,
'20 20:30 Z': 1.11816,
'20 21:00 Z': 1.49226,
'20 21:30 Z': 0.6252,
'20 22:00 Z': 0.93254,
'20 22:30 Z': 1.40693,
'20 23:00 Z': 1.64349,
'20 23:30 Z': 1.65405,
'21 00:00 Z': 1.54063,
'21 00:30 Z': 1.57074,
'21 01:00 Z': 1.50144,
'21 01:30 Z': 1.50431,
'21 02:00 Z': 1.74146,
'21 02:30 Z': 1.63289,
'21 03:00 Z': 1.3722,
'21 03:30 Z': 0.87955,
'21 04:00 Z': 0.96884,
'21 04:30 Z': 1.17373,
'21 05:00 Z': 0.72426,
'21 05:30 Z': 0.50324,
'21 06:00 Z': 0.91236,
'21 06:30 Z': 1.51931,
'21 07:00 Z': 1.33817,
'21 07:30 Z': 1.05306,
'21 08:00 Z': 1.3047,
'21 08:30 Z': 1.40657,
'21 09:00 Z': 1.89144,
'21 09:30 Z': 1.43206,
'21 10:00 Z': 1.66685,
'21 10:30 Z': 1.3815,
'21 11:00 Z': 1.27712,
'21 11:30 Z': 1.06451,
'21 12:00 Z': 1.96697,
'21 12:30 Z': 2.12115,
'21 13:00 Z': 1.41844,
'21 13:30 Z': 1.35505,
'21 14:00 Z': 0.79072,
'21 14:30 Z': 1.02442,
'21 15:00 Z': 1.47691,
'21 15:30 Z': 1.31947,
'21 16:00 Z': 1.24417,
'21 16:30 Z': 0.99077,
'21 17:00 Z': 0.24979,
'21 17:30 Z': 0.3114,
'21 18:00 Z': 0.18003,
'21 18:30 Z': 0.77479,
'21 19:00 Z': 1.21186,
'21 19:30 Z': 0.79044,
'21 20:00 Z': 0.71816,
'21 20:30 Z': 0.91785,
'21 21:00 Z': 0.62327,
'21 21:30 Z': 0.17927,
'21 22:00 Z': 0.60633,
'21 22:30 Z': 0.63034,
'21 23:00 Z': 0.73659,
'21 23:30 Z': 0.6204,
'22 00:00 Z': 0.66069,
'22 00:30 Z': 0.64256,
'22 01:00 Z': 0.51601,
'22 01:30 Z': 0.39375,
'22 02:00 Z': 0.61007,
'22 02:30 Z': 0.56862,
'22 03:00 Z': 0.50398,
'22 03:30 Z': 0.70229,
'22 04:00 Z': 0.68009,
'22 04:30 Z': 0.4963,
'22 05:00 Z': 0.72782,
'22 05:30 Z': 0.81327,
'22 06:00 Z': 0.52907,
'22 06:30 Z': 0.86014,
'22 07:00 Z': 0.81885,
'22 07:30 Z': 0.61868,
'22 08:00 Z': 0.64284,
'22 08:30 Z': 0.71478,
'22 09:00 Z': 0.83961,
'22 09:30 Z': 0.83908,
'22 10:00 Z': 0.9223,
'22 10:30 Z': 1.48917,
'22 11:00 Z': 1.47566,
'22 11:30 Z': 0.74011,
'22 12:00 Z': 0.73521,
'22 12:30 Z': 0.55168,
'22 13:00 Z': 0.24853,
'22 13:30 Z': 0.23181,
'22 14:00 Z': 0.0847,
'22 14:30 Z': 0.39491,
'22 15:00 Z': 0.7867,
'22 15:30 Z': 0.90448,
'22 16:00 Z': 0.88628,
'22 16:30 Z': 1.06688,
'22 17:00 Z': 1.05135,
'22 17:30 Z': 1.49347,
'22 18:00 Z': 1.69303,
'22 18:30 Z': 1.8331,
'22 19:00 Z': 1.60508,
'22 19:30 Z': 1.5959,
'22 20:00 Z': 1.58512,
'22 20:30 Z': 1.72431,
'22 21:00 Z': 1.90736,
'22 21:30 Z': 1.32368,
'22 22:00 Z': 1.26908,
'22 22:30 Z': 0.77209,
'22 23:00 Z': 0.76006,
'22 23:30 Z': 0.71276,
'23 00:00 Z': 0.9818,
'23 00:30 Z': 1.00655,
'23 01:00 Z': 0.88359,
'23 01:30 Z': 0.8852,
'23 02:00 Z': 1.09993,
'23 02:30 Z': 0.98526,
'23 03:00 Z': 0.96388,
'23 03:30 Z': 0.72349,
'23 04:00 Z': 1.00202,
'23 04:30 Z': 0.79339,
'23 05:00 Z': 1.19917,
'23 05:30 Z': 1.29761,
'23 06:00 Z': 1.35432,
'23 06:30 Z': 1.69908,
'23 07:00 Z': 1.33173,
'23 07:30 Z': 1.10879,
'23 08:00 Z': 1.25306,
'23 08:30 Z': 1.66314,
'23 09:00 Z': 1.17595,
'23 09:30 Z': 0.91602,
'23 10:00 Z': 1.02008,
'23 10:30 Z': 1.07469,
'23 11:00 Z': 0.90352,
'23 11:30 Z': 0.95907,
'23 12:00 Z': 1.18317,
'23 12:30 Z': 0.92098,
'23 13:00 Z': 0.71024,
'23 13:30 Z': 0.5797,
'23 14:00 Z': 0.38347,
'23 14:30 Z': 1.23461,
'23 15:00 Z': 0.60264,
'23 15:30 Z': 0.22687,
'23 16:00 Z': 1.1062,
'23 16:30 Z': 0.9091,
'23 17:00 Z': 0.33836,
'23 17:30 Z': 0.51692,
'23 18:00 Z': 0.85142,
'23 18:30 Z': 1.26012,
'23 19:00 Z': 1.3683,
'23 19:30 Z': 0.88993,
'23 20:00 Z': 1.16089,
'23 20:30 Z': 1.44923,
'23 21:00 Z': 1.26162,
'23 21:30 Z': 0.34002,
'23 22:00 Z': 0.71785,
'23 22:30 Z': 0.85619,
'23 23:00 Z': 0.70875,
'23 23:30 Z': 0.73408,
'24 00:00 Z': 0.87439,
'24 00:30 Z': 0.78685,
'24 01:00 Z': 0.7837,
'24 01:30 Z': 0.67414,
'24 02:00 Z': 0.79153,
'24 02:30 Z': 0.93522,
'24 03:00 Z': 0.93122,
'24 03:30 Z': 1.00111,
'24 04:00 Z': 1.15044,
'24 04:30 Z': 1.64051,
'24 05:00 Z': 1.8874,
'24 05:30 Z': 1.58784,
'24 06:00 Z': 2.01659,
'24 06:30 Z': 1.80985,
'24 07:00 Z': 2.42596,
'24 07:30 Z': 2.12072,
'24 08:00 Z': 1.7437,
'24 08:30 Z': 1.80586,
'24 09:00 Z': 1.19511,
'24 09:30 Z': 0.96144,
'24 10:00 Z': 1.17411,
'24 10:30 Z': 0.89419,
'24 11:00 Z': 0.7544,
'24 11:30 Z': 0.46288,
'24 12:00 Z': 0.64877,
'24 12:30 Z': 0.72062,
'24 13:00 Z': 0.56086,
'24 13:30 Z': 0.51886,
'24 14:00 Z': 0.64669,
'24 14:30 Z': 0.72806,
'24 15:00 Z': 0.97466,
'24 15:30 Z': 1.11488,
'24 16:00 Z': 1.44672,
'24 16:30 Z': 1.34454,
'24 17:00 Z': 0.69431,
'24 17:30 Z': 1.2051,
'24 18:00 Z': 1.11707,
'24 18:30 Z': 1.47365,
'24 19:00 Z': 1.70952,
'24 19:30 Z': 1.13437,
'24 20:00 Z': 1.5468,
'24 20:30 Z': 1.39187,
'24 21:00 Z': 1.29258,
'24 21:30 Z': 0.55795,
'24 22:00 Z': 1.06119,
'24 22:30 Z': 1.14477,
'24 23:00 Z': 1.31474,
'24 23:30 Z': 1.35318,
'25 00:00 Z': 1.57751,
'25 00:30 Z': 1.23654,
'25 01:00 Z': 1.17312,
'25 01:30 Z': 1.15491,
'25 02:00 Z': 1.18126,
'25 02:30 Z': 1.20466,
'25 03:00 Z': 0.96003,
'25 03:30 Z': 0.66271,
'25 04:00 Z': 1.1697,
'25 04:30 Z': 1.13615,
'25 05:00 Z': 1.1685,
'25 05:30 Z': 0.77826,
'25 06:00 Z': 0.70662,
'25 06:30 Z': 1.12499,
'25 07:00 Z': 1.16643,
'25 07:30 Z': 0.95255,
'25 08:00 Z': 0.94539,
'25 08:30 Z': 0.89249,
'25 09:00 Z': 0.75318,
'25 09:30 Z': 0.87002,
'25 10:00 Z': 1.10857,
'25 10:30 Z': 1.14023,
'25 11:00 Z': 1.05525,
'25 11:30 Z': 0.92561,
'25 12:00 Z': 0.87118,
'25 12:30 Z': 0.91482,
'25 13:00 Z': 0.51019,
'25 13:30 Z': 0.51218,
'25 14:00 Z': 0.28515,
'25 14:30 Z': 0.35709,
'25 15:00 Z': 0.88386,
'25 15:30 Z': 0.89178,
'25 16:00 Z': 1.0209,
'25 16:30 Z': 1.089,
'25 17:00 Z': 0.84834,
'25 17:30 Z': 0.78253,
'25 18:00 Z': 0.772,
'25 18:30 Z': 1.48423,
'25 19:00 Z': 1.6112,
'25 19:30 Z': 1.05284,
'25 20:00 Z': 1.5551,
'25 20:30 Z': 1.31055,
'25 21:00 Z': 1.60654,
'25 21:30 Z': 0.80443,
'25 22:00 Z': 0.85079,
'25 22:30 Z': 1.38378,
'25 23:00 Z': 1.7462,
'25 23:30 Z': 1.87552,
'26 00:00 Z': 2.70332,
'26 00:30 Z': 2.26078,
'26 01:00 Z': 1.91663,
'26 01:30 Z': 1.93375,
'26 02:00 Z': 2.04581,
'26 02:30 Z': 2.05772,
'26 03:00 Z': 1.84317,
'26 03:30 Z': 1.44704,
'26 04:00 Z': 1.52628,
'26 04:30 Z': 1.70705,
'26 05:00 Z': 1.92891,
'26 05:30 Z': 1.62239,
'26 06:00 Z': 1.41253,
'26 06:30 Z': 1.69607,
'26 07:00 Z': 1.964,
'26 07:30 Z': 1.84954,
'26 08:00 Z': 2.72372,
'26 08:30 Z': 2.97111,
'26 09:00 Z': 2.64977,
'26 09:30 Z': 2.32821,
'26 10:00 Z': 1.56844,
'26 10:30 Z': 1.29208,
'26 11:00 Z': 1.16021,
'26 11:30 Z': 1.16183,
'26 12:00 Z': 1.19989,
'26 12:30 Z': 0.73096,
'26 13:00 Z': 0.28942,
'26 13:30 Z': 0.13644,
'26 14:00 Z': 0.20409,
'26 14:30 Z': 0.36214,
'26 15:00 Z': 0.94354,
'26 15:30 Z': 1.18341,
'26 16:00 Z': 1.33326,
'26 16:30 Z': 1.30147,
'26 17:00 Z': 0.7023,
'26 17:30 Z': 0.57202,
'26 18:00 Z': 1.16561,
'26 18:30 Z': 1.53592,
'26 19:00 Z': 1.3678,
'26 19:30 Z': 0.91986,
'26 20:00 Z': 1.03515,
'26 20:30 Z': 1.62568,
'26 21:00 Z': 3.52339,
'26 21:30 Z': 2.77094,
'26 22:00 Z': 2.36627,
'26 22:30 Z': 1.86055,
'26 23:00 Z': 1.63569,
'26 23:30 Z': 1.72538,
'27 00:00 Z': 1.72221,
'27 00:30 Z': 2.38151,
'27 01:00 Z': 2.52891,
'27 01:30 Z': 2.43675,
'27 02:00 Z': 2.75731,
'27 02:30 Z': 3.01388,
'27 03:00 Z': 2.78713,
'27 03:30 Z': 2.06384,
'27 04:00 Z': 1.89912,
'27 04:30 Z': 2.24483,
'27 05:00 Z': 2.49447,
'27 05:30 Z': 2.81456,
'27 06:00 Z': 2.16281,
'27 06:30 Z': 2.43656,
'27 07:00 Z': 2.18668,
'27 07:30 Z': 1.97584,
'27 08:00 Z': 1.41754,
'27 08:30 Z': 1.66636,
'27 09:00 Z': 2.32158,
'27 09:30 Z': 2.55042,
'27 10:00 Z': 2.71515,
'27 10:30 Z': 2.55842,
'27 11:00 Z': 2.54296,
'27 11:30 Z': 2.41461,
'27 12:00 Z': 2.32301,
'27 12:30 Z': 1.84654,
'27 13:00 Z': 1.80096,
'27 13:30 Z': 1.39143,
'27 14:00 Z': 1.43888,
'27 14:30 Z': 2.8129,
'27 15:00 Z': 1.9549,
'27 15:30 Z': 2.12056,
'27 16:00 Z': 1.62186,
'27 16:30 Z': 1.44234,
'27 17:00 Z': 1.05195,
'27 17:30 Z': 0.844,
'27 18:00 Z': 1.07296,
'27 18:30 Z': 2.01962,
'27 19:00 Z': 1.86676,
'27 19:30 Z': 1.57599,
'27 20:00 Z': 1.81558,
'27 20:30 Z': 2.12826,
'27 21:00 Z': 2.70263,
'27 21:30 Z': 1.40341,
'27 22:00 Z': 1.1843,
'27 22:30 Z': 1.46134,
'27 23:00 Z': 1.98859,
'27 23:30 Z': 1.76196,
'28 00:00 Z': 1.8198,
'28 00:30 Z': 1.77738,
'28 01:00 Z': 1.76475,
'28 01:30 Z': 1.66989,
'28 02:00 Z': 1.85164,
'28 02:30 Z': 1.95671,
'28 03:00 Z': 1.89193,
'28 03:30 Z': 1.73135,
'28 04:00 Z': 1.98983,
'28 04:30 Z': 1.81045,
'28 05:00 Z': 2.17912,
'28 05:30 Z': 1.9997,
'28 06:00 Z': 1.63917,
'28 06:30 Z': 1.89178,
'28 07:00 Z': 1.71348,
'28 07:30 Z': 1.58007,
'28 08:00 Z': 1.6073,
'28 08:30 Z': 1.67646,
'28 09:00 Z': 1.50621,
'28 09:30 Z': 1.45618,
'28 10:00 Z': 1.45947,
'28 10:30 Z': 1.5756,
'28 11:00 Z': 1.85319,
'28 11:30 Z': 1.28444,
'28 12:00 Z': 1.15705,
'28 12:30 Z': 1.07619,
'28 13:00 Z': 0.94649,
'28 13:30 Z': 1.63791,
'28 14:00 Z': 1.36386,
'28 14:30 Z': 1.65182,
'28 15:00 Z': 2.52511,
'28 15:30 Z': 2.23485,
'28 16:00 Z': 1.56483,
'28 16:30 Z': 1.27244,
'28 17:00 Z': 1.23151,
'28 17:30 Z': 1.96323,
'28 18:00 Z': 1.61489,
'28 18:30 Z': 2.14595,
'28 19:00 Z': 1.95969,
'28 19:30 Z': 1.95304,
'28 20:00 Z': 2.74735,
'28 20:30 Z': 2.62065,
'28 21:00 Z': 2.60599,
'28 21:30 Z': 1.29189,
'28 22:00 Z': 1.61772,
'28 22:30 Z': 1.36098,
'28 23:00 Z': 1.40174,
'28 23:30 Z': 1.57254,
'29 00:00 Z': 1.82376,
'29 00:30 Z': 1.7671,
'29 01:00 Z': 1.6432,
'29 01:30 Z': 1.4033,
'29 02:00 Z': 1.43116,
'29 02:30 Z': 1.24592,
'29 03:00 Z': 1.33311,
'29 03:30 Z': 1.0863,
'29 04:00 Z': 0.97194,
'29 04:30 Z': 0.9051,
'29 05:00 Z': 1.20353,
'29 05:30 Z': 1.45612,
'29 06:00 Z': 1.44278,
'29 06:30 Z': 1.36439,
'29 07:00 Z': 1.40179,
'29 07:30 Z': 1.20376,
'29 08:00 Z': 1.18714,
'29 08:30 Z': 1.11437,
'29 09:00 Z': 1.20986,
'29 09:30 Z': 1.56696,
'29 10:00 Z': 1.77557,
'29 10:30 Z': 2.06896,
'29 11:00 Z': 2.12792,
'29 11:30 Z': 2.0195,
'29 12:00 Z': 2.0867,
'29 12:30 Z': 2.13172,
'29 13:00 Z': 1.78777,
'29 13:30 Z': 1.24184,
'29 14:00 Z': 1.3124,
'29 14:30 Z': 1.07429,
'29 15:00 Z': 1.27766,
'29 15:30 Z': 1.14291,
'29 16:00 Z': 1.10598,
'29 16:30 Z': 0.90133,
'29 17:00 Z': 1.32722,
'29 17:30 Z': 1.62733,
'29 18:00 Z': 1.02892,
'29 18:30 Z': 2.18917,
'29 19:00 Z': 1.81816,
'29 19:30 Z': 1.10906,
'29 20:00 Z': 1.22332,
'29 20:30 Z': 1.70692,
'29 21:00 Z': 1.50604,
'29 21:30 Z': 0.92232,
'29 22:00 Z': 0.9458,
'29 22:30 Z': 0.84963,
'29 23:00 Z': 1.34819,
'29 23:30 Z': 1.30133,
'30 00:00 Z': 1.39732,
'30 00:30 Z': 1.39626,
'30 01:00 Z': 1.43022,
'30 01:30 Z': 1.40915,
'30 02:00 Z': 1.49111,
'30 02:30 Z': 1.53095,
'30 03:00 Z': 1.5122,
'30 03:30 Z': 1.31196,
'30 04:00 Z': 1.16923,
'30 04:30 Z': 0.94106,
'30 05:00 Z': 1.17569,
'30 05:30 Z': 0.9942,
'30 06:00 Z': 1.37358,
'30 06:30 Z': 1.66139,
'30 07:00 Z': 1.66957,
'30 07:30 Z': 1.34705,
'30 08:00 Z': 1.20971,
'30 08:30 Z': 1.16884,
'30 09:00 Z': 1.13569,
'30 09:30 Z': 0.94133,
'30 10:00 Z': 0.82817,
'30 10:30 Z': 0.75443,
'30 11:00 Z': 0.68195,
'30 11:30 Z': 0.7493,
'30 12:00 Z': 0.75419,
'30 12:30 Z': 0.66822,
'30 13:00 Z': 0.67984,
'30 13:30 Z': 0.73864,
'30 14:00 Z': 0.48666,
'30 14:30 Z': 0.65902,
'30 15:00 Z': 1.30084,
'30 15:30 Z': 1.48855,
'30 16:00 Z': 1.43375,
'30 16:30 Z': 1.37822,
'30 17:00 Z': 1.15697,
'30 17:30 Z': 1.74051,
'30 18:00 Z': 1.2477,
'30 18:30 Z': 1.7218,
'30 19:00 Z': 1.49263,
'30 19:30 Z': 1.20507,
'30 20:00 Z': 2.1937,
'30 20:30 Z': 1.67581,
'30 21:00 Z': 1.63012,
'30 21:30 Z': 0.71837,
'30 22:00 Z': 0.9855,
'30 22:30 Z': 1.2393,
'30 23:00 Z': 1.13458,
'30 23:30 Z': 1.10703}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bsuos]]></value>
        <value><![CDATA[157]]></value>
        <value><![CDATA[2010-07-01T00:00Z]]></value>
        <value><![CDATA[def rates_gbp_per_mwh():
    return {
'01 00:00 Z': 1.17926,
'01 00:30 Z': 1.39199,
'01 01:00 Z': 1.24313,
'01 01:30 Z': 1.04369,
'01 02:00 Z': 1.06037,
'01 02:30 Z': 1.07257,
'01 03:00 Z': 1.15111,
'01 03:30 Z': 0.98283,
'01 04:00 Z': 1.23169,
'01 04:30 Z': 1.30987,
'01 05:00 Z': 1.36252,
'01 05:30 Z': 1.62788,
'01 06:00 Z': 1.27248,
'01 06:30 Z': 1.20162,
'01 07:00 Z': 0.86696,
'01 07:30 Z': 0.87178,
'01 08:00 Z': 0.73139,
'01 08:30 Z': 0.74818,
'01 09:00 Z': 0.70159,
'01 09:30 Z': 0.76382,
'01 10:00 Z': 0.74112,
'01 10:30 Z': 0.74162,
'01 11:00 Z': 0.76999,
'01 11:30 Z': 1.36326,
'01 12:00 Z': 1.81577,
'01 12:30 Z': 1.2986,
'01 13:00 Z': 0.94044,
'01 13:30 Z': 1.57636,
'01 14:00 Z': 1.38719,
'01 14:30 Z': 1.70692,
'01 15:00 Z': 1.65766,
'01 15:30 Z': 1.64271,
'01 16:00 Z': 1.73215,
'01 16:30 Z': 1.36697,
'01 17:00 Z': 0.94767,
'01 17:30 Z': 1.32267,
'01 18:00 Z': 1.14294,
'01 18:30 Z': 2.14891,
'01 19:00 Z': 1.86035,
'01 19:30 Z': 1.54916,
'01 20:00 Z': 2.20945,
'01 20:30 Z': 2.52201,
'01 21:00 Z': 2.44456,
'01 21:30 Z': 1.49636,
'01 22:00 Z': 1.1539,
'01 22:30 Z': 1.59281,
'01 23:00 Z': 1.67189,
'01 23:30 Z': 1.7891,
'02 00:00 Z': 1.96285,
'02 00:30 Z': 1.99747,
'02 01:00 Z': 1.89735,
'02 01:30 Z': 1.75013,
'02 02:00 Z': 1.63944,
'02 02:30 Z': 1.7532,
'02 03:00 Z': 1.55486,
'02 03:30 Z': 1.28122,
'02 04:00 Z': 2.14562,
'02 04:30 Z': 1.91044,
'02 05:00 Z': 2.07322,
'02 05:30 Z': 2.6938,
'02 06:00 Z': 2.09642,
'02 06:30 Z': 2.2242,
'02 07:00 Z': 2.13784,
'02 07:30 Z': 2.64265,
'02 08:00 Z': 3.0873,
'02 08:30 Z': 3.51722,
'02 09:00 Z': 3.13226,
'02 09:30 Z': 2.92739,
'02 10:00 Z': 2.10152,
'02 10:30 Z': 1.64792,
'02 11:00 Z': 1.5892,
'02 11:30 Z': 1.58183,
'02 12:00 Z': 2.11316,
'02 12:30 Z': 1.77308,
'02 13:00 Z': 1.33497,
'02 13:30 Z': 1.04931,
'02 14:00 Z': 1.42595,
'02 14:30 Z': 2.2126,
'02 15:00 Z': 2.48034,
'02 15:30 Z': 1.99751,
'02 16:00 Z': 1.96868,
'02 16:30 Z': 2.05295,
'02 17:00 Z': 1.88515,
'02 17:30 Z': 2.20008,
'02 18:00 Z': 2.1325,
'02 18:30 Z': 2.86453,
'02 19:00 Z': 2.64136,
'02 19:30 Z': 2.40736,
'02 20:00 Z': 2.71507,
'02 20:30 Z': 3.12103,
'02 21:00 Z': 3.53639,
'02 21:30 Z': 3.18358,
'02 22:00 Z': 2.45107,
'02 22:30 Z': 2.20917,
'02 23:00 Z': 1.77522,
'02 23:30 Z': 1.58947,
'03 00:00 Z': 1.37291,
'03 00:30 Z': 1.32548,
'03 01:00 Z': 1.57669,
'03 01:30 Z': 1.76644,
'03 02:00 Z': 1.84228,
'03 02:30 Z': 1.72928,
'03 03:00 Z': 1.80915,
'03 03:30 Z': 1.58067,
'03 04:00 Z': 1.29148,
'03 04:30 Z': 1.33332,
'03 05:00 Z': 1.81618,
'03 05:30 Z': 1.98677,
'03 06:00 Z': 0.88998,
'03 06:30 Z': 1.55135,
'03 07:00 Z': 2.08934,
'03 07:30 Z': 2.45269,
'03 08:00 Z': 2.82394,
'03 08:30 Z': 2.81641,
'03 09:00 Z': 2.05485,
'03 09:30 Z': 1.82378,
'03 10:00 Z': 1.83516,
'03 10:30 Z': 1.70622,
'03 11:00 Z': 1.60994,
'03 11:30 Z': 1.51377,
'03 12:00 Z': 1.60357,
'03 12:30 Z': 1.41678,
'03 13:00 Z': 0.83859,
'03 13:30 Z': 0.76696,
'03 14:00 Z': 0.95386,
'03 14:30 Z': 1.13784,
'03 15:00 Z': 1.35908,
'03 15:30 Z': 1.31764,
'03 16:00 Z': 1.44799,
'03 16:30 Z': 1.46891,
'03 17:00 Z': 1.10704,
'03 17:30 Z': 1.2041,
'03 18:00 Z': 1.41537,
'03 18:30 Z': 1.65289,
'03 19:00 Z': 2.00616,
'03 19:30 Z': 2.00203,
'03 20:00 Z': 2.71562,
'03 20:30 Z': 3.02099,
'03 21:00 Z': 3.43062,
'03 21:30 Z': 2.36668,
'03 22:00 Z': 1.50314,
'03 22:30 Z': 0.93524,
'03 23:00 Z': 1.7189,
'03 23:30 Z': 1.62003,
'04 00:00 Z': 2.13777,
'04 00:30 Z': 2.20413,
'04 01:00 Z': 2.73543,
'04 01:30 Z': 2.751,
'04 02:00 Z': 2.933,
'04 02:30 Z': 2.37123,
'04 03:00 Z': 2.00412,
'04 03:30 Z': 1.18538,
'04 04:00 Z': 0.89208,
'04 04:30 Z': 0.85556,
'04 05:00 Z': 1.26668,
'04 05:30 Z': 1.22111,
'04 06:00 Z': 0.94472,
'04 06:30 Z': 1.11519,
'04 07:00 Z': 1.1301,
'04 07:30 Z': 1.30307,
'04 08:00 Z': 1.1937,
'04 08:30 Z': 1.44761,
'04 09:00 Z': 1.49698,
'04 09:30 Z': 1.68017,
'04 10:00 Z': 1.73873,
'04 10:30 Z': 1.79806,
'04 11:00 Z': 2.00849,
'04 11:30 Z': 1.85584,
'04 12:00 Z': 1.67731,
'04 12:30 Z': 1.36342,
'04 13:00 Z': 1.31782,
'04 13:30 Z': 1.49461,
'04 14:00 Z': 1.86701,
'04 14:30 Z': 1.82063,
'04 15:00 Z': 1.53308,
'04 15:30 Z': 2.22987,
'04 16:00 Z': 2.08521,
'04 16:30 Z': 1.88085,
'04 17:00 Z': 1.89888,
'04 17:30 Z': 1.88846,
'04 18:00 Z': 1.93755,
'04 18:30 Z': 2.15981,
'04 19:00 Z': 1.98008,
'04 19:30 Z': 1.79236,
'04 20:00 Z': 1.98331,
'04 20:30 Z': 2.195,
'04 21:00 Z': 2.25401,
'04 21:30 Z': 1.18818,
'04 22:00 Z': 1.87006,
'04 22:30 Z': 1.98862,
'04 23:00 Z': 1.79432,
'04 23:30 Z': 1.98418,
'05 00:00 Z': 2.19982,
'05 00:30 Z': 2.38927,
'05 01:00 Z': 2.34849,
'05 01:30 Z': 2.1559,
'05 02:00 Z': 2.30348,
'05 02:30 Z': 2.34265,
'05 03:00 Z': 2.14726,
'05 03:30 Z': 1.83375,
'05 04:00 Z': 2.20601,
'05 04:30 Z': 2.33696,
'05 05:00 Z': 2.30679,
'05 05:30 Z': 2.14092,
'05 06:00 Z': 1.95812,
'05 06:30 Z': 2.17459,
'05 07:00 Z': 1.63536,
'05 07:30 Z': 1.50498,
'05 08:00 Z': 2.40905,
'05 08:30 Z': 2.22996,
'05 09:00 Z': 2.12594,
'05 09:30 Z': 1.8266,
'05 10:00 Z': 1.7867,
'05 10:30 Z': 1.94258,
'05 11:00 Z': 1.62167,
'05 11:30 Z': 1.44035,
'05 12:00 Z': 1.40301,
'05 12:30 Z': 1.39024,
'05 13:00 Z': 1.11305,
'05 13:30 Z': 1.28027,
'05 14:00 Z': 1.55097,
'05 14:30 Z': 2.23924,
'05 15:00 Z': 2.3686,
'05 15:30 Z': 2.31109,
'05 16:00 Z': 2.67515,
'05 16:30 Z': 2.28563,
'05 17:00 Z': 0.95254,
'05 17:30 Z': 1.15948,
'05 18:00 Z': 1.15752,
'05 18:30 Z': 1.94842,
'05 19:00 Z': 1.66035,
'05 19:30 Z': 1.57258,
'05 20:00 Z': 1.83193,
'05 20:30 Z': 2.00729,
'05 21:00 Z': 2.7001,
'05 21:30 Z': 1.77886,
'05 22:00 Z': 1.10801,
'05 22:30 Z': 1.02205,
'05 23:00 Z': 0.86674,
'05 23:30 Z': 0.83115,
'06 00:00 Z': 1.24116,
'06 00:30 Z': 1.07763,
'06 01:00 Z': 1.15428,
'06 01:30 Z': 1.01491,
'06 02:00 Z': 1.20444,
'06 02:30 Z': 1.24214,
'06 03:00 Z': 1.48538,
'06 03:30 Z': 0.88979,
'06 04:00 Z': 1.44734,
'06 04:30 Z': 1.28341,
'06 05:00 Z': 1.57899,
'06 05:30 Z': 1.70813,
'06 06:00 Z': 1.02499,
'06 06:30 Z': 1.03984,
'06 07:00 Z': 0.98892,
'06 07:30 Z': 0.69719,
'06 08:00 Z': 0.77676,
'06 08:30 Z': 0.73751,
'06 09:00 Z': 0.69676,
'06 09:30 Z': 1.05421,
'06 10:00 Z': 0.90181,
'06 10:30 Z': 0.75964,
'06 11:00 Z': 0.86803,
'06 11:30 Z': 0.81099,
'06 12:00 Z': 0.70421,
'06 12:30 Z': 0.87067,
'06 13:00 Z': 0.72974,
'06 13:30 Z': 0.49353,
'06 14:00 Z': 0.05364,
'06 14:30 Z': 0.14386,
'06 15:00 Z': 0.82493,
'06 15:30 Z': 0.80848,
'06 16:00 Z': 1.02462,
'06 16:30 Z': 0.47755,
'06 17:00 Z': -0.11286,
'06 17:30 Z': 0.21955,
'06 18:00 Z': 0.61084,
'06 18:30 Z': 0.97262,
'06 19:00 Z': 1.36155,
'06 19:30 Z': 0.97491,
'06 20:00 Z': 1.06098,
'06 20:30 Z': 1.77969,
'06 21:00 Z': 1.49533,
'06 21:30 Z': 0.73901,
'06 22:00 Z': 1.12842,
'06 22:30 Z': 1.81253,
'06 23:00 Z': 1.78216,
'06 23:30 Z': 1.92072,
'07 00:00 Z': 2.2762,
'07 00:30 Z': 1.87637,
'07 01:00 Z': 1.74316,
'07 01:30 Z': 1.50544,
'07 02:00 Z': 1.59895,
'07 02:30 Z': 1.77536,
'07 03:00 Z': 1.61787,
'07 03:30 Z': 1.41769,
'07 04:00 Z': 1.84266,
'07 04:30 Z': 1.89973,
'07 05:00 Z': 2.43164,
'07 05:30 Z': 2.95691,
'07 06:00 Z': 2.0002,
'07 06:30 Z': 1.65369,
'07 07:00 Z': 1.48368,
'07 07:30 Z': 1.52491,
'07 08:00 Z': 1.70916,
'07 08:30 Z': 1.21382,
'07 09:00 Z': 1.66957,
'07 09:30 Z': 1.46966,
'07 10:00 Z': 1.52903,
'07 10:30 Z': 1.83712,
'07 11:00 Z': 2.40413,
'07 11:30 Z': 1.38754,
'07 12:00 Z': 1.79361,
'07 12:30 Z': 1.5222,
'07 13:00 Z': 1.24462,
'07 13:30 Z': 1.66252,
'07 14:00 Z': 1.72291,
'07 14:30 Z': 1.88796,
'07 15:00 Z': 2.59247,
'07 15:30 Z': 2.50459,
'07 16:00 Z': 2.30293,
'07 16:30 Z': 1.81372,
'07 17:00 Z': 1.11339,
'07 17:30 Z': 1.40781,
'07 18:00 Z': 2.15608,
'07 18:30 Z': 2.82545,
'07 19:00 Z': 2.64999,
'07 19:30 Z': 2.22249,
'07 20:00 Z': 2.2098,
'07 20:30 Z': 3.32875,
'07 21:00 Z': 3.15843,
'07 21:30 Z': 1.89229,
'07 22:00 Z': 2.24119,
'07 22:30 Z': 2.21816,
'07 23:00 Z': 2.03018,
'07 23:30 Z': 1.54282,
'08 00:00 Z': 1.32798,
'08 00:30 Z': 1.8781,
'08 01:00 Z': 1.96522,
'08 01:30 Z': 1.39864,
'08 02:00 Z': 1.64763,
'08 02:30 Z': 1.78506,
'08 03:00 Z': 1.67504,
'08 03:30 Z': 1.51324,
'08 04:00 Z': 2.40839,
'08 04:30 Z': 2.26621,
'08 05:00 Z': 2.65315,
'08 05:30 Z': 2.72104,
'08 06:00 Z': 3.77405,
'08 06:30 Z': 4.25322,
'08 07:00 Z': 2.71946,
'08 07:30 Z': 2.52159,
'08 08:00 Z': 2.8725,
'08 08:30 Z': 2.49355,
'08 09:00 Z': 2.64238,
'08 09:30 Z': 2.23973,
'08 10:00 Z': 2.20895,
'08 10:30 Z': 2.50444,
'08 11:00 Z': 3.12438,
'08 11:30 Z': 2.80674,
'08 12:00 Z': 3.09408,
'08 12:30 Z': 3.36085,
'08 13:00 Z': 4.0666,
'08 13:30 Z': 3.68107,
'08 14:00 Z': 3.13034,
'08 14:30 Z': 3.097,
'08 15:00 Z': 3.06978,
'08 15:30 Z': 3.81009,
'08 16:00 Z': 3.65722,
'08 16:30 Z': 3.06645,
'08 17:00 Z': 2.52453,
'08 17:30 Z': 2.45304,
'08 18:00 Z': 3.0783,
'08 18:30 Z': 3.78665,
'08 19:00 Z': 3.02513,
'08 19:30 Z': 2.70791,
'08 20:00 Z': 2.99901,
'08 20:30 Z': 3.24802,
'08 21:00 Z': 3.23808,
'08 21:30 Z': 1.84737,
'08 22:00 Z': 3.52429,
'08 22:30 Z': 3.24348,
'08 23:00 Z': 2.49392,
'08 23:30 Z': 2.57911,
'09 00:00 Z': 2.35821,
'09 00:30 Z': 2.22987,
'09 01:00 Z': 2.02411,
'09 01:30 Z': 1.98784,
'09 02:00 Z': 2.04885,
'09 02:30 Z': 1.89292,
'09 03:00 Z': 1.7672,
'09 03:30 Z': 1.63385,
'09 04:00 Z': 1.73591,
'09 04:30 Z': 1.64038,
'09 05:00 Z': 2.20879,
'09 05:30 Z': 2.54239,
'09 06:00 Z': 2.80273,
'09 06:30 Z': 3.25949,
'09 07:00 Z': 3.79732,
'09 07:30 Z': 4.36472,
'09 08:00 Z': 3.64487,
'09 08:30 Z': 2.05375,
'09 09:00 Z': 2.54267,
'09 09:30 Z': 2.50219,
'09 10:00 Z': 2.51893,
'09 10:30 Z': 2.55117,
'09 11:00 Z': 2.30725,
'09 11:30 Z': 2.34258,
'09 12:00 Z': 2.14769,
'09 12:30 Z': 1.9469,
'09 13:00 Z': 1.36143,
'09 13:30 Z': 1.61528,
'09 14:00 Z': 1.94929,
'09 14:30 Z': 1.67819,
'09 15:00 Z': 2.04432,
'09 15:30 Z': 2.93065,
'09 16:00 Z': 2.0987,
'09 16:30 Z': 1.8204,
'09 17:00 Z': 1.48525,
'09 17:30 Z': 2.385,
'09 18:00 Z': 2.32363,
'09 18:30 Z': 3.1437,
'09 19:00 Z': 2.60882,
'09 19:30 Z': 2.52885,
'09 20:00 Z': 2.04316,
'09 20:30 Z': 2.49732,
'09 21:00 Z': 2.51223,
'09 21:30 Z': 2.30949,
'09 22:00 Z': 3.10152,
'09 22:30 Z': 2.91216,
'09 23:00 Z': 2.69617,
'09 23:30 Z': 2.72009,
'10 00:00 Z': 2.78137,
'10 00:30 Z': 2.51214,
'10 01:00 Z': 2.47653,
'10 01:30 Z': 2.23604,
'10 02:00 Z': 2.54401,
'10 02:30 Z': 2.34104,
'10 03:00 Z': 2.03206,
'10 03:30 Z': 2.34728,
'10 04:00 Z': 2.07009,
'10 04:30 Z': 1.99624,
'10 05:00 Z': 2.41311,
'10 05:30 Z': 2.46614,
'10 06:00 Z': 2.11011,
'10 06:30 Z': 3.03942,
'10 07:00 Z': 3.62509,
'10 07:30 Z': 3.04718,
'10 08:00 Z': 4.97364,
'10 08:30 Z': 5.0745,
'10 09:00 Z': 6.31149,
'10 09:30 Z': 5.95138,
'10 10:00 Z': 6.45193,
'10 10:30 Z': 6.00211,
'10 11:00 Z': 5.12156,
'10 11:30 Z': 3.17665,
'10 12:00 Z': 2.1827,
'10 12:30 Z': 2.02121,
'10 13:00 Z': 1.87829,
'10 13:30 Z': 1.57762,
'10 14:00 Z': 1.89508,
'10 14:30 Z': 1.90089,
'10 15:00 Z': 2.09948,
'10 15:30 Z': 2.48228,
'10 16:00 Z': 3.16038,
'10 16:30 Z': 2.89421,
'10 17:00 Z': 2.04656,
'10 17:30 Z': 1.686,
'10 18:00 Z': 1.67016,
'10 18:30 Z': 2.15162,
'10 19:00 Z': 2.30773,
'10 19:30 Z': 2.06112,
'10 20:00 Z': 2.19445,
'10 20:30 Z': 3.1589,
'10 21:00 Z': 2.73894,
'10 21:30 Z': 2.0781,
'10 22:00 Z': 2.64038,
'10 22:30 Z': 3.29602,
'10 23:00 Z': 2.59287,
'10 23:30 Z': 2.40391,
'11 00:00 Z': 2.37679,
'11 00:30 Z': 2.29617,
'11 01:00 Z': 2.29318,
'11 01:30 Z': 2.20231,
'11 02:00 Z': 2.41007,
'11 02:30 Z': 2.29311,
'11 03:00 Z': 2.11336,
'11 03:30 Z': 1.28093,
'11 04:00 Z': 0.76979,
'11 04:30 Z': 0.75578,
'11 05:00 Z': 1.34918,
'11 05:30 Z': 1.81591,
'11 06:00 Z': 1.60814,
'11 06:30 Z': 1.29528,
'11 07:00 Z': 1.69776,
'11 07:30 Z': 1.69527,
'11 08:00 Z': 1.87324,
'11 08:30 Z': 2.1772,
'11 09:00 Z': 2.32549,
'11 09:30 Z': 2.46939,
'11 10:00 Z': 2.49195,
'11 10:30 Z': 2.33323,
'11 11:00 Z': 2.1495,
'11 11:30 Z': 2.13967,
'11 12:00 Z': 2.44454,
'11 12:30 Z': 1.85772,
'11 13:00 Z': 1.81046,
'11 13:30 Z': 1.84032,
'11 14:00 Z': 1.8581,
'11 14:30 Z': 1.79069,
'11 15:00 Z': 2.33701,
'11 15:30 Z': 2.8609,
'11 16:00 Z': 3.25785,
'11 16:30 Z': 3.83665,
'11 17:00 Z': 4.97848,
'11 17:30 Z': 5.92785,
'11 18:00 Z': 5.26706,
'11 18:30 Z': 4.65354,
'11 19:00 Z': 4.04052,
'11 19:30 Z': 3.22831,
'11 20:00 Z': 3.09003,
'11 20:30 Z': 3.39537,
'11 21:00 Z': 3.10455,
'11 21:30 Z': 3.10443,
'11 22:00 Z': 2.8242,
'11 22:30 Z': 2.43562,
'11 23:00 Z': 2.23075,
'11 23:30 Z': 1.80517,
'12 00:00 Z': 2.15135,
'12 00:30 Z': 2.16366,
'12 01:00 Z': 1.77237,
'12 01:30 Z': 1.36997,
'12 02:00 Z': 1.32072,
'12 02:30 Z': 1.47548,
'12 03:00 Z': 1.40121,
'12 03:30 Z': 1.08661,
'12 04:00 Z': 2.12693,
'12 04:30 Z': 1.9699,
'12 05:00 Z': 2.29981,
'12 05:30 Z': 2.07212,
'12 06:00 Z': 2.81757,
'12 06:30 Z': 3.11639,
'12 07:00 Z': 3.15774,
'12 07:30 Z': 3.32112,
'12 08:00 Z': 3.64106,
'12 08:30 Z': 3.43692,
'12 09:00 Z': 2.98528,
'12 09:30 Z': 2.68258,
'12 10:00 Z': 2.73601,
'12 10:30 Z': 2.45036,
'12 11:00 Z': 2.07652,
'12 11:30 Z': 1.86523,
'12 12:00 Z': 2.30337,
'12 12:30 Z': 2.08468,
'12 13:00 Z': 2.07902,
'12 13:30 Z': 2.11669,
'12 14:00 Z': 2.01194,
'12 14:30 Z': 2.31898,
'12 15:00 Z': 2.53166,
'12 15:30 Z': 2.29403,
'12 16:00 Z': 2.35554,
'12 16:30 Z': 2.16721,
'12 17:00 Z': 1.1292,
'12 17:30 Z': 1.02756,
'12 18:00 Z': 1.30119,
'12 18:30 Z': 2.2982,
'12 19:00 Z': 2.25191,
'12 19:30 Z': 2.26668,
'12 20:00 Z': 2.05437,
'12 20:30 Z': 1.77556,
'12 21:00 Z': 1.41721,
'12 21:30 Z': 0.80778,
'12 22:00 Z': 2.19593,
'12 22:30 Z': 1.71663,
'12 23:00 Z': 1.79201,
'12 23:30 Z': 1.44979,
'13 00:00 Z': 0.99137,
'13 00:30 Z': 0.95541,
'13 01:00 Z': 1.00313,
'13 01:30 Z': 1.07456,
'13 02:00 Z': 1.25633,
'13 02:30 Z': 1.39931,
'13 03:00 Z': 1.59278,
'13 03:30 Z': 1.60302,
'13 04:00 Z': 1.58912,
'13 04:30 Z': 0.99352,
'13 05:00 Z': 1.82655,
'13 05:30 Z': 1.29453,
'13 06:00 Z': 0.44454,
'13 06:30 Z': 1.37178,
'13 07:00 Z': 2.01788,
'13 07:30 Z': 1.93218,
'13 08:00 Z': 1.48759,
'13 08:30 Z': 1.37585,
'13 09:00 Z': 1.14824,
'13 09:30 Z': 1.17995,
'13 10:00 Z': 1.25349,
'13 10:30 Z': 1.21793,
'13 11:00 Z': 1.19713,
'13 11:30 Z': 1.14472,
'13 12:00 Z': 1.26476,
'13 12:30 Z': 1.34835,
'13 13:00 Z': 1.21397,
'13 13:30 Z': 1.11703,
'13 14:00 Z': 1.08646,
'13 14:30 Z': 1.46379,
'13 15:00 Z': 2.21906,
'13 15:30 Z': 2.17891,
'13 16:00 Z': 2.0757,
'13 16:30 Z': 1.60948,
'13 17:00 Z': 1.78678,
'13 17:30 Z': 1.47495,
'13 18:00 Z': 1.4538,
'13 18:30 Z': 2.29407,
'13 19:00 Z': 2.26592,
'13 19:30 Z': 1.92559,
'13 20:00 Z': 2.09314,
'13 20:30 Z': 1.70104,
'13 21:00 Z': 1.38563,
'13 21:30 Z': 1.18686,
'13 22:00 Z': 1.84948,
'13 22:30 Z': 1.83174,
'13 23:00 Z': 0.95289,
'13 23:30 Z': 0.57422,
'14 00:00 Z': 0.93896,
'14 00:30 Z': 1.00713,
'14 01:00 Z': 0.94843,
'14 01:30 Z': 0.95506,
'14 02:00 Z': 1.03246,
'14 02:30 Z': 1.03901,
'14 03:00 Z': 0.94175,
'14 03:30 Z': 0.69617,
'14 04:00 Z': 0.6872,
'14 04:30 Z': 0.92041,
'14 05:00 Z': 1.11794,
'14 05:30 Z': 0.46375,
'14 06:00 Z': 0.62057,
'14 06:30 Z': 1.44859,
'14 07:00 Z': 1.6836,
'14 07:30 Z': 1.05595,
'14 08:00 Z': 1.3132,
'14 08:30 Z': 1.15378,
'14 09:00 Z': 1.64133,
'14 09:30 Z': 2.71629,
'14 10:00 Z': 3.06437,
'14 10:30 Z': 2.04832,
'14 11:00 Z': 1.86216,
'14 11:30 Z': 1.55931,
'14 12:00 Z': 1.45432,
'14 12:30 Z': 1.23263,
'14 13:00 Z': 0.82263,
'14 13:30 Z': 0.7064,
'14 14:00 Z': 0.60905,
'14 14:30 Z': 0.72682,
'14 15:00 Z': 1.18832,
'14 15:30 Z': 1.73094,
'14 16:00 Z': 1.56851,
'14 16:30 Z': 1.60339,
'14 17:00 Z': 1.34199,
'14 17:30 Z': 1.61125,
'14 18:00 Z': 1.56057,
'14 18:30 Z': 2.0904,
'14 19:00 Z': 2.08501,
'14 19:30 Z': 1.47768,
'14 20:00 Z': 1.5756,
'14 20:30 Z': 1.76338,
'14 21:00 Z': 1.76409,
'14 21:30 Z': 1.13885,
'14 22:00 Z': 1.36557,
'14 22:30 Z': 1.21427,
'14 23:00 Z': 1.3839,
'14 23:30 Z': 1.3961,
'15 00:00 Z': 1.53956,
'15 00:30 Z': 1.72028,
'15 01:00 Z': 2.16106,
'15 01:30 Z': 2.03107,
'15 02:00 Z': 1.98013,
'15 02:30 Z': 1.80679,
'15 03:00 Z': 1.91349,
'15 03:30 Z': 1.86743,
'15 04:00 Z': 2.27687,
'15 04:30 Z': 1.83101,
'15 05:00 Z': 2.07848,
'15 05:30 Z': 1.61338,
'15 06:00 Z': 1.34065,
'15 06:30 Z': 1.5152,
'15 07:00 Z': 1.6569,
'15 07:30 Z': 1.21342,
'15 08:00 Z': 1.94563,
'15 08:30 Z': 1.42877,
'15 09:00 Z': 1.4912,
'15 09:30 Z': 1.55299,
'15 10:00 Z': 1.47387,
'15 10:30 Z': 1.60241,
'15 11:00 Z': 1.91383,
'15 11:30 Z': 2.03929,
'15 12:00 Z': 1.92587,
'15 12:30 Z': 1.71672,
'15 13:00 Z': 1.48972,
'15 13:30 Z': 1.39043,
'15 14:00 Z': 2.04589,
'15 14:30 Z': 2.557,
'15 15:00 Z': 2.09534,
'15 15:30 Z': 1.8007,
'15 16:00 Z': 2.06145,
'15 16:30 Z': 2.42865,
'15 17:00 Z': 1.4485,
'15 17:30 Z': 1.42831,
'15 18:00 Z': 1.62565,
'15 18:30 Z': 2.20292,
'15 19:00 Z': 1.56501,
'15 19:30 Z': 1.30333,
'15 20:00 Z': 1.84948,
'15 20:30 Z': 1.46405,
'15 21:00 Z': 1.69244,
'15 21:30 Z': 1.07297,
'15 22:00 Z': 1.00064,
'15 22:30 Z': 1.56261,
'15 23:00 Z': 1.15773,
'15 23:30 Z': 1.32501,
'16 00:00 Z': 1.11265,
'16 00:30 Z': 1.42831,
'16 01:00 Z': 1.34979,
'16 01:30 Z': 1.13949,
'16 02:00 Z': 0.99746,
'16 02:30 Z': 0.93426,
'16 03:00 Z': 0.99112,
'16 03:30 Z': 1.04539,
'16 04:00 Z': 1.05861,
'16 04:30 Z': 0.67723,
'16 05:00 Z': 0.32476,
'16 05:30 Z': -0.19183,
'16 06:00 Z': -0.29577,
'16 06:30 Z': 0.46199,
'16 07:00 Z': 0.88843,
'16 07:30 Z': 0.76672,
'16 08:00 Z': 0.59458,
'16 08:30 Z': 0.51104,
'16 09:00 Z': 0.58392,
'16 09:30 Z': 0.56775,
'16 10:00 Z': 0.62081,
'16 10:30 Z': 0.72722,
'16 11:00 Z': 1.02247,
'16 11:30 Z': 0.84334,
'16 12:00 Z': 1.19364,
'16 12:30 Z': 0.96458,
'16 13:00 Z': 0.62723,
'16 13:30 Z': 0.45191,
'16 14:00 Z': 0.30929,
'16 14:30 Z': 0.29203,
'16 15:00 Z': 0.71162,
'16 15:30 Z': 0.9046,
'16 16:00 Z': 0.95833,
'16 16:30 Z': 0.74511,
'16 17:00 Z': 0.23838,
'16 17:30 Z': 0.04761,
'16 18:00 Z': 0.1849,
'16 18:30 Z': 0.9362,
'16 19:00 Z': 0.68953,
'16 19:30 Z': 0.57427,
'16 20:00 Z': 0.59826,
'16 20:30 Z': 0.66696,
'16 21:00 Z': 0.70338,
'16 21:30 Z': 0.39744,
'16 22:00 Z': 1.10924,
'16 22:30 Z': 1.49667,
'16 23:00 Z': 1.72021,
'16 23:30 Z': 1.85456,
'17 00:00 Z': 1.981,
'17 00:30 Z': 1.98684,
'17 01:00 Z': 1.58217,
'17 01:30 Z': 1.32221,
'17 02:00 Z': 1.35052,
'17 02:30 Z': 1.39593,
'17 03:00 Z': 1.49824,
'17 03:30 Z': 1.64702,
'17 04:00 Z': 1.22952,
'17 04:30 Z': 1.18115,
'17 05:00 Z': 1.2884,
'17 05:30 Z': 2.10521,
'17 06:00 Z': 1.1375,
'17 06:30 Z': 1.27905,
'17 07:00 Z': 1.02878,
'17 07:30 Z': 1.2838,
'17 08:00 Z': 2.23293,
'17 08:30 Z': 2.39477,
'17 09:00 Z': 1.98213,
'17 09:30 Z': 1.76388,
'17 10:00 Z': 1.73494,
'17 10:30 Z': 1.38035,
'17 11:00 Z': 1.55992,
'17 11:30 Z': 1.15453,
'17 12:00 Z': 0.86644,
'17 12:30 Z': 0.55606,
'17 13:00 Z': 0.05554,
'17 13:30 Z': 0.37743,
'17 14:00 Z': 0.74148,
'17 14:30 Z': 0.76009,
'17 15:00 Z': 1.25715,
'17 15:30 Z': 1.41216,
'17 16:00 Z': 1.8297,
'17 16:30 Z': 2.46567,
'17 17:00 Z': 2.0464,
'17 17:30 Z': 1.28734,
'17 18:00 Z': 1.62464,
'17 18:30 Z': 1.57953,
'17 19:00 Z': 1.24229,
'17 19:30 Z': 1.15578,
'17 20:00 Z': 1.50193,
'17 20:30 Z': 2.12517,
'17 21:00 Z': 2.17619,
'17 21:30 Z': 1.41696,
'17 22:00 Z': 1.70643,
'17 22:30 Z': 1.33309,
'17 23:00 Z': 1.50715,
'17 23:30 Z': 1.24935,
'18 00:00 Z': 1.35838,
'18 00:30 Z': 1.34866,
'18 01:00 Z': 1.67583,
'18 01:30 Z': 1.63807,
'18 02:00 Z': 1.74082,
'18 02:30 Z': 1.80049,
'18 03:00 Z': 1.63558,
'18 03:30 Z': 1.5385,
'18 04:00 Z': 1.2025,
'18 04:30 Z': 1.09592,
'18 05:00 Z': 1.36434,
'18 05:30 Z': 1.32735,
'18 06:00 Z': 0.15925,
'18 06:30 Z': 0.07354,
'18 07:00 Z': 0.53058,
'18 07:30 Z': 0.60604,
'18 08:00 Z': 0.56803,
'18 08:30 Z': 1.08142,
'18 09:00 Z': 1.04077,
'18 09:30 Z': 0.99505,
'18 10:00 Z': 1.42914,
'18 10:30 Z': 1.39936,
'18 11:00 Z': 1.46326,
'18 11:30 Z': 1.5246,
'18 12:00 Z': 1.58429,
'18 12:30 Z': 0.89927,
'18 13:00 Z': 1.20485,
'18 13:30 Z': 1.26853,
'18 14:00 Z': 1.29592,
'18 14:30 Z': 1.11897,
'18 15:00 Z': 1.4555,
'18 15:30 Z': 1.65983,
'18 16:00 Z': 1.88616,
'18 16:30 Z': 1.98681,
'18 17:00 Z': 1.79529,
'18 17:30 Z': 1.56693,
'18 18:00 Z': 2.00399,
'18 18:30 Z': 2.11724,
'18 19:00 Z': 2.05339,
'18 19:30 Z': 1.88848,
'18 20:00 Z': 2.3435,
'18 20:30 Z': 2.91369,
'18 21:00 Z': 2.65504,
'18 21:30 Z': 1.30151,
'18 22:00 Z': 2.04009,
'18 22:30 Z': 2.11585,
'18 23:00 Z': 1.61092,
'18 23:30 Z': 1.72468,
'19 00:00 Z': 1.99161,
'19 00:30 Z': 2.05267,
'19 01:00 Z': 2.057,
'19 01:30 Z': 1.92657,
'19 02:00 Z': 1.74122,
'19 02:30 Z': 1.70507,
'19 03:00 Z': 1.59424,
'19 03:30 Z': 1.50081,
'19 04:00 Z': 2.11471,
'19 04:30 Z': 1.90569,
'19 05:00 Z': 2.20758,
'19 05:30 Z': 1.63612,
'19 06:00 Z': 1.12602,
'19 06:30 Z': 1.62096,
'19 07:00 Z': 1.28624,
'19 07:30 Z': 1.04822,
'19 08:00 Z': 0.80005,
'19 08:30 Z': 0.74145,
'19 09:00 Z': 0.75364,
'19 09:30 Z': 0.88481,
'19 10:00 Z': 1.11842,
'19 10:30 Z': 1.21363,
'19 11:00 Z': 1.33065,
'19 11:30 Z': 1.49165,
'19 12:00 Z': 1.90713,
'19 12:30 Z': 1.71347,
'19 13:00 Z': 1.55149,
'19 13:30 Z': 1.80332,
'19 14:00 Z': 1.55481,
'19 14:30 Z': 1.54522,
'19 15:00 Z': 1.7909,
'19 15:30 Z': 2.15994,
'19 16:00 Z': 1.89327,
'19 16:30 Z': 1.39647,
'19 17:00 Z': 1.00905,
'19 17:30 Z': 1.48381,
'19 18:00 Z': 1.16916,
'19 18:30 Z': 2.06038,
'19 19:00 Z': 2.06171,
'19 19:30 Z': 1.66123,
'19 20:00 Z': 2.14907,
'19 20:30 Z': 1.71948,
'19 21:00 Z': 1.11603,
'19 21:30 Z': 0.26486,
'19 22:00 Z': 0.81439,
'19 22:30 Z': 1.02413,
'19 23:00 Z': 0.93876,
'19 23:30 Z': 0.93904,
'20 00:00 Z': 1.51209,
'20 00:30 Z': 1.53171,
'20 01:00 Z': 1.33649,
'20 01:30 Z': 1.18256,
'20 02:00 Z': 1.53654,
'20 02:30 Z': 1.47599,
'20 03:00 Z': 1.51973,
'20 03:30 Z': 1.25876,
'20 04:00 Z': 1.53327,
'20 04:30 Z': 1.11534,
'20 05:00 Z': 1.48789,
'20 05:30 Z': 1.38114,
'20 06:00 Z': 0.76531,
'20 06:30 Z': 1.11518,
'20 07:00 Z': 0.95048,
'20 07:30 Z': 1.17095,
'20 08:00 Z': 1.07347,
'20 08:30 Z': 1.26201,
'20 09:00 Z': 1.24917,
'20 09:30 Z': 1.35945,
'20 10:00 Z': 1.95165,
'20 10:30 Z': 1.75031,
'20 11:00 Z': 1.64244,
'20 11:30 Z': 2.23103,
'20 12:00 Z': 2.65998,
'20 12:30 Z': 2.6966,
'20 13:00 Z': 2.53646,
'20 13:30 Z': 2.71395,
'20 14:00 Z': 1.51245,
'20 14:30 Z': 1.60221,
'20 15:00 Z': 2.16409,
'20 15:30 Z': 2.0868,
'20 16:00 Z': 2.18413,
'20 16:30 Z': 1.94803,
'20 17:00 Z': 1.04181,
'20 17:30 Z': 1.13845,
'20 18:00 Z': 1.34579,
'20 18:30 Z': 2.05401,
'20 19:00 Z': 1.58002,
'20 19:30 Z': 1.76964,
'20 20:00 Z': 1.95362,
'20 20:30 Z': 1.94297,
'20 21:00 Z': 1.32977,
'20 21:30 Z': 0.72637,
'20 22:00 Z': 0.79281,
'20 22:30 Z': 1.12146,
'20 23:00 Z': 1.25302,
'20 23:30 Z': 1.51091,
'21 00:00 Z': 1.55651,
'21 00:30 Z': 1.77742,
'21 01:00 Z': 1.63265,
'21 01:30 Z': 1.68126,
'21 02:00 Z': 1.67319,
'21 02:30 Z': 1.71706,
'21 03:00 Z': 1.88135,
'21 03:30 Z': 1.78167,
'21 04:00 Z': 1.81525,
'21 04:30 Z': 1.38009,
'21 05:00 Z': 1.72219,
'21 05:30 Z': 2.631,
'21 06:00 Z': 2.10767,
'21 06:30 Z': 1.65982,
'21 07:00 Z': 2.16432,
'21 07:30 Z': 1.26732,
'21 08:00 Z': 1.03091,
'21 08:30 Z': 1.00816,
'21 09:00 Z': 1.32546,
'21 09:30 Z': 1.03156,
'21 10:00 Z': 0.93954,
'21 10:30 Z': 0.9611,
'21 11:00 Z': 0.92907,
'21 11:30 Z': 1.02833,
'21 12:00 Z': 1.77944,
'21 12:30 Z': 1.53984,
'21 13:00 Z': 0.78751,
'21 13:30 Z': 0.68612,
'21 14:00 Z': 0.70077,
'21 14:30 Z': 0.8576,
'21 15:00 Z': 1.29489,
'21 15:30 Z': 1.45706,
'21 16:00 Z': 1.47113,
'21 16:30 Z': 1.05392,
'21 17:00 Z': 0.67368,
'21 17:30 Z': 1.16461,
'21 18:00 Z': 1.11823,
'21 18:30 Z': 1.89888,
'21 19:00 Z': 1.61402,
'21 19:30 Z': 1.93992,
'21 20:00 Z': 2.1908,
'21 20:30 Z': 2.98339,
'21 21:00 Z': 2.31662,
'21 21:30 Z': 1.09936,
'21 22:00 Z': 1.40118,
'21 22:30 Z': 1.10686,
'21 23:00 Z': 1.54749,
'21 23:30 Z': 1.48701,
'22 00:00 Z': 1.84954,
'22 00:30 Z': 1.8249,
'22 01:00 Z': 1.67395,
'22 01:30 Z': 1.60229,
'22 02:00 Z': 1.59883,
'22 02:30 Z': 1.52461,
'22 03:00 Z': 1.47151,
'22 03:30 Z': 1.34233,
'22 04:00 Z': 1.58618,
'22 04:30 Z': 1.3555,
'22 05:00 Z': 1.34921,
'22 05:30 Z': 1.50149,
'22 06:00 Z': 1.25455,
'22 06:30 Z': 1.3136,
'22 07:00 Z': 1.12596,
'22 07:30 Z': 0.87659,
'22 08:00 Z': 1.13839,
'22 08:30 Z': 1.07088,
'22 09:00 Z': 1.54982,
'22 09:30 Z': 1.14507,
'22 10:00 Z': 1.09351,
'22 10:30 Z': 1.3189,
'22 11:00 Z': 1.9412,
'22 11:30 Z': 1.44722,
'22 12:00 Z': 1.4861,
'22 12:30 Z': 1.50466,
'22 13:00 Z': 1.04974,
'22 13:30 Z': 0.92672,
'22 14:00 Z': 0.973,
'22 14:30 Z': 1.19926,
'22 15:00 Z': 1.45831,
'22 15:30 Z': 1.51127,
'22 16:00 Z': 1.52375,
'22 16:30 Z': 1.20107,
'22 17:00 Z': 0.87612,
'22 17:30 Z': 0.98048,
'22 18:00 Z': 1.23433,
'22 18:30 Z': 1.47477,
'22 19:00 Z': 1.40134,
'22 19:30 Z': 1.364,
'22 20:00 Z': 1.66978,
'22 20:30 Z': 1.75163,
'22 21:00 Z': 1.49729,
'22 21:30 Z': 0.89139,
'22 22:00 Z': 1.16165,
'22 22:30 Z': 1.63308,
'22 23:00 Z': 1.83882,
'22 23:30 Z': 1.8249,
'23 00:00 Z': 2.03716,
'23 00:30 Z': 1.68836,
'23 01:00 Z': 1.52479,
'23 01:30 Z': 1.49838,
'23 02:00 Z': 1.58302,
'23 02:30 Z': 1.68202,
'23 03:00 Z': 1.85561,
'23 03:30 Z': 1.70843,
'23 04:00 Z': 1.80046,
'23 04:30 Z': 1.93082,
'23 05:00 Z': 2.50367,
'23 05:30 Z': 1.3219,
'23 06:00 Z': 1.10158,
'23 06:30 Z': 1.3177,
'23 07:00 Z': 0.97175,
'23 07:30 Z': 0.66749,
'23 08:00 Z': 0.71387,
'23 08:30 Z': 0.86983,
'23 09:00 Z': 0.94704,
'23 09:30 Z': 0.81992,
'23 10:00 Z': 0.73539,
'23 10:30 Z': 0.7361,
'23 11:00 Z': 0.79276,
'23 11:30 Z': 0.64548,
'23 12:00 Z': 1.03318,
'23 12:30 Z': 1.17293,
'23 13:00 Z': 1.06397,
'23 13:30 Z': 1.24661,
'23 14:00 Z': 1.16539,
'23 14:30 Z': 0.73613,
'23 15:00 Z': 0.83235,
'23 15:30 Z': 0.73665,
'23 16:00 Z': 0.74937,
'23 16:30 Z': 0.43035,
'23 17:00 Z': 0.53142,
'23 17:30 Z': 0.62307,
'23 18:00 Z': 0.66053,
'23 18:30 Z': 1.0556,
'23 19:00 Z': 0.90265,
'23 19:30 Z': 0.55596,
'23 20:00 Z': 1.12827,
'23 20:30 Z': 0.99259,
'23 21:00 Z': 0.88319,
'23 21:30 Z': 0.59864,
'23 22:00 Z': 1.49143,
'23 22:30 Z': 1.54357,
'23 23:00 Z': 1.24108,
'23 23:30 Z': 1.1312,
'24 00:00 Z': 1.78199,
'24 00:30 Z': 1.90239,
'24 01:00 Z': 1.94645,
'24 01:30 Z': 1.81967,
'24 02:00 Z': 1.67322,
'24 02:30 Z': 1.60997,
'24 03:00 Z': 1.61976,
'24 03:30 Z': 1.54291,
'24 04:00 Z': 1.08567,
'24 04:30 Z': 1.16051,
'24 05:00 Z': 1.91521,
'24 05:30 Z': 1.88844,
'24 06:00 Z': 1.17526,
'24 06:30 Z': 2.16878,
'24 07:00 Z': 3.1474,
'24 07:30 Z': 3.37757,
'24 08:00 Z': 4.09709,
'24 08:30 Z': 3.00815,
'24 09:00 Z': 3.14898,
'24 09:30 Z': 2.41027,
'24 10:00 Z': 2.17113,
'24 10:30 Z': 2.46848,
'24 11:00 Z': 1.91082,
'24 11:30 Z': 1.55823,
'24 12:00 Z': 1.43153,
'24 12:30 Z': 1.3734,
'24 13:00 Z': 1.01998,
'24 13:30 Z': 1.00518,
'24 14:00 Z': 1.25908,
'24 14:30 Z': 1.32271,
'24 15:00 Z': 1.65511,
'24 15:30 Z': 1.79659,
'24 16:00 Z': 2.01168,
'24 16:30 Z': 2.10894,
'24 17:00 Z': 1.76478,
'24 17:30 Z': 1.48954,
'24 18:00 Z': 1.45683,
'24 18:30 Z': 1.87861,
'24 19:00 Z': 1.60396,
'24 19:30 Z': 1.51096,
'24 20:00 Z': 1.99311,
'24 20:30 Z': 2.15703,
'24 21:00 Z': 1.82929,
'24 21:30 Z': 1.35188,
'24 22:00 Z': 1.89243,
'24 22:30 Z': 2.03291,
'24 23:00 Z': 2.09446,
'24 23:30 Z': 2.3012,
'25 00:00 Z': 2.88052,
'25 00:30 Z': 2.75741,
'25 01:00 Z': 2.90838,
'25 01:30 Z': 2.82018,
'25 02:00 Z': 3.24817,
'25 02:30 Z': 3.24123,
'25 03:00 Z': 3.07859,
'25 03:30 Z': 3.02199,
'25 04:00 Z': 2.57389,
'25 04:30 Z': 2.53325,
'25 05:00 Z': 2.95727,
'25 05:30 Z': 2.89806,
'25 06:00 Z': 2.3471,
'25 06:30 Z': 2.84841,
'25 07:00 Z': 3.07139,
'25 07:30 Z': 2.89659,
'25 08:00 Z': 2.1164,
'25 08:30 Z': 1.7364,
'25 09:00 Z': 1.61811,
'25 09:30 Z': 2.19464,
'25 10:00 Z': 2.12864,
'25 10:30 Z': 1.93744,
'25 11:00 Z': 2.1698,
'25 11:30 Z': 2.30372,
'25 12:00 Z': 2.70419,
'25 12:30 Z': 1.93791,
'25 13:00 Z': 1.50883,
'25 13:30 Z': 1.43015,
'25 14:00 Z': 1.20302,
'25 14:30 Z': 1.24633,
'25 15:00 Z': 1.34494,
'25 15:30 Z': 1.25806,
'25 16:00 Z': 1.36605,
'25 16:30 Z': 1.25914,
'25 17:00 Z': 1.53861,
'25 17:30 Z': 1.5402,
'25 18:00 Z': 1.91727,
'25 18:30 Z': 2.391,
'25 19:00 Z': 2.37355,
'25 19:30 Z': 2.20919,
'25 20:00 Z': 2.81524,
'25 20:30 Z': 2.14489,
'25 21:00 Z': 2.65402,
'25 21:30 Z': 2.14947,
'25 22:00 Z': 1.89542,
'25 22:30 Z': 1.92804,
'25 23:00 Z': 1.984,
'25 23:30 Z': 2.0361,
'26 00:00 Z': 2.35939,
'26 00:30 Z': 2.27752,
'26 01:00 Z': 2.2433,
'26 01:30 Z': 2.28175,
'26 02:00 Z': 2.28588,
'26 02:30 Z': 2.35206,
'26 03:00 Z': 2.4155,
'26 03:30 Z': 2.64875,
'26 04:00 Z': 2.28058,
'26 04:30 Z': 2.10884,
'26 05:00 Z': 2.77093,
'26 05:30 Z': 2.09189,
'26 06:00 Z': 1.65298,
'26 06:30 Z': 3.37372,
'26 07:00 Z': 3.78809,
'26 07:30 Z': 3.49938,
'26 08:00 Z': 2.69289,
'26 08:30 Z': 2.18405,
'26 09:00 Z': 1.94236,
'26 09:30 Z': 2.15106,
'26 10:00 Z': 1.91142,
'26 10:30 Z': 1.98578,
'26 11:00 Z': 1.70853,
'26 11:30 Z': 1.37275,
'26 12:00 Z': 1.46548,
'26 12:30 Z': 1.2657,
'26 13:00 Z': 1.0509,
'26 13:30 Z': 1.03101,
'26 14:00 Z': 1.15971,
'26 14:30 Z': 1.28666,
'26 15:00 Z': 1.74492,
'26 15:30 Z': 1.82375,
'26 16:00 Z': 2.39414,
'26 16:30 Z': 2.42697,
'26 17:00 Z': 1.75462,
'26 17:30 Z': 1.68849,
'26 18:00 Z': 1.8777,
'26 18:30 Z': 2.70153,
'26 19:00 Z': 2.52003,
'26 19:30 Z': 2.24956,
'26 20:00 Z': 2.37181,
'26 20:30 Z': 2.01322,
'26 21:00 Z': 1.63228,
'26 21:30 Z': 1.00559,
'26 22:00 Z': 1.55541,
'26 22:30 Z': 2.13162,
'26 23:00 Z': 1.81465,
'26 23:30 Z': 2.09001,
'27 00:00 Z': 2.14848,
'27 00:30 Z': 2.07154,
'27 01:00 Z': 1.92519,
'27 01:30 Z': 1.85615,
'27 02:00 Z': 1.83092,
'27 02:30 Z': 1.76488,
'27 03:00 Z': 1.91334,
'27 03:30 Z': 1.88533,
'27 04:00 Z': 1.67871,
'27 04:30 Z': 1.86504,
'27 05:00 Z': 2.37814,
'27 05:30 Z': 2.17061,
'27 06:00 Z': 1.90494,
'27 06:30 Z': 2.4226,
'27 07:00 Z': 2.6373,
'27 07:30 Z': 1.64033,
'27 08:00 Z': 2.14692,
'27 08:30 Z': 1.44895,
'27 09:00 Z': 1.40565,
'27 09:30 Z': 1.1513,
'27 10:00 Z': 1.1322,
'27 10:30 Z': 1.59552,
'27 11:00 Z': 2.01372,
'27 11:30 Z': 1.48498,
'27 12:00 Z': 1.64725,
'27 12:30 Z': 1.26576,
'27 13:00 Z': 0.72319,
'27 13:30 Z': 0.709,
'27 14:00 Z': 0.77243,
'27 14:30 Z': 0.71357,
'27 15:00 Z': 1.24813,
'27 15:30 Z': 1.56359,
'27 16:00 Z': 1.87548,
'27 16:30 Z': 2.04557,
'27 17:00 Z': 1.75669,
'27 17:30 Z': 1.52809,
'27 18:00 Z': 1.495,
'27 18:30 Z': 1.97374,
'27 19:00 Z': 1.76372,
'27 19:30 Z': 1.09701,
'27 20:00 Z': 1.63265,
'27 20:30 Z': 2.16111,
'27 21:00 Z': 1.9965,
'27 21:30 Z': 0.45931,
'27 22:00 Z': 1.55566,
'27 22:30 Z': 2.19291,
'27 23:00 Z': 1.8505,
'27 23:30 Z': 1.77608,
'28 00:00 Z': 1.9414,
'28 00:30 Z': 1.75237,
'28 01:00 Z': 1.51541,
'28 01:30 Z': 1.19385,
'28 02:00 Z': 1.36605,
'28 02:30 Z': 1.44794,
'28 03:00 Z': 1.42918,
'28 03:30 Z': 1.401,
'28 04:00 Z': 1.37334,
'28 04:30 Z': 0.96732,
'28 05:00 Z': 1.69917,
'28 05:30 Z': 2.0186,
'28 06:00 Z': 1.44441,
'28 06:30 Z': 2.02781,
'28 07:00 Z': 1.88848,
'28 07:30 Z': 1.71544,
'28 08:00 Z': 1.50592,
'28 08:30 Z': 1.29,
'28 09:00 Z': 1.16019,
'28 09:30 Z': 1.11744,
'28 10:00 Z': 1.18829,
'28 10:30 Z': 1.18557,
'28 11:00 Z': 1.24119,
'28 11:30 Z': 1.15974,
'28 12:00 Z': 1.21477,
'28 12:30 Z': 1.071,
'28 13:00 Z': 0.85204,
'28 13:30 Z': 0.79465,
'28 14:00 Z': 0.75145,
'28 14:30 Z': 0.87936,
'28 15:00 Z': 1.28183,
'28 15:30 Z': 1.38141,
'28 16:00 Z': 1.52947,
'28 16:30 Z': 1.5082,
'28 17:00 Z': 0.96344,
'28 17:30 Z': 1.02458,
'28 18:00 Z': 1.46213,
'28 18:30 Z': 2.05776,
'28 19:00 Z': 1.14103,
'28 19:30 Z': 0.76447,
'28 20:00 Z': 1.06033,
'28 20:30 Z': 1.50301,
'28 21:00 Z': 1.3421,
'28 21:30 Z': 0.73926,
'28 22:00 Z': 1.34559,
'28 22:30 Z': 1.31988,
'28 23:00 Z': 1.18536,
'28 23:30 Z': 0.99863,
'29 00:00 Z': 1.31797,
'29 00:30 Z': 1.43015,
'29 01:00 Z': 1.45619,
'29 01:30 Z': 1.3555,
'29 02:00 Z': 0.97637,
'29 02:30 Z': 1.07085,
'29 03:00 Z': 1.14299,
'29 03:30 Z': 1.0738,
'29 04:00 Z': 0.99844,
'29 04:30 Z': 0.89253,
'29 05:00 Z': 1.4733,
'29 05:30 Z': 1.63252,
'29 06:00 Z': 0.95455,
'29 06:30 Z': 1.19807,
'29 07:00 Z': 2.04334,
'29 07:30 Z': 2.25541,
'29 08:00 Z': 1.49133,
'29 08:30 Z': 1.10346,
'29 09:00 Z': 0.81161,
'29 09:30 Z': 1.24435,
'29 10:00 Z': 1.48991,
'29 10:30 Z': 1.37271,
'29 11:00 Z': 1.74479,
'29 11:30 Z': 1.57224,
'29 12:00 Z': 1.56382,
'29 12:30 Z': 1.57852,
'29 13:00 Z': 0.87179,
'29 13:30 Z': 0.97645,
'29 14:00 Z': 0.86979,
'29 14:30 Z': 0.7028,
'29 15:00 Z': 1.00293,
'29 15:30 Z': 1.013,
'29 16:00 Z': 1.28986,
'29 16:30 Z': 0.91296,
'29 17:00 Z': 0.87521,
'29 17:30 Z': 1.32652,
'29 18:00 Z': 1.65547,
'29 18:30 Z': 1.7506,
'29 19:00 Z': 1.23373,
'29 19:30 Z': 1.12976,
'29 20:00 Z': 2.42536,
'29 20:30 Z': 2.05913,
'29 21:00 Z': 1.51381,
'29 21:30 Z': 0.75623,
'29 22:00 Z': 1.23693,
'29 22:30 Z': 1.25054,
'29 23:00 Z': 1.14679,
'29 23:30 Z': 1.2452,
'30 00:00 Z': 1.19927,
'30 00:30 Z': 1.196,
'30 01:00 Z': 1.12209,
'30 01:30 Z': 1.18896,
'30 02:00 Z': 1.28987,
'30 02:30 Z': 1.32457,
'30 03:00 Z': 1.27589,
'30 03:30 Z': 1.37013,
'30 04:00 Z': 1.27322,
'30 04:30 Z': 1.02811,
'30 05:00 Z': 1.63224,
'30 05:30 Z': 1.19385,
'30 06:00 Z': 0.44694,
'30 06:30 Z': 0.85838,
'30 07:00 Z': 0.88556,
'30 07:30 Z': 0.71616,
'30 08:00 Z': 0.74426,
'30 08:30 Z': 0.80089,
'30 09:00 Z': 0.85387,
'30 09:30 Z': 1.15769,
'30 10:00 Z': 1.24301,
'30 10:30 Z': 1.26316,
'30 11:00 Z': 1.31566,
'30 11:30 Z': 1.26124,
'30 12:00 Z': 1.21813,
'30 12:30 Z': 0.8001,
'30 13:00 Z': 0.38763,
'30 13:30 Z': 0.29129,
'30 14:00 Z': 0.35458,
'30 14:30 Z': 0.40327,
'30 15:00 Z': 0.73391,
'30 15:30 Z': 1.20968,
'30 16:00 Z': 1.62351,
'30 16:30 Z': 1.3303,
'30 17:00 Z': 1.14491,
'30 17:30 Z': 0.87058,
'30 18:00 Z': 1.28572,
'30 18:30 Z': 1.8881,
'30 19:00 Z': 1.64806,
'30 19:30 Z': 1.44007,
'30 20:00 Z': 1.59125,
'30 20:30 Z': 1.4132,
'30 21:00 Z': 1.29384,
'30 21:30 Z': 0.79545,
'30 22:00 Z': 1.55955,
'30 22:30 Z': 1.35344,
'30 23:00 Z': 2.2732,
'30 23:30 Z': 2.40288,
'31 00:00 Z': 2.67973,
'31 00:30 Z': 2.96756,
'31 01:00 Z': 3.25205,
'31 01:30 Z': 3.27415,
'31 02:00 Z': 2.70421,
'31 02:30 Z': 2.58894,
'31 03:00 Z': 2.28416,
'31 03:30 Z': 2.15654,
'31 04:00 Z': 1.86889,
'31 04:30 Z': 1.79136,
'31 05:00 Z': 2.56485,
'31 05:30 Z': 2.43791,
'31 06:00 Z': 1.13312,
'31 06:30 Z': 2.05668,
'31 07:00 Z': 2.95981,
'31 07:30 Z': 3.51061,
'31 08:00 Z': 3.25879,
'31 08:30 Z': 2.69567,
'31 09:00 Z': 2.41786,
'31 09:30 Z': 3.29847,
'31 10:00 Z': 4.10762,
'31 10:30 Z': 3.26184,
'31 11:00 Z': 3.12077,
'31 11:30 Z': 2.6727,
'31 12:00 Z': 2.24942,
'31 12:30 Z': 2.16412,
'31 13:00 Z': 1.37701,
'31 13:30 Z': 1.04211,
'31 14:00 Z': 0.95976,
'31 14:30 Z': 0.77078,
'31 15:00 Z': 1.16039,
'31 15:30 Z': 1.2223,
'31 16:00 Z': 1.40773,
'31 16:30 Z': 1.50169,
'31 17:00 Z': 1.36569,
'31 17:30 Z': 1.108,
'31 18:00 Z': 1.28637,
'31 18:30 Z': 1.1445,
'31 19:00 Z': 1.05367,
'31 19:30 Z': 0.91872,
'31 20:00 Z': 1.84336,
'31 20:30 Z': 2.02002,
'31 21:00 Z': 2.00348,
'31 21:30 Z': 1.18057,
'31 22:00 Z': 2.03949,
'31 22:30 Z': 1.86041,
'31 23:00 Z': 1.56087,
'31 23:30 Z': 1.33018}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bsuos]]></value>
        <value><![CDATA[213]]></value>
        <value><![CDATA[2010-08-01T00:00Z]]></value>
        <value><![CDATA[def rates_gbp_per_mwh():
    return {
'01 00:00 Z': 1.83847,
'01 00:30 Z': 1.87258,
'01 01:00 Z': 1.91485,
'01 01:30 Z': 1.71389,
'01 02:00 Z': 2.14491,
'01 02:30 Z': 2.43027,
'01 03:00 Z': 2.38719,
'01 03:30 Z': 2.01521,
'01 04:00 Z': 1.93282,
'01 04:30 Z': 1.76693,
'01 05:00 Z': 1.92205,
'01 05:30 Z': 2.1595,
'01 06:00 Z': 1.15464,
'01 06:30 Z': 1.4757,
'01 07:00 Z': 1.99182,
'01 07:30 Z': 2.02081,
'01 08:00 Z': 1.78781,
'01 08:30 Z': 1.99852,
'01 09:00 Z': 2.38633,
'01 09:30 Z': 2.06876,
'01 10:00 Z': 1.81363,
'01 10:30 Z': 2.23892,
'01 11:00 Z': 3.21145,
'01 11:30 Z': 2.43713,
'01 12:00 Z': 1.60573,
'01 12:30 Z': 1.17635,
'01 13:00 Z': 1.10917,
'01 13:30 Z': 1.01066,
'01 14:00 Z': 1.23653,
'01 14:30 Z': 1.22226,
'01 15:00 Z': 1.491,
'01 15:30 Z': 1.66016,
'01 16:00 Z': 1.96624,
'01 16:30 Z': 1.94215,
'01 17:00 Z': 1.91481,
'01 17:30 Z': 1.82108,
'01 18:00 Z': 1.56226,
'01 18:30 Z': 1.79287,
'01 19:00 Z': 1.75637,
'01 19:30 Z': 1.59223,
'01 20:00 Z': 2.06536,
'01 20:30 Z': 1.88573,
'01 21:00 Z': 2.28648,
'01 21:30 Z': 1.25008,
'01 22:00 Z': 1.63905,
'01 22:30 Z': 1.3174,
'01 23:00 Z': 1.39627,
'01 23:30 Z': 1.37684,
'02 00:00 Z': 1.99907,
'02 00:30 Z': 2.09698,
'02 01:00 Z': 1.85997,
'02 01:30 Z': 1.60398,
'02 02:00 Z': 1.75029,
'02 02:30 Z': 1.80149,
'02 03:00 Z': 1.93585,
'02 03:30 Z': 1.96307,
'02 04:00 Z': 2.43689,
'02 04:30 Z': 2.38543,
'02 05:00 Z': 2.12084,
'02 05:30 Z': 2.1717,
'02 06:00 Z': 1.70655,
'02 06:30 Z': 1.50355,
'02 07:00 Z': 1.62717,
'02 07:30 Z': 1.91612,
'02 08:00 Z': 1.90446,
'02 08:30 Z': 1.60081,
'02 09:00 Z': 1.33476,
'02 09:30 Z': 1.05401,
'02 10:00 Z': 1.51011,
'02 10:30 Z': 1.53661,
'02 11:00 Z': 1.72324,
'02 11:30 Z': 1.49578,
'02 12:00 Z': 1.43315,
'02 12:30 Z': 1.23395,
'02 13:00 Z': 0.81186,
'02 13:30 Z': 0.76152,
'02 14:00 Z': 0.67697,
'02 14:30 Z': 0.62322,
'02 15:00 Z': 0.79928,
'02 15:30 Z': 1.06036,
'02 16:00 Z': 1.21574,
'02 16:30 Z': 0.96799,
'02 17:00 Z': 0.66757,
'02 17:30 Z': 0.88486,
'02 18:00 Z': 0.764,
'02 18:30 Z': 1.25162,
'02 19:00 Z': 1.58279,
'02 19:30 Z': 1.58753,
'02 20:00 Z': 2.01937,
'02 20:30 Z': 1.40293,
'02 21:00 Z': 0.96778,
'02 21:30 Z': 0.34131,
'02 22:00 Z': 0.55589,
'02 22:30 Z': 0.54079,
'02 23:00 Z': 0.87731,
'02 23:30 Z': 0.29729,
'03 00:00 Z': 0.69668,
'03 00:30 Z': 0.63712,
'03 01:00 Z': 0.8136,
'03 01:30 Z': 0.79737,
'03 02:00 Z': 0.68801,
'03 02:30 Z': 0.56159,
'03 03:00 Z': 0.54017,
'03 03:30 Z': 0.4906,
'03 04:00 Z': 0.4435,
'03 04:30 Z': 0.50077,
'03 05:00 Z': 0.846,
'03 05:30 Z': 0.56477,
'03 06:00 Z': 0.22876,
'03 06:30 Z': 0.60677,
'03 07:00 Z': 0.81109,
'03 07:30 Z': 0.77055,
'03 08:00 Z': 0.95118,
'03 08:30 Z': 0.72608,
'03 09:00 Z': 0.67737,
'03 09:30 Z': 0.75053,
'03 10:00 Z': 0.7061,
'03 10:30 Z': 0.57891,
'03 11:00 Z': 0.85226,
'03 11:30 Z': 0.57265,
'03 12:00 Z': 0.56227,
'03 12:30 Z': 0.53477,
'03 13:00 Z': 0.24756,
'03 13:30 Z': 0.21902,
'03 14:00 Z': 0.32986,
'03 14:30 Z': 0.40728,
'03 15:00 Z': 0.89016,
'03 15:30 Z': 1.08645,
'03 16:00 Z': 0.99689,
'03 16:30 Z': 0.91986,
'03 17:00 Z': 0.95106,
'03 17:30 Z': 1.62917,
'03 18:00 Z': 1.81294,
'03 18:30 Z': 1.67186,
'03 19:00 Z': 1.55451,
'03 19:30 Z': 1.17898,
'03 20:00 Z': 1.67329,
'03 20:30 Z': 1.17207,
'03 21:00 Z': 0.99611,
'03 21:30 Z': 0.4528,
'03 22:00 Z': 1.02386,
'03 22:30 Z': 1.6642,
'03 23:00 Z': 1.56633,
'03 23:30 Z': 1.68389,
'04 00:00 Z': 1.62561,
'04 00:30 Z': 1.42126,
'04 01:00 Z': 1.55381,
'04 01:30 Z': 1.29938,
'04 02:00 Z': 1.24645,
'04 02:30 Z': 1.20612,
'04 03:00 Z': 1.10694,
'04 03:30 Z': 1.15361,
'04 04:00 Z': 1.63247,
'04 04:30 Z': 1.194,
'04 05:00 Z': 1.72859,
'04 05:30 Z': 1.96267,
'04 06:00 Z': 1.85185,
'04 06:30 Z': 2.09309,
'04 07:00 Z': 2.20048,
'04 07:30 Z': 1.87859,
'04 08:00 Z': 2.2612,
'04 08:30 Z': 1.93175,
'04 09:00 Z': 1.891,
'04 09:30 Z': 1.70118,
'04 10:00 Z': 1.39187,
'04 10:30 Z': 1.38435,
'04 11:00 Z': 1.49673,
'04 11:30 Z': 1.54769,
'04 12:00 Z': 1.27707,
'04 12:30 Z': 1.16395,
'04 13:00 Z': 0.88155,
'04 13:30 Z': 0.81631,
'04 14:00 Z': 0.76725,
'04 14:30 Z': 0.84528,
'04 15:00 Z': 1.07402,
'04 15:30 Z': 0.92594,
'04 16:00 Z': 1.18207,
'04 16:30 Z': 0.83371,
'04 17:00 Z': 0.87221,
'04 17:30 Z': 0.73089,
'04 18:00 Z': 1.00981,
'04 18:30 Z': 1.70672,
'04 19:00 Z': 1.49038,
'04 19:30 Z': 1.33615,
'04 20:00 Z': 2.21854,
'04 20:30 Z': 1.88173,
'04 21:00 Z': 1.5835,
'04 21:30 Z': 0.93371,
'04 22:00 Z': 1.05015,
'04 22:30 Z': 0.69064,
'04 23:00 Z': 0.31929,
'04 23:30 Z': 0.31214,
'05 00:00 Z': 0.15672,
'05 00:30 Z': 0.00404,
'05 01:00 Z': 0.39709,
'05 01:30 Z': 0.35771,
'05 02:00 Z': 0.35222,
'05 02:30 Z': 0.3562,
'05 03:00 Z': 0.34655,
'05 03:30 Z': 0.28644,
'05 04:00 Z': 0.41236,
'05 04:30 Z': 0.17795,
'05 05:00 Z': 0.35478,
'05 05:30 Z': 0.56221,
'05 06:00 Z': -0.00736,
'05 06:30 Z': 0.52154,
'05 07:00 Z': 0.93181,
'05 07:30 Z': 0.8972,
'05 08:00 Z': 0.67317,
'05 08:30 Z': 0.62226,
'05 09:00 Z': 0.57886,
'05 09:30 Z': 0.71658,
'05 10:00 Z': 0.70876,
'05 10:30 Z': 0.62843,
'05 11:00 Z': 0.64459,
'05 11:30 Z': 0.58478,
'05 12:00 Z': 0.66498,
'05 12:30 Z': 0.58972,
'05 13:00 Z': 0.20156,
'05 13:30 Z': -0.08811,
'05 14:00 Z': -0.00633,
'05 14:30 Z': -0.05843,
'05 15:00 Z': 0.54963,
'05 15:30 Z': 0.64463,
'05 16:00 Z': 0.80438,
'05 16:30 Z': 0.59844,
'05 17:00 Z': 0.21475,
'05 17:30 Z': 0.45371,
'05 18:00 Z': 0.76822,
'05 18:30 Z': 1.06439,
'05 19:00 Z': 1.13822,
'05 19:30 Z': 1.13533,
'05 20:00 Z': 1.64734,
'05 20:30 Z': 1.25935,
'05 21:00 Z': 0.87769,
'05 21:30 Z': -0.0316,
'05 22:00 Z': 0.75333,
'05 22:30 Z': 0.71316,
'05 23:00 Z': 0.56247,
'05 23:30 Z': 0.49576,
'06 00:00 Z': 0.99652,
'06 00:30 Z': 1.14966,
'06 01:00 Z': 1.15122,
'06 01:30 Z': 1.03063,
'06 02:00 Z': 0.96009,
'06 02:30 Z': 0.86699,
'06 03:00 Z': 0.90091,
'06 03:30 Z': 0.90387,
'06 04:00 Z': 1.1622,
'06 04:30 Z': 0.9235,
'06 05:00 Z': 0.60373,
'06 05:30 Z': 0.46294,
'06 06:00 Z': 0.06342,
'06 06:30 Z': 0.59931,
'06 07:00 Z': 0.69015,
'06 07:30 Z': 0.82686,
'06 08:00 Z': 0.80888,
'06 08:30 Z': 0.82397,
'06 09:00 Z': 0.80375,
'06 09:30 Z': 0.69414,
'06 10:00 Z': 0.70114,
'06 10:30 Z': 0.60867,
'06 11:00 Z': 0.45447,
'06 11:30 Z': 0.40256,
'06 12:00 Z': 0.64942,
'06 12:30 Z': 0.68319,
'06 13:00 Z': 0.35429,
'06 13:30 Z': 0.26634,
'06 14:00 Z': 0.36488,
'06 14:30 Z': 0.39192,
'06 15:00 Z': 0.71796,
'06 15:30 Z': 1.30123,
'06 16:00 Z': 1.76331,
'06 16:30 Z': 1.37896,
'06 17:00 Z': 0.92092,
'06 17:30 Z': 0.69868,
'06 18:00 Z': 0.5557,
'06 18:30 Z': 1.24054,
'06 19:00 Z': 1.18419,
'06 19:30 Z': 1.44057,
'06 20:00 Z': 1.61023,
'06 20:30 Z': 1.11952,
'06 21:00 Z': 1.04278,
'06 21:30 Z': 0.41577,
'06 22:00 Z': 1.00088,
'06 22:30 Z': 1.02005,
'06 23:00 Z': 0.91121,
'06 23:30 Z': 1.09195,
'07 00:00 Z': 1.37721,
'07 00:30 Z': 1.66994,
'07 01:00 Z': 1.62662,
'07 01:30 Z': 1.42281,
'07 02:00 Z': 1.59129,
'07 02:30 Z': 1.54927,
'07 03:00 Z': 1.55064,
'07 03:30 Z': 1.50297,
'07 04:00 Z': 1.2393,
'07 04:30 Z': 1.21195,
'07 05:00 Z': 1.61444,
'07 05:30 Z': 2.0332,
'07 06:00 Z': 1.14636,
'07 06:30 Z': 1.17607,
'07 07:00 Z': 1.66306,
'07 07:30 Z': 2.30802,
'07 08:00 Z': 2.77888,
'07 08:30 Z': 2.52551,
'07 09:00 Z': 2.91293,
'07 09:30 Z': 3.06869,
'07 10:00 Z': 2.58637,
'07 10:30 Z': 2.20951,
'07 11:00 Z': 1.85532,
'07 11:30 Z': 1.44167,
'07 12:00 Z': 1.04056,
'07 12:30 Z': 0.93029,
'07 13:00 Z': 0.60744,
'07 13:30 Z': 0.36394,
'07 14:00 Z': 0.52775,
'07 14:30 Z': 0.43932,
'07 15:00 Z': 1.03314,
'07 15:30 Z': 1.35777,
'07 16:00 Z': 1.11827,
'07 16:30 Z': 1.61525,
'07 17:00 Z': 1.24043,
'07 17:30 Z': 0.99429,
'07 18:00 Z': 0.86653,
'07 18:30 Z': 1.29995,
'07 19:00 Z': 1.08286,
'07 19:30 Z': 1.23436,
'07 20:00 Z': 2.01661,
'07 20:30 Z': 1.34269,
'07 21:00 Z': 0.91377,
'07 21:30 Z': 0.52777,
'07 22:00 Z': 1.18087,
'07 22:30 Z': 0.94133,
'07 23:00 Z': 0.95258,
'07 23:30 Z': 0.84022,
'08 00:00 Z': 0.89438,
'08 00:30 Z': 1.18394,
'08 01:00 Z': 1.03871,
'08 01:30 Z': 1.02896,
'08 02:00 Z': 1.01493,
'08 02:30 Z': 0.96313,
'08 03:00 Z': 0.92693,
'08 03:30 Z': 0.81905,
'08 04:00 Z': 0.68984,
'08 04:30 Z': 0.65846,
'08 05:00 Z': 0.7479,
'08 05:30 Z': 1.15683,
'08 06:00 Z': 0.27712,
'08 06:30 Z': 0.63099,
'08 07:00 Z': 0.83093,
'08 07:30 Z': 1.68499,
'08 08:00 Z': 1.16636,
'08 08:30 Z': 0.88568,
'08 09:00 Z': 0.82151,
'08 09:30 Z': 0.86672,
'08 10:00 Z': 1.02285,
'08 10:30 Z': 1.29503,
'08 11:00 Z': 1.19362,
'08 11:30 Z': 1.07892,
'08 12:00 Z': 1.08653,
'08 12:30 Z': 0.71253,
'08 13:00 Z': 0.50499,
'08 13:30 Z': 0.30993,
'08 14:00 Z': 0.56277,
'08 14:30 Z': 0.66107,
'08 15:00 Z': 0.74174,
'08 15:30 Z': 0.6675,
'08 16:00 Z': 0.66349,
'08 16:30 Z': 0.84999,
'08 17:00 Z': 0.84894,
'08 17:30 Z': 0.55502,
'08 18:00 Z': 0.47554,
'08 18:30 Z': 0.69627,
'08 19:00 Z': 0.83188,
'08 19:30 Z': 1.24642,
'08 20:00 Z': 2.47095,
'08 20:30 Z': 1.97462,
'08 21:00 Z': 1.39573,
'08 21:30 Z': 0.95983,
'08 22:00 Z': 1.56603,
'08 22:30 Z': 1.28125,
'08 23:00 Z': 1.04051,
'08 23:30 Z': 1.08452,
'09 00:00 Z': 1.23166,
'09 00:30 Z': 1.02696,
'09 01:00 Z': 0.85033,
'09 01:30 Z': 0.6992,
'09 02:00 Z': 0.86459,
'09 02:30 Z': 0.85268,
'09 03:00 Z': 0.84611,
'09 03:30 Z': 0.71562,
'09 04:00 Z': 1.21821,
'09 04:30 Z': 0.6437,
'09 05:00 Z': 0.90461,
'09 05:30 Z': 0.76742,
'09 06:00 Z': 0.08465,
'09 06:30 Z': 0.47199,
'09 07:00 Z': 0.77815,
'09 07:30 Z': 1.02839,
'09 08:00 Z': 1.15861,
'09 08:30 Z': 1.56226,
'09 09:00 Z': 1.47169,
'09 09:30 Z': 2.12808,
'09 10:00 Z': 1.77482,
'09 10:30 Z': 2.0807,
'09 11:00 Z': 2.56565,
'09 11:30 Z': 2.08916,
'09 12:00 Z': 1.60602,
'09 12:30 Z': 1.16645,
'09 13:00 Z': 1.11327,
'09 13:30 Z': 0.81595,
'09 14:00 Z': 1.23063,
'09 14:30 Z': 1.32432,
'09 15:00 Z': 1.82362,
'09 15:30 Z': 1.74451,
'09 16:00 Z': 1.75808,
'09 16:30 Z': 1.28155,
'09 17:00 Z': 0.70474,
'09 17:30 Z': 0.80932,
'09 18:00 Z': 0.77471,
'09 18:30 Z': 1.32441,
'09 19:00 Z': 1.51691,
'09 19:30 Z': 1.56453,
'09 20:00 Z': 1.80225,
'09 20:30 Z': 1.53882,
'09 21:00 Z': 1.29353,
'09 21:30 Z': 0.62062,
'09 22:00 Z': 1.08799,
'09 22:30 Z': 1.0009,
'09 23:00 Z': 0.81407,
'09 23:30 Z': 0.80194,
'10 00:00 Z': 1.3283,
'10 00:30 Z': 1.21568,
'10 01:00 Z': 0.9705,
'10 01:30 Z': 0.85257,
'10 02:00 Z': 0.90634,
'10 02:30 Z': 1.03274,
'10 03:00 Z': 0.98853,
'10 03:30 Z': 0.89132,
'10 04:00 Z': 0.98199,
'10 04:30 Z': 0.79704,
'10 05:00 Z': 1.04057,
'10 05:30 Z': 0.68351,
'10 06:00 Z': 0.7088,
'10 06:30 Z': 1.05332,
'10 07:00 Z': 1.00829,
'10 07:30 Z': 1.14651,
'10 08:00 Z': 1.67712,
'10 08:30 Z': 1.59631,
'10 09:00 Z': 1.64937,
'10 09:30 Z': 2.21084,
'10 10:00 Z': 1.94209,
'10 10:30 Z': 2.04252,
'10 11:00 Z': 2.21328,
'10 11:30 Z': 2.04085,
'10 12:00 Z': 2.57075,
'10 12:30 Z': 1.91704,
'10 13:00 Z': 1.17634,
'10 13:30 Z': 0.74084,
'10 14:00 Z': 0.78741,
'10 14:30 Z': 0.96767,
'10 15:00 Z': 1.41671,
'10 15:30 Z': 1.92658,
'10 16:00 Z': 1.68714,
'10 16:30 Z': 1.24319,
'10 17:00 Z': 0.66102,
'10 17:30 Z': 0.74512,
'10 18:00 Z': 0.93895,
'10 18:30 Z': 1.24223,
'10 19:00 Z': 1.11732,
'10 19:30 Z': 0.86347,
'10 20:00 Z': 1.40113,
'10 20:30 Z': 0.98125,
'10 21:00 Z': 0.78882,
'10 21:30 Z': -0.13147,
'10 22:00 Z': 0.5412,
'10 22:30 Z': 0.72188,
'10 23:00 Z': 0.34214,
'10 23:30 Z': 0.41559,
'11 00:00 Z': 0.37698,
'11 00:30 Z': 0.2288,
'11 01:00 Z': 0.42756,
'11 01:30 Z': 0.5262,
'11 02:00 Z': 0.64857,
'11 02:30 Z': 0.6224,
'11 03:00 Z': 0.54557,
'11 03:30 Z': 0.58617,
'11 04:00 Z': 0.56465,
'11 04:30 Z': 0.28667,
'11 05:00 Z': 0.50998,
'11 05:30 Z': 0.2138,
'11 06:00 Z': 0.11968,
'11 06:30 Z': 0.59221,
'11 07:00 Z': 0.71095,
'11 07:30 Z': 0.72036,
'11 08:00 Z': 0.74492,
'11 08:30 Z': 0.79624,
'11 09:00 Z': 0.61172,
'11 09:30 Z': 0.6248,
'11 10:00 Z': 0.64472,
'11 10:30 Z': 0.59772,
'11 11:00 Z': 0.57491,
'11 11:30 Z': 0.43454,
'11 12:00 Z': 0.21204,
'11 12:30 Z': 0.11133,
'11 13:00 Z': -0.10532,
'11 13:30 Z': -0.17159,
'11 14:00 Z': 0.12407,
'11 14:30 Z': 0.03203,
'11 15:00 Z': 0.47472,
'11 15:30 Z': 0.606,
'11 16:00 Z': 0.72979,
'11 16:30 Z': 0.42689,
'11 17:00 Z': 0.18759,
'11 17:30 Z': 0.28352,
'11 18:00 Z': 0.30996,
'11 18:30 Z': 0.68558,
'11 19:00 Z': 0.64453,
'11 19:30 Z': 0.77029,
'11 20:00 Z': 1.42764,
'11 20:30 Z': 0.75972,
'11 21:00 Z': 0.53211,
'11 21:30 Z': -0.16348,
'11 22:00 Z': 0.91414,
'11 22:30 Z': 0.75446,
'11 23:00 Z': 0.47947,
'11 23:30 Z': 0.62379,
'12 00:00 Z': 0.98228,
'12 00:30 Z': 0.93772,
'12 01:00 Z': 0.89533,
'12 01:30 Z': 0.95188,
'12 02:00 Z': 1.07034,
'12 02:30 Z': 0.9048,
'12 03:00 Z': 0.60579,
'12 03:30 Z': 0.5277,
'12 04:00 Z': 0.55976,
'12 04:30 Z': 0.48439,
'12 05:00 Z': 0.3655,
'12 05:30 Z': -0.04454,
'12 06:00 Z': 0.03087,
'12 06:30 Z': 0.65228,
'12 07:00 Z': 0.57266,
'12 07:30 Z': 0.37358,
'12 08:00 Z': 0.32759,
'12 08:30 Z': 0.32737,
'12 09:00 Z': 0.5469,
'12 09:30 Z': 0.43196,
'12 10:00 Z': 0.41976,
'12 10:30 Z': 0.57886,
'12 11:00 Z': 0.90159,
'12 11:30 Z': 0.83117,
'12 12:00 Z': 0.79687,
'12 12:30 Z': 0.69961,
'12 13:00 Z': 0.35897,
'12 13:30 Z': 0.36697,
'12 14:00 Z': 0.78422,
'12 14:30 Z': 0.95424,
'12 15:00 Z': 1.07175,
'12 15:30 Z': 1.05686,
'12 16:00 Z': 1.3737,
'12 16:30 Z': 1.16931,
'12 17:00 Z': 0.87175,
'12 17:30 Z': 0.56764,
'12 18:00 Z': 0.82451,
'12 18:30 Z': 0.97717,
'12 19:00 Z': 0.87599,
'12 19:30 Z': 1.03393,
'12 20:00 Z': 1.35693,
'12 20:30 Z': 0.89809,
'12 21:00 Z': 0.55926,
'12 21:30 Z': -0.1684,
'12 22:00 Z': 0.3876,
'12 22:30 Z': 1.02241,
'12 23:00 Z': 1.0144,
'12 23:30 Z': 0.75332,
'13 00:00 Z': 1.23033,
'13 00:30 Z': 1.5779,
'13 01:00 Z': 0.6681,
'13 01:30 Z': 0.40954,
'13 02:00 Z': 0.75026,
'13 02:30 Z': 0.69415,
'13 03:00 Z': 0.62045,
'13 03:30 Z': 0.8131,
'13 04:00 Z': 1.04446,
'13 04:30 Z': 0.95531,
'13 05:00 Z': 0.35809,
'13 05:30 Z': 0.44871,
'13 06:00 Z': 0.07761,
'13 06:30 Z': 0.75608,
'13 07:00 Z': 0.90284,
'13 07:30 Z': 0.85252,
'13 08:00 Z': 1.03341,
'13 08:30 Z': 1.67612,
'13 09:00 Z': 1.57768,
'13 09:30 Z': 1.21592,
'13 10:00 Z': 1.36979,
'13 10:30 Z': 1.38209,
'13 11:00 Z': 1.44588,
'13 11:30 Z': 1.3984,
'13 12:00 Z': 1.37719,
'13 12:30 Z': 0.924,
'13 13:00 Z': 0.50212,
'13 13:30 Z': 0.47754,
'13 14:00 Z': 0.49779,
'13 14:30 Z': 0.55994,
'13 15:00 Z': 1.1173,
'13 15:30 Z': 1.25513,
'13 16:00 Z': 1.5532,
'13 16:30 Z': 1.36228,
'13 17:00 Z': 0.85055,
'13 17:30 Z': 0.60181,
'13 18:00 Z': 0.61664,
'13 18:30 Z': 1.13787,
'13 19:00 Z': 1.14386,
'13 19:30 Z': 1.50625,
'13 20:00 Z': 1.78009,
'13 20:30 Z': 1.01517,
'13 21:00 Z': 0.9993,
'13 21:30 Z': 0.5021,
'13 22:00 Z': 1.16279,
'13 22:30 Z': 1.23639,
'13 23:00 Z': 0.78574,
'13 23:30 Z': 0.94701,
'14 00:00 Z': 1.21615,
'14 00:30 Z': 0.78608,
'14 01:00 Z': 0.96226,
'14 01:30 Z': 0.88396,
'14 02:00 Z': 1.23072,
'14 02:30 Z': 1.32148,
'14 03:00 Z': 1.2772,
'14 03:30 Z': 1.3111,
'14 04:00 Z': 0.72947,
'14 04:30 Z': 0.76234,
'14 05:00 Z': 0.88558,
'14 05:30 Z': 1.06662,
'14 06:00 Z': 0.33042,
'14 06:30 Z': 1.22928,
'14 07:00 Z': 1.66056,
'14 07:30 Z': 2.08089,
'14 08:00 Z': 2.76381,
'14 08:30 Z': 2.40971,
'14 09:00 Z': 2.0834,
'14 09:30 Z': 1.94467,
'14 10:00 Z': 1.64344,
'14 10:30 Z': 1.43188,
'14 11:00 Z': 1.38477,
'14 11:30 Z': 1.72627,
'14 12:00 Z': 1.18839,
'14 12:30 Z': 0.90521,
'14 13:00 Z': 0.50002,
'14 13:30 Z': 0.56659,
'14 14:00 Z': 0.71271,
'14 14:30 Z': 0.69254,
'14 15:00 Z': 1.10253,
'14 15:30 Z': 1.18901,
'14 16:00 Z': 1.365,
'14 16:30 Z': 1.27047,
'14 17:00 Z': 1.17035,
'14 17:30 Z': 1.03979,
'14 18:00 Z': 0.78177,
'14 18:30 Z': 0.7856,
'14 19:00 Z': 0.74497,
'14 19:30 Z': 0.97123,
'14 20:00 Z': 1.15279,
'14 20:30 Z': 0.95701,
'14 21:00 Z': 1.34334,
'14 21:30 Z': 0.84297,
'14 22:00 Z': 1.08552,
'14 22:30 Z': 0.72105,
'14 23:00 Z': 0.66472,
'14 23:30 Z': 0.35883,
'15 00:00 Z': 0.75791,
'15 00:30 Z': 1.31089,
'15 01:00 Z': 0.69676,
'15 01:30 Z': 0.78549,
'15 02:00 Z': 0.96037,
'15 02:30 Z': 0.89822,
'15 03:00 Z': 0.60992,
'15 03:30 Z': 0.52935,
'15 04:00 Z': 0.56569,
'15 04:30 Z': 0.4325,
'15 05:00 Z': 0.50278,
'15 05:30 Z': 0.72096,
'15 06:00 Z': 0.46978,
'15 06:30 Z': 0.55359,
'15 07:00 Z': 0.6784,
'15 07:30 Z': 0.58914,
'15 08:00 Z': 0.82537,
'15 08:30 Z': 0.88637,
'15 09:00 Z': 1.07168,
'15 09:30 Z': 1.03448,
'15 10:00 Z': 1.02651,
'15 10:30 Z': 1.10425,
'15 11:00 Z': 1.16238,
'15 11:30 Z': 1.10324,
'15 12:00 Z': 1.22395,
'15 12:30 Z': 0.58693,
'15 13:00 Z': 0.58524,
'15 13:30 Z': 0.55846,
'15 14:00 Z': 0.46132,
'15 14:30 Z': 0.53609,
'15 15:00 Z': 0.66162,
'15 15:30 Z': 0.62562,
'15 16:00 Z': 1.05928,
'15 16:30 Z': 0.87148,
'15 17:00 Z': 0.70732,
'15 17:30 Z': 0.37212,
'15 18:00 Z': 0.23766,
'15 18:30 Z': 0.66743,
'15 19:00 Z': 1.19538,
'15 19:30 Z': 1.4602,
'15 20:00 Z': 2.01706,
'15 20:30 Z': 1.5583,
'15 21:00 Z': 1.14916,
'15 21:30 Z': 0.50327,
'15 22:00 Z': 0.50801,
'15 22:30 Z': 0.45747,
'15 23:00 Z': 0.57598,
'15 23:30 Z': 0.65192,
'16 00:00 Z': 1.18414,
'16 00:30 Z': 1.05491,
'16 01:00 Z': 1.05151,
'16 01:30 Z': 1.04049,
'16 02:00 Z': 1.11107,
'16 02:30 Z': 1.08277,
'16 03:00 Z': 1.07986,
'16 03:30 Z': 0.99367,
'16 04:00 Z': 1.33777,
'16 04:30 Z': 1.25717,
'16 05:00 Z': 0.84783,
'16 05:30 Z': 0.46033,
'16 06:00 Z': 0.32151,
'16 06:30 Z': 0.72161,
'16 07:00 Z': 0.95653,
'16 07:30 Z': 1.20029,
'16 08:00 Z': 0.98646,
'16 08:30 Z': 0.88991,
'16 09:00 Z': 1.16194,
'16 09:30 Z': 1.48788,
'16 10:00 Z': 1.3421,
'16 10:30 Z': 1.29764,
'16 11:00 Z': 1.2826,
'16 11:30 Z': 1.02977,
'16 12:00 Z': 1.56693,
'16 12:30 Z': 1.41283,
'16 13:00 Z': 1.44568,
'16 13:30 Z': 1.34325,
'16 14:00 Z': 1.15219,
'16 14:30 Z': 1.03243,
'16 15:00 Z': 1.2981,
'16 15:30 Z': 1.81565,
'16 16:00 Z': 1.73551,
'16 16:30 Z': 1.73406,
'16 17:00 Z': 1.61346,
'16 17:30 Z': 1.48532,
'16 18:00 Z': 1.44163,
'16 18:30 Z': 1.39747,
'16 19:00 Z': 1.4044,
'16 19:30 Z': 1.92339,
'16 20:00 Z': 2.101,
'16 20:30 Z': 0.73979,
'16 21:00 Z': 0.80656,
'16 21:30 Z': 0.6888,
'16 22:00 Z': 1.09437,
'16 22:30 Z': 0.87396,
'16 23:00 Z': 0.64389,
'16 23:30 Z': 1.13785,
'17 00:00 Z': 1.90905,
'17 00:30 Z': 1.99085,
'17 01:00 Z': 1.38035,
'17 01:30 Z': 1.33479,
'17 02:00 Z': 1.42748,
'17 02:30 Z': 1.20324,
'17 03:00 Z': 0.8767,
'17 03:30 Z': 0.70822,
'17 04:00 Z': 0.28403,
'17 04:30 Z': 0.46473,
'17 05:00 Z': 0.56118,
'17 05:30 Z': 0.69684,
'17 06:00 Z': 0.62854,
'17 06:30 Z': 1.18433,
'17 07:00 Z': 1.03623,
'17 07:30 Z': 0.86907,
'17 08:00 Z': 1.14845,
'17 08:30 Z': 1.01583,
'17 09:00 Z': 1.03226,
'17 09:30 Z': 0.83832,
'17 10:00 Z': 0.79186,
'17 10:30 Z': 0.77193,
'17 11:00 Z': 0.7548,
'17 11:30 Z': 0.73495,
'17 12:00 Z': 0.77714,
'17 12:30 Z': 0.67871,
'17 13:00 Z': 0.37758,
'17 13:30 Z': 0.58241,
'17 14:00 Z': 0.68955,
'17 14:30 Z': 0.88125,
'17 15:00 Z': 1.13324,
'17 15:30 Z': 1.30469,
'17 16:00 Z': 1.46878,
'17 16:30 Z': 1.27387,
'17 17:00 Z': 1.08181,
'17 17:30 Z': 1.02769,
'17 18:00 Z': 1.03672,
'17 18:30 Z': 0.88808,
'17 19:00 Z': 1.05407,
'17 19:30 Z': 1.32685,
'17 20:00 Z': 1.19668,
'17 20:30 Z': 0.75883,
'17 21:00 Z': 0.53144,
'17 21:30 Z': 0.20388,
'17 22:00 Z': 1.06097,
'17 22:30 Z': 1.17019,
'17 23:00 Z': 1.0047,
'17 23:30 Z': 0.92183,
'18 00:00 Z': 1.03841,
'18 00:30 Z': 0.78743,
'18 01:00 Z': 0.89536,
'18 01:30 Z': 0.9206,
'18 02:00 Z': 0.78973,
'18 02:30 Z': 0.77867,
'18 03:00 Z': 0.89198,
'18 03:30 Z': 0.78711,
'18 04:00 Z': 0.71285,
'18 04:30 Z': 0.84874,
'18 05:00 Z': 0.71837,
'18 05:30 Z': 0.6212,
'18 06:00 Z': 0.56489,
'18 06:30 Z': 0.85354,
'18 07:00 Z': 1.09663,
'18 07:30 Z': 0.95247,
'18 08:00 Z': 0.96914,
'18 08:30 Z': 0.57771,
'18 09:00 Z': 0.61914,
'18 09:30 Z': 0.52904,
'18 10:00 Z': 0.56515,
'18 10:30 Z': 0.5765,
'18 11:00 Z': 0.75908,
'18 11:30 Z': 0.62338,
'18 12:00 Z': 0.69672,
'18 12:30 Z': 0.54629,
'18 13:00 Z': 0.21545,
'18 13:30 Z': 0.20449,
'18 14:00 Z': 0.30839,
'18 14:30 Z': 0.56373,
'18 15:00 Z': 0.89684,
'18 15:30 Z': 1.00831,
'18 16:00 Z': 0.92788,
'18 16:30 Z': 0.67568,
'18 17:00 Z': 0.62729,
'18 17:30 Z': 0.84288,
'18 18:00 Z': 0.94773,
'18 18:30 Z': 0.84549,
'18 19:00 Z': 0.82501,
'18 19:30 Z': 1.0351,
'18 20:00 Z': 1.1647,
'18 20:30 Z': 0.45164,
'18 21:00 Z': 0.6534,
'18 21:30 Z': 0.17072,
'18 22:00 Z': 0.19323,
'18 22:30 Z': 0.58633,
'18 23:00 Z': 1.11052,
'18 23:30 Z': 1.64294,
'19 00:00 Z': 1.80592,
'19 00:30 Z': 1.65842,
'19 01:00 Z': 1.68122,
'19 01:30 Z': 1.34603,
'19 02:00 Z': 1.31758,
'19 02:30 Z': 1.32838,
'19 03:00 Z': 1.20841,
'19 03:30 Z': 1.049,
'19 04:00 Z': 1.16524,
'19 04:30 Z': 1.20506,
'19 05:00 Z': 1.30235,
'19 05:30 Z': 0.95609,
'19 06:00 Z': 0.82068,
'19 06:30 Z': 1.13104,
'19 07:00 Z': 1.18089,
'19 07:30 Z': 1.75615,
'19 08:00 Z': 1.27372,
'19 08:30 Z': 0.96735,
'19 09:00 Z': 0.89901,
'19 09:30 Z': 0.88215,
'19 10:00 Z': 0.69831,
'19 10:30 Z': 0.62035,
'19 11:00 Z': 0.69341,
'19 11:30 Z': 0.62013,
'19 12:00 Z': 0.77558,
'19 12:30 Z': 1.2855,
'19 13:00 Z': 0.64803,
'19 13:30 Z': 0.46859,
'19 14:00 Z': 1.03125,
'19 14:30 Z': 1.06926,
'19 15:00 Z': 1.31571,
'19 15:30 Z': 1.52212,
'19 16:00 Z': 1.55589,
'19 16:30 Z': 1.28746,
'19 17:00 Z': 1.06353,
'19 17:30 Z': 1.12373,
'19 18:00 Z': 1.26576,
'19 18:30 Z': 1.21262,
'19 19:00 Z': 1.53157,
'19 19:30 Z': 1.54465,
'19 20:00 Z': 0.81144,
'19 20:30 Z': 0.0594,
'19 21:00 Z': 0.06565,
'19 21:30 Z': 0.10929,
'19 22:00 Z': 0.78751,
'19 22:30 Z': 0.86096,
'19 23:00 Z': 1.51476,
'19 23:30 Z': 1.61085,
'20 00:00 Z': 1.69288,
'20 00:30 Z': 1.35904,
'20 01:00 Z': 1.36158,
'20 01:30 Z': 1.2722,
'20 02:00 Z': 1.31852,
'20 02:30 Z': 1.30763,
'20 03:00 Z': 1.39578,
'20 03:30 Z': 1.48564,
'20 04:00 Z': 1.58814,
'20 04:30 Z': 1.6458,
'20 05:00 Z': 1.54215,
'20 05:30 Z': 1.40318,
'20 06:00 Z': 1.17048,
'20 06:30 Z': 1.72348,
'20 07:00 Z': 2.25129,
'20 07:30 Z': 1.9843,
'20 08:00 Z': 1.68383,
'20 08:30 Z': 1.61527,
'20 09:00 Z': 1.49922,
'20 09:30 Z': 1.57523,
'20 10:00 Z': 1.54277,
'20 10:30 Z': 1.56753,
'20 11:00 Z': 1.61371,
'20 11:30 Z': 1.35602,
'20 12:00 Z': 1.12985,
'20 12:30 Z': 0.91421,
'20 13:00 Z': 0.44765,
'20 13:30 Z': 0.41317,
'20 14:00 Z': 0.42182,
'20 14:30 Z': 0.44744,
'20 15:00 Z': 0.82495,
'20 15:30 Z': 1.04488,
'20 16:00 Z': 1.15609,
'20 16:30 Z': 0.97214,
'20 17:00 Z': 0.8283,
'20 17:30 Z': 0.96426,
'20 18:00 Z': 1.53179,
'20 18:30 Z': 1.78129,
'20 19:00 Z': 1.68823,
'20 19:30 Z': 1.87913,
'20 20:00 Z': 1.47082,
'20 20:30 Z': 0.62073,
'20 21:00 Z': 0.85628,
'20 21:30 Z': 0.7437,
'20 22:00 Z': 0.97773,
'20 22:30 Z': 1.48563,
'20 23:00 Z': 2.05082,
'20 23:30 Z': 1.88863,
'21 00:00 Z': 2.07652,
'21 00:30 Z': 1.48327,
'21 01:00 Z': 1.57562,
'21 01:30 Z': 1.38098,
'21 02:00 Z': 1.509,
'21 02:30 Z': 1.42632,
'21 03:00 Z': 1.26677,
'21 03:30 Z': 1.536,
'21 04:00 Z': 1.40368,
'21 04:30 Z': 1.41935,
'21 05:00 Z': 1.88684,
'21 05:30 Z': 1.48279,
'21 06:00 Z': 0.8958,
'21 06:30 Z': 1.08804,
'21 07:00 Z': 1.21235,
'21 07:30 Z': 0.83411,
'21 08:00 Z': 1.38121,
'21 08:30 Z': 1.28825,
'21 09:00 Z': 1.68229,
'21 09:30 Z': 1.5463,
'21 10:00 Z': 2.08394,
'21 10:30 Z': 2.28843,
'21 11:00 Z': 2.37897,
'21 11:30 Z': 2.00926,
'21 12:00 Z': 1.51801,
'21 12:30 Z': 1.2611,
'21 13:00 Z': 0.72004,
'21 13:30 Z': 0.91694,
'21 14:00 Z': 1.01688,
'21 14:30 Z': 1.04813,
'21 15:00 Z': 2.04859,
'21 15:30 Z': 1.88101,
'21 16:00 Z': 1.93874,
'21 16:30 Z': 2.62153,
'21 17:00 Z': 2.64168,
'21 17:30 Z': 2.49458,
'21 18:00 Z': 2.02753,
'21 18:30 Z': 1.93269,
'21 19:00 Z': 2.01201,
'21 19:30 Z': 1.92058,
'21 20:00 Z': 1.87325,
'21 20:30 Z': 1.34157,
'21 21:00 Z': 0.84245,
'21 21:30 Z': 0.84305,
'21 22:00 Z': 2.24939,
'21 22:30 Z': 2.22836,
'21 23:00 Z': 2.08261,
'21 23:30 Z': 2.45995,
'22 00:00 Z': 2.28682,
'22 00:30 Z': 2.72218,
'22 01:00 Z': 3.05074,
'22 01:30 Z': 2.77098,
'22 02:00 Z': 2.25667,
'22 02:30 Z': 2.28389,
'22 03:00 Z': 1.91973,
'22 03:30 Z': 1.58756,
'22 04:00 Z': 1.90434,
'22 04:30 Z': 1.88612,
'22 05:00 Z': 1.86356,
'22 05:30 Z': 1.70269,
'22 06:00 Z': 1.43816,
'22 06:30 Z': 1.39442,
'22 07:00 Z': 1.89289,
'22 07:30 Z': 1.85155,
'22 08:00 Z': 1.53414,
'22 08:30 Z': 1.91243,
'22 09:00 Z': 2.78226,
'22 09:30 Z': 2.05391,
'22 10:00 Z': 1.33147,
'22 10:30 Z': 1.52673,
'22 11:00 Z': 2.32727,
'22 11:30 Z': 2.03676,
'22 12:00 Z': 1.64996,
'22 12:30 Z': 0.83966,
'22 13:00 Z': 1.07888,
'22 13:30 Z': 0.91924,
'22 14:00 Z': 0.79018,
'22 14:30 Z': 0.84567,
'22 15:00 Z': 1.09585,
'22 15:30 Z': 1.18223,
'22 16:00 Z': 1.28211,
'22 16:30 Z': 1.42666,
'22 17:00 Z': 1.7696,
'22 17:30 Z': 1.63593,
'22 18:00 Z': 1.98103,
'22 18:30 Z': 2.26639,
'22 19:00 Z': 2.84666,
'22 19:30 Z': 2.6876,
'22 20:00 Z': 2.58754,
'22 20:30 Z': 2.12256,
'22 21:00 Z': 1.68846,
'22 21:30 Z': 1.33151,
'22 22:00 Z': 1.90684,
'22 22:30 Z': 1.20037,
'22 23:00 Z': 1.10033,
'22 23:30 Z': 1.30592,
'23 00:00 Z': 1.62274,
'23 00:30 Z': 1.63461,
'23 01:00 Z': 1.53824,
'23 01:30 Z': 1.50422,
'23 02:00 Z': 1.7027,
'23 02:30 Z': 1.70253,
'23 03:00 Z': 1.70949,
'23 03:30 Z': 1.50346,
'23 04:00 Z': 1.73085,
'23 04:30 Z': 1.62392,
'23 05:00 Z': 1.55352,
'23 05:30 Z': 1.11755,
'23 06:00 Z': 1.37418,
'23 06:30 Z': 1.06671,
'23 07:00 Z': 1.21319,
'23 07:30 Z': 1.345,
'23 08:00 Z': 1.52408,
'23 08:30 Z': 1.45028,
'23 09:00 Z': 1.44144,
'23 09:30 Z': 1.19716,
'23 10:00 Z': 1.12743,
'23 10:30 Z': 1.36963,
'23 11:00 Z': 2.01503,
'23 11:30 Z': 2.60452,
'23 12:00 Z': 3.14058,
'23 12:30 Z': 3.12791,
'23 13:00 Z': 3.34423,
'23 13:30 Z': 3.02329,
'23 14:00 Z': 2.55541,
'23 14:30 Z': 2.79565,
'23 15:00 Z': 2.81402,
'23 15:30 Z': 2.71963,
'23 16:00 Z': 2.60935,
'23 16:30 Z': 2.32363,
'23 17:00 Z': 1.80977,
'23 17:30 Z': 1.43794,
'23 18:00 Z': 0.91739,
'23 18:30 Z': 1.05399,
'23 19:00 Z': 0.87079,
'23 19:30 Z': 1.16476,
'23 20:00 Z': 1.36062,
'23 20:30 Z': 0.34094,
'23 21:00 Z': 0.31457,
'23 21:30 Z': -0.25446,
'23 22:00 Z': 0.27601,
'23 22:30 Z': 0.64789,
'23 23:00 Z': 0.42959,
'23 23:30 Z': 0.412,
'24 00:00 Z': 0.61793,
'24 00:30 Z': 0.69764,
'24 01:00 Z': 0.90813,
'24 01:30 Z': 1.0253,
'24 02:00 Z': 0.84152,
'24 02:30 Z': 0.6865,
'24 03:00 Z': 0.52552,
'24 03:30 Z': 0.4794,
'24 04:00 Z': 0.73378,
'24 04:30 Z': 0.36058,
'24 05:00 Z': 0.38477,
'24 05:30 Z': 0.28609,
'24 06:00 Z': 0.31603,
'24 06:30 Z': 0.71225,
'24 07:00 Z': 0.62264,
'24 07:30 Z': 0.86555,
'24 08:00 Z': 0.85983,
'24 08:30 Z': 0.85897,
'24 09:00 Z': 0.70337,
'24 09:30 Z': 0.6432,
'24 10:00 Z': 0.62069,
'24 10:30 Z': 0.78112,
'24 11:00 Z': 0.85841,
'24 11:30 Z': 0.79582,
'24 12:00 Z': 0.82077,
'24 12:30 Z': 0.71001,
'24 13:00 Z': 0.47979,
'24 13:30 Z': 0.5698,
'24 14:00 Z': 0.3335,
'24 14:30 Z': 0.33304,
'24 15:00 Z': 0.66381,
'24 15:30 Z': 0.75666,
'24 16:00 Z': 0.83712,
'24 16:30 Z': 1.01382,
'24 17:00 Z': 1.43467,
'24 17:30 Z': 1.36045,
'24 18:00 Z': 1.51206,
'24 18:30 Z': 1.39104,
'24 19:00 Z': 1.4977,
'24 19:30 Z': 1.38111,
'24 20:00 Z': 1.51407,
'24 20:30 Z': 0.50696,
'24 21:00 Z': 0.55159,
'24 21:30 Z': 0.47758,
'24 22:00 Z': 0.96138,
'24 22:30 Z': 0.87676,
'24 23:00 Z': 0.96133,
'24 23:30 Z': 0.97865,
'25 00:00 Z': 0.88369,
'25 00:30 Z': 0.735,
'25 01:00 Z': 0.71973,
'25 01:30 Z': 0.65984,
'25 02:00 Z': 0.66945,
'25 02:30 Z': 0.84591,
'25 03:00 Z': 1.37368,
'25 03:30 Z': 1.23357,
'25 04:00 Z': 0.56897,
'25 04:30 Z': 0.2926,
'25 05:00 Z': 0.31692,
'25 05:30 Z': 0.225,
'25 06:00 Z': -0.04341,
'25 06:30 Z': 0.68476,
'25 07:00 Z': 0.88499,
'25 07:30 Z': 1.10139,
'25 08:00 Z': 1.03082,
'25 08:30 Z': 0.94849,
'25 09:00 Z': 0.83281,
'25 09:30 Z': 0.85037,
'25 10:00 Z': 0.7681,
'25 10:30 Z': 0.64185,
'25 11:00 Z': 0.84003,
'25 11:30 Z': 0.82807,
'25 12:00 Z': 1.18436,
'25 12:30 Z': 1.07922,
'25 13:00 Z': 1.10801,
'25 13:30 Z': 0.90026,
'25 14:00 Z': 0.80961,
'25 14:30 Z': 0.769,
'25 15:00 Z': 0.96704,
'25 15:30 Z': 1.32054,
'25 16:00 Z': 1.83992,
'25 16:30 Z': 1.43547,
'25 17:00 Z': 1.89101,
'25 17:30 Z': 1.51288,
'25 18:00 Z': 1.24359,
'25 18:30 Z': 1.3577,
'25 19:00 Z': 1.28713,
'25 19:30 Z': 1.38043,
'25 20:00 Z': 0.99061,
'25 20:30 Z': 0.68262,
'25 21:00 Z': 0.56189,
'25 21:30 Z': 0.32829,
'25 22:00 Z': 0.98937,
'25 22:30 Z': 1.17767,
'25 23:00 Z': 1.45205,
'25 23:30 Z': 1.39646,
'26 00:00 Z': 1.59491,
'26 00:30 Z': 1.18061,
'26 01:00 Z': 1.18808,
'26 01:30 Z': 0.92357,
'26 02:00 Z': 1.55347,
'26 02:30 Z': 1.81865,
'26 03:00 Z': 1.64767,
'26 03:30 Z': 1.69769,
'26 04:00 Z': 1.57439,
'26 04:30 Z': 1.96697,
'26 05:00 Z': 1.95764,
'26 05:30 Z': 1.6777,
'26 06:00 Z': 1.70564,
'26 06:30 Z': 1.74784,
'26 07:00 Z': 1.51412,
'26 07:30 Z': 1.41093,
'26 08:00 Z': 1.47109,
'26 08:30 Z': 1.59109,
'26 09:00 Z': 1.69232,
'26 09:30 Z': 1.3889,
'26 10:00 Z': 1.22996,
'26 10:30 Z': 1.20609,
'26 11:00 Z': 1.36759,
'26 11:30 Z': 1.16617,
'26 12:00 Z': 1.85871,
'26 12:30 Z': 1.48984,
'26 13:00 Z': 1.20601,
'26 13:30 Z': 0.90091,
'26 14:00 Z': 0.91689,
'26 14:30 Z': 1.082,
'26 15:00 Z': 1.48897,
'26 15:30 Z': 1.51795,
'26 16:00 Z': 1.52094,
'26 16:30 Z': 1.7498,
'26 17:00 Z': 2.05784,
'26 17:30 Z': 1.86011,
'26 18:00 Z': 1.75667,
'26 18:30 Z': 1.65498,
'26 19:00 Z': 1.72643,
'26 19:30 Z': 1.39335,
'26 20:00 Z': 1.15879,
'26 20:30 Z': 0.74862,
'26 21:00 Z': 0.88797,
'26 21:30 Z': 0.46201,
'26 22:00 Z': 1.58129,
'26 22:30 Z': 1.50798,
'26 23:00 Z': 0.94016,
'26 23:30 Z': 1.02877,
'27 00:00 Z': 0.89011,
'27 00:30 Z': 0.76198,
'27 01:00 Z': 0.77394,
'27 01:30 Z': 0.64679,
'27 02:00 Z': 0.68106,
'27 02:30 Z': 0.57457,
'27 03:00 Z': 0.65676,
'27 03:30 Z': 0.5753,
'27 04:00 Z': 0.8061,
'27 04:30 Z': 0.71237,
'27 05:00 Z': 0.50753,
'27 05:30 Z': 0.30897,
'27 06:00 Z': 0.30684,
'27 06:30 Z': 0.53569,
'27 07:00 Z': 0.6093,
'27 07:30 Z': 0.68262,
'27 08:00 Z': 0.62851,
'27 08:30 Z': 0.66261,
'27 09:00 Z': 0.77913,
'27 09:30 Z': 0.90364,
'27 10:00 Z': 0.74381,
'27 10:30 Z': 0.68962,
'27 11:00 Z': 0.65973,
'27 11:30 Z': 0.45078,
'27 12:00 Z': 0.77488,
'27 12:30 Z': 0.57628,
'27 13:00 Z': 0.28371,
'27 13:30 Z': 0.04649,
'27 14:00 Z': -0.00174,
'27 14:30 Z': -0.04671,
'27 15:00 Z': 0.12429,
'27 15:30 Z': 0.20365,
'27 16:00 Z': 0.31946,
'27 16:30 Z': 0.26015,
'27 17:00 Z': 0.38667,
'27 17:30 Z': 0.48333,
'27 18:00 Z': 0.64997,
'27 18:30 Z': 1.04999,
'27 19:00 Z': 1.22745,
'27 19:30 Z': 1.81793,
'27 20:00 Z': 1.92716,
'27 20:30 Z': 0.89248,
'27 21:00 Z': 1.04721,
'27 21:30 Z': 1.25645,
'27 22:00 Z': 1.40992,
'27 22:30 Z': 1.2061,
'27 23:00 Z': 1.02742,
'27 23:30 Z': 1.00891,
'28 00:00 Z': 1.59903,
'28 00:30 Z': 1.42405,
'28 01:00 Z': 1.86881,
'28 01:30 Z': 1.62074,
'28 02:00 Z': 1.69604,
'28 02:30 Z': 1.18641,
'28 03:00 Z': 1.01767,
'28 03:30 Z': 0.77934,
'28 04:00 Z': 0.85595,
'28 04:30 Z': 0.7688,
'28 05:00 Z': 0.76322,
'28 05:30 Z': 0.99783,
'28 06:00 Z': 0.55499,
'28 06:30 Z': 1.37468,
'28 07:00 Z': 2.3278,
'28 07:30 Z': 2.24469,
'28 08:00 Z': 2.524,
'28 08:30 Z': 2.83961,
'28 09:00 Z': 2.6007,
'28 09:30 Z': 1.90714,
'28 10:00 Z': 2.08869,
'28 10:30 Z': 1.82686,
'28 11:00 Z': 1.80186,
'28 11:30 Z': 1.72217,
'28 12:00 Z': 1.63216,
'28 12:30 Z': 1.13505,
'28 13:00 Z': 0.52466,
'28 13:30 Z': 0.23468,
'28 14:00 Z': 0.36446,
'28 14:30 Z': 0.32521,
'28 15:00 Z': 0.76647,
'28 15:30 Z': 0.85113,
'28 16:00 Z': 1.32275,
'28 16:30 Z': 1.57751,
'28 17:00 Z': 1.68044,
'28 17:30 Z': 1.31451,
'28 18:00 Z': 2.0004,
'28 18:30 Z': 1.79838,
'28 19:00 Z': 2.42455,
'28 19:30 Z': 2.47729,
'28 20:00 Z': 2.03433,
'28 20:30 Z': 0.85735,
'28 21:00 Z': 0.65114,
'28 21:30 Z': 0.46546,
'28 22:00 Z': 1.58195,
'28 22:30 Z': 1.61596,
'28 23:00 Z': 0.89037,
'28 23:30 Z': 0.8718,
'29 00:00 Z': 1.80201,
'29 00:30 Z': 1.64877,
'29 01:00 Z': 1.3178,
'29 01:30 Z': 1.103,
'29 02:00 Z': 1.01828,
'29 02:30 Z': 1.00752,
'29 03:00 Z': 0.92448,
'29 03:30 Z': 0.74643,
'29 04:00 Z': 0.77892,
'29 04:30 Z': 1.13247,
'29 05:00 Z': 0.91834,
'29 05:30 Z': 1.37727,
'29 06:00 Z': 0.69436,
'29 06:30 Z': 0.67332,
'29 07:00 Z': 0.51325,
'29 07:30 Z': 0.54277,
'29 08:00 Z': 0.11139,
'29 08:30 Z': 0.346,
'29 09:00 Z': 0.64483,
'29 09:30 Z': 1.06655,
'29 10:00 Z': 1.23682,
'29 10:30 Z': 1.45307,
'29 11:00 Z': 1.70789,
'29 11:30 Z': 1.81419,
'29 12:00 Z': 1.60438,
'29 12:30 Z': 0.98717,
'29 13:00 Z': 1.27795,
'29 13:30 Z': 1.04828,
'29 14:00 Z': 0.82375,
'29 14:30 Z': 0.74359,
'29 15:00 Z': 0.81223,
'29 15:30 Z': 0.97393,
'29 16:00 Z': 0.89398,
'29 16:30 Z': 0.70421,
'29 17:00 Z': 0.73515,
'29 17:30 Z': 0.94527,
'29 18:00 Z': 1.74689,
'29 18:30 Z': 1.88138,
'29 19:00 Z': 2.47815,
'29 19:30 Z': 3.47986,
'29 20:00 Z': 2.99797,
'29 20:30 Z': 2.08674,
'29 21:00 Z': 1.74316,
'29 21:30 Z': 0.28609,
'29 22:00 Z': 1.07881,
'29 22:30 Z': 0.96794,
'29 23:00 Z': 1.71673,
'29 23:30 Z': 2.05345,
'30 00:00 Z': 2.41994,
'30 00:30 Z': 2.24147,
'30 01:00 Z': 1.9384,
'30 01:30 Z': 1.8521,
'30 02:00 Z': 1.84876,
'30 02:30 Z': 1.77739,
'30 03:00 Z': 1.59442,
'30 03:30 Z': 1.60558,
'30 04:00 Z': 2.01396,
'30 04:30 Z': 2.09477,
'30 05:00 Z': 2.16941,
'30 05:30 Z': 2.22969,
'30 06:00 Z': 1.72212,
'30 06:30 Z': 1.25603,
'30 07:00 Z': 1.38871,
'30 07:30 Z': 1.50678,
'30 08:00 Z': 1.4175,
'30 08:30 Z': 1.84236,
'30 09:00 Z': 2.23814,
'30 09:30 Z': 2.69282,
'30 10:00 Z': 2.91502,
'30 10:30 Z': 2.71794,
'30 11:00 Z': 2.85665,
'30 11:30 Z': 2.74559,
'30 12:00 Z': 2.2315,
'30 12:30 Z': 1.95915,
'30 13:00 Z': 1.34255,
'30 13:30 Z': 0.86278,
'30 14:00 Z': 0.75846,
'30 14:30 Z': 0.7969,
'30 15:00 Z': 0.87447,
'30 15:30 Z': 1.03131,
'30 16:00 Z': 1.18551,
'30 16:30 Z': 1.1762,
'30 17:00 Z': 1.33676,
'30 17:30 Z': 1.14013,
'30 18:00 Z': 1.40002,
'30 18:30 Z': 1.35265,
'30 19:00 Z': 1.96918,
'30 19:30 Z': 2.97288,
'30 20:00 Z': 2.71102,
'30 20:30 Z': 1.79963,
'30 21:00 Z': 1.76509,
'30 21:30 Z': 1.10608,
'30 22:00 Z': 1.28187,
'30 22:30 Z': 1.40169,
'30 23:00 Z': 0.38832,
'30 23:30 Z': 0.33524,
'31 00:00 Z': 0.4092,
'31 00:30 Z': 0.45083,
'31 01:00 Z': 0.81028,
'31 01:30 Z': 0.69523,
'31 02:00 Z': 0.56055,
'31 02:30 Z': 0.70068,
'31 03:00 Z': 1.24891,
'31 03:30 Z': 0.4171,
'31 04:00 Z': 0.84683,
'31 04:30 Z': 0.70376,
'31 05:00 Z': 0.79573,
'31 05:30 Z': 1.07917,
'31 06:00 Z': 0.53081,
'31 06:30 Z': 1.24392,
'31 07:00 Z': 1.59078,
'31 07:30 Z': 1.79517,
'31 08:00 Z': 2.74811,
'31 08:30 Z': 2.10518,
'31 09:00 Z': 1.86664,
'31 09:30 Z': 1.53516,
'31 10:00 Z': 1.49007,
'31 10:30 Z': 1.34152,
'31 11:00 Z': 1.32274,
'31 11:30 Z': 1.12082,
'31 12:00 Z': 1.39994,
'31 12:30 Z': 1.33811,
'31 13:00 Z': 0.97909,
'31 13:30 Z': 1.16362,
'31 14:00 Z': 1.02393,
'31 14:30 Z': 0.84681,
'31 15:00 Z': 1.14052,
'31 15:30 Z': 1.3318,
'31 16:00 Z': 1.88933,
'31 16:30 Z': 1.54799,
'31 17:00 Z': 1.28973,
'31 17:30 Z': 1.088,
'31 18:00 Z': 1.09638,
'31 18:30 Z': 1.51065,
'31 19:00 Z': 2.48309,
'31 19:30 Z': 2.36245,
'31 20:00 Z': 1.84053,
'31 20:30 Z': 0.97971,
'31 21:00 Z': 0.94887,
'31 21:30 Z': 0.69211,
'31 22:00 Z': 1.20716,
'31 22:30 Z': 0.79189,
'31 23:00 Z': 0.60927,
'31 23:30 Z': 0.6107}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bsuos]]></value>
        <value><![CDATA[215]]></value>
        <value><![CDATA[2010-09-01T00:00Z]]></value>
        <value><![CDATA[def rates_gbp_per_mwh():
    return {
'01 00:00 Z': 0.84851,
'01 00:30 Z': 0.77845,
'01 01:00 Z': 0.69109,
'01 01:30 Z': 0.82094,
'01 02:00 Z': 0.83961,
'01 02:30 Z': 0.97913,
'01 03:00 Z': 0.97582,
'01 03:30 Z': 0.85538,
'01 04:00 Z': 1.00253,
'01 04:30 Z': 0.94308,
'01 05:00 Z': 0.93666,
'01 05:30 Z': 0.84543,
'01 06:00 Z': 0.97357,
'01 06:30 Z': 1.25344,
'01 07:00 Z': 1.70199,
'01 07:30 Z': 1.83638,
'01 08:00 Z': 1.59857,
'01 08:30 Z': 1.22954,
'01 09:00 Z': 1.1427,
'01 09:30 Z': 0.8549,
'01 10:00 Z': 0.91242,
'01 10:30 Z': 0.78509,
'01 11:00 Z': 1.12202,
'01 11:30 Z': 1.14017,
'01 12:00 Z': 1.1365,
'01 12:30 Z': 1.01052,
'01 13:00 Z': 0.65114,
'01 13:30 Z': 0.59229,
'01 14:00 Z': 0.55516,
'01 14:30 Z': 0.7124,
'01 15:00 Z': 0.88907,
'01 15:30 Z': 0.88196,
'01 16:00 Z': 0.8332,
'01 16:30 Z': 0.6814,
'01 17:00 Z': 0.66034,
'01 17:30 Z': 0.665,
'01 18:00 Z': 0.5102,
'01 18:30 Z': 0.78125,
'01 19:00 Z': 1.33517,
'01 19:30 Z': 1.05985,
'01 20:00 Z': 1.06209,
'01 20:30 Z': 0.4412,
'01 21:00 Z': 0.26217,
'01 21:30 Z': -0.08717,
'01 22:00 Z': 0.59564,
'01 22:30 Z': 0.39263,
'01 23:00 Z': 0.14575,
'01 23:30 Z': 0.24463,
'02 00:00 Z': 0.55274,
'02 00:30 Z': 0.53765,
'02 01:00 Z': 0.72584,
'02 01:30 Z': 0.61666,
'02 02:00 Z': 0.71416,
'02 02:30 Z': 0.63977,
'02 03:00 Z': 0.6325,
'02 03:30 Z': 0.76142,
'02 04:00 Z': 0.96539,
'02 04:30 Z': 0.94658,
'02 05:00 Z': 1.44011,
'02 05:30 Z': 1.7729,
'02 06:00 Z': 1.93099,
'02 06:30 Z': 2.11315,
'02 07:00 Z': 2.09229,
'02 07:30 Z': 1.56261,
'02 08:00 Z': 1.04955,
'02 08:30 Z': 0.94949,
'02 09:00 Z': 1.11324,
'02 09:30 Z': 1.22676,
'02 10:00 Z': 1.39355,
'02 10:30 Z': 1.40224,
'02 11:00 Z': 1.14505,
'02 11:30 Z': 0.91943,
'02 12:00 Z': 1.11089,
'02 12:30 Z': 1.06213,
'02 13:00 Z': 0.88868,
'02 13:30 Z': 1.07002,
'02 14:00 Z': 0.676,
'02 14:30 Z': 0.55639,
'02 15:00 Z': 0.91065,
'02 15:30 Z': 1.03492,
'02 16:00 Z': 1.02319,
'02 16:30 Z': 0.91822,
'02 17:00 Z': 0.75746,
'02 17:30 Z': 0.77608,
'02 18:00 Z': 0.90297,
'02 18:30 Z': 1.07438,
'02 19:00 Z': 1.28741,
'02 19:30 Z': 1.22826,
'02 20:00 Z': 1.04094,
'02 20:30 Z': 0.29764,
'02 21:00 Z': 0.56261,
'02 21:30 Z': 0.3348,
'02 22:00 Z': 0.23559,
'02 22:30 Z': 0.18759,
'02 23:00 Z': 0.07377,
'02 23:30 Z': 0.26842,
'03 00:00 Z': 1.04494,
'03 00:30 Z': 1.19983,
'03 01:00 Z': 1.26182,
'03 01:30 Z': 1.11979,
'03 02:00 Z': 1.1445,
'03 02:30 Z': 1.17317,
'03 03:00 Z': 1.2006,
'03 03:30 Z': 1.41401,
'03 04:00 Z': 1.57739,
'03 04:30 Z': 1.21248,
'03 05:00 Z': 1.42469,
'03 05:30 Z': 1.30819,
'03 06:00 Z': 1.64937,
'03 06:30 Z': 1.78474,
'03 07:00 Z': 1.60503,
'03 07:30 Z': 1.49872,
'03 08:00 Z': 1.17883,
'03 08:30 Z': 0.93166,
'03 09:00 Z': 1.02247,
'03 09:30 Z': 1.12142,
'03 10:00 Z': 1.201,
'03 10:30 Z': 1.02567,
'03 11:00 Z': 1.10398,
'03 11:30 Z': 0.96888,
'03 12:00 Z': 1.52882,
'03 12:30 Z': 1.32668,
'03 13:00 Z': 0.97053,
'03 13:30 Z': 0.99863,
'03 14:00 Z': 1.01334,
'03 14:30 Z': 1.20256,
'03 15:00 Z': 1.3498,
'03 15:30 Z': 1.40289,
'03 16:00 Z': 1.43288,
'03 16:30 Z': 1.26675,
'03 17:00 Z': 1.06143,
'03 17:30 Z': 0.95981,
'03 18:00 Z': 0.79664,
'03 18:30 Z': 1.01387,
'03 19:00 Z': 1.45413,
'03 19:30 Z': 1.93068,
'03 20:00 Z': 1.68655,
'03 20:30 Z': 0.82655,
'03 21:00 Z': 0.94882,
'03 21:30 Z': 1.22749,
'03 22:00 Z': 0.68619,
'03 22:30 Z': 0.73444,
'03 23:00 Z': 0.79124,
'03 23:30 Z': 0.73522,
'04 00:00 Z': 0.90659,
'04 00:30 Z': 0.81382,
'04 01:00 Z': 0.57194,
'04 01:30 Z': 0.58577,
'04 02:00 Z': 0.93505,
'04 02:30 Z': 1.00114,
'04 03:00 Z': 0.95492,
'04 03:30 Z': 0.84958,
'04 04:00 Z': 0.58513,
'04 04:30 Z': 0.52518,
'04 05:00 Z': 0.91714,
'04 05:30 Z': 0.55195,
'04 06:00 Z': -0.11703,
'04 06:30 Z': 0.81623,
'04 07:00 Z': 1.17618,
'04 07:30 Z': 1.68518,
'04 08:00 Z': 1.80778,
'04 08:30 Z': 1.38725,
'04 09:00 Z': 1.12146,
'04 09:30 Z': 1.13421,
'04 10:00 Z': 1.12044,
'04 10:30 Z': 1.12022,
'04 11:00 Z': 1.01656,
'04 11:30 Z': 0.80918,
'04 12:00 Z': 0.9141,
'04 12:30 Z': 0.72855,
'04 13:00 Z': 0.47093,
'04 13:30 Z': 0.40073,
'04 14:00 Z': 0.20852,
'04 14:30 Z': 0.26125,
'04 15:00 Z': 0.72536,
'04 15:30 Z': 0.75503,
'04 16:00 Z': 0.93574,
'04 16:30 Z': 1.21111,
'04 17:00 Z': 1.33381,
'04 17:30 Z': 1.53812,
'04 18:00 Z': 1.58032,
'04 18:30 Z': 1.61114,
'04 19:00 Z': 1.74304,
'04 19:30 Z': 1.77255,
'04 20:00 Z': 1.66477,
'04 20:30 Z': 1.06219,
'04 21:00 Z': 0.68917,
'04 21:30 Z': 0.66435,
'04 22:00 Z': 1.42022,
'04 22:30 Z': 1.05259,
'04 23:00 Z': 0.77095,
'04 23:30 Z': 0.82846,
'05 00:00 Z': 1.16183,
'05 00:30 Z': 1.2291,
'05 01:00 Z': 1.54331,
'05 01:30 Z': 1.48818,
'05 02:00 Z': 1.78584,
'05 02:30 Z': 1.45371,
'05 03:00 Z': 1.33252,
'05 03:30 Z': 0.96918,
'05 04:00 Z': 1.04892,
'05 04:30 Z': 1.26463,
'05 05:00 Z': 1.25427,
'05 05:30 Z': 0.98473,
'05 06:00 Z': 0.39252,
'05 06:30 Z': 0.1406,
'05 07:00 Z': 0.9805,
'05 07:30 Z': 0.73852,
'05 08:00 Z': 0.537,
'05 08:30 Z': 0.64672,
'05 09:00 Z': 0.74813,
'05 09:30 Z': 1.39733,
'05 10:00 Z': 1.59078,
'05 10:30 Z': 1.62589,
'05 11:00 Z': 1.70005,
'05 11:30 Z': 1.1596,
'05 12:00 Z': 0.84012,
'05 12:30 Z': 0.43056,
'05 13:00 Z': 0.30468,
'05 13:30 Z': 0.2741,
'05 14:00 Z': 0.28725,
'05 14:30 Z': 0.32562,
'05 15:00 Z': 0.5219,
'05 15:30 Z': 0.74807,
'05 16:00 Z': 1.13013,
'05 16:30 Z': 1.30236,
'05 17:00 Z': 1.48738,
'05 17:30 Z': 1.49185,
'05 18:00 Z': 2.29768,
'05 18:30 Z': 2.62467,
'05 19:00 Z': 2.897,
'05 19:30 Z': 2.11795,
'05 20:00 Z': 1.77153,
'05 20:30 Z': 1.82647,
'05 21:00 Z': 0.8439,
'05 21:30 Z': 0.232,
'05 22:00 Z': 0.64107,
'05 22:30 Z': 0.61823,
'05 23:00 Z': 0.42999,
'05 23:30 Z': 0.7625,
'06 00:00 Z': 1.20862,
'06 00:30 Z': 1.10379,
'06 01:00 Z': 1.10328,
'06 01:30 Z': 0.95828,
'06 02:00 Z': 0.86197,
'06 02:30 Z': 0.89292,
'06 03:00 Z': 0.96476,
'06 03:30 Z': 1.4189,
'06 04:00 Z': 1.33918,
'06 04:30 Z': 1.58125,
'06 05:00 Z': 1.86978,
'06 05:30 Z': 1.82398,
'06 06:00 Z': 1.38708,
'06 06:30 Z': 1.30468,
'06 07:00 Z': 1.07556,
'06 07:30 Z': 0.92797,
'06 08:00 Z': 1.25826,
'06 08:30 Z': 1.15599,
'06 09:00 Z': 1.09906,
'06 09:30 Z': 1.11747,
'06 10:00 Z': 1.20139,
'06 10:30 Z': 1.23509,
'06 11:00 Z': 1.22823,
'06 11:30 Z': 1.00535,
'06 12:00 Z': 0.88466,
'06 12:30 Z': 0.54325,
'06 13:00 Z': 0.46064,
'06 13:30 Z': 0.36333,
'06 14:00 Z': 0.30133,
'06 14:30 Z': 0.36407,
'06 15:00 Z': 0.46809,
'06 15:30 Z': 0.65954,
'06 16:00 Z': 0.86989,
'06 16:30 Z': 0.83827,
'06 17:00 Z': 0.62332,
'06 17:30 Z': 0.92314,
'06 18:00 Z': 1.36497,
'06 18:30 Z': 1.46839,
'06 19:00 Z': 1.7325,
'06 19:30 Z': 2.13,
'06 20:00 Z': 3.03043,
'06 20:30 Z': 0.30364,
'06 21:00 Z': 0.31603,
'06 21:30 Z': -0.23989,
'06 22:00 Z': 0.41886,
'06 22:30 Z': 0.42822,
'06 23:00 Z': 0.86557,
'06 23:30 Z': 1.18025,
'07 00:00 Z': 1.49817,
'07 00:30 Z': 3.2622,
'07 01:00 Z': 2.45113,
'07 01:30 Z': 2.27255,
'07 02:00 Z': 2.2871,
'07 02:30 Z': 2.32944,
'07 03:00 Z': 2.38093,
'07 03:30 Z': 2.43959,
'07 04:00 Z': 3.44833,
'07 04:30 Z': 3.07703,
'07 05:00 Z': 3.09695,
'07 05:30 Z': 2.53522,
'07 06:00 Z': 3.19583,
'07 06:30 Z': 2.74464,
'07 07:00 Z': 2.79828,
'07 07:30 Z': 2.46425,
'07 08:00 Z': 2.09241,
'07 08:30 Z': 1.3619,
'07 09:00 Z': 1.13386,
'07 09:30 Z': 1.19285,
'07 10:00 Z': 1.16248,
'07 10:30 Z': 1.15658,
'07 11:00 Z': 1.50295,
'07 11:30 Z': 1.2577,
'07 12:00 Z': 1.48508,
'07 12:30 Z': 1.27013,
'07 13:00 Z': 1.55119,
'07 13:30 Z': 1.11583,
'07 14:00 Z': 1.0271,
'07 14:30 Z': 1.02698,
'07 15:00 Z': 1.57895,
'07 15:30 Z': 1.76156,
'07 16:00 Z': 1.83151,
'07 16:30 Z': 1.7705,
'07 17:00 Z': 1.78627,
'07 17:30 Z': 1.3026,
'07 18:00 Z': 0.77134,
'07 18:30 Z': 0.78913,
'07 19:00 Z': 1.9532,
'07 19:30 Z': 1.37699,
'07 20:00 Z': 1.04304,
'07 20:30 Z': 0.89952,
'07 21:00 Z': 0.86385,
'07 21:30 Z': 0.75684,
'07 22:00 Z': 0.87582,
'07 22:30 Z': 0.88595,
'07 23:00 Z': 0.7705,
'07 23:30 Z': 0.86763,
'08 00:00 Z': 1.01566,
'08 00:30 Z': 0.87836,
'08 01:00 Z': 0.73199,
'08 01:30 Z': 0.61403,
'08 02:00 Z': 0.68726,
'08 02:30 Z': 0.57539,
'08 03:00 Z': 0.57425,
'08 03:30 Z': 0.57863,
'08 04:00 Z': 0.64616,
'08 04:30 Z': 0.73977,
'08 05:00 Z': 1.47503,
'08 05:30 Z': 1.64626,
'08 06:00 Z': 2.04194,
'08 06:30 Z': 2.10512,
'08 07:00 Z': 1.81408,
'08 07:30 Z': 0.81576,
'08 08:00 Z': 1.13218,
'08 08:30 Z': 0.99737,
'08 09:00 Z': 0.84735,
'08 09:30 Z': 0.9002,
'08 10:00 Z': 1.25817,
'08 10:30 Z': 1.19509,
'08 11:00 Z': 1.12627,
'08 11:30 Z': 0.98523,
'08 12:00 Z': 1.06985,
'08 12:30 Z': 0.79686,
'08 13:00 Z': 0.60061,
'08 13:30 Z': 0.63059,
'08 14:00 Z': 0.99192,
'08 14:30 Z': 1.14085,
'08 15:00 Z': 1.51424,
'08 15:30 Z': 2.10159,
'08 16:00 Z': 2.02318,
'08 16:30 Z': 1.69217,
'08 17:00 Z': 1.23823,
'08 17:30 Z': 0.92198,
'08 18:00 Z': 0.59644,
'08 18:30 Z': 1.05503,
'08 19:00 Z': 1.63894,
'08 19:30 Z': 1.19837,
'08 20:00 Z': 0.90226,
'08 20:30 Z': 0.87026,
'08 21:00 Z': 0.98649,
'08 21:30 Z': 0.51231,
'08 22:00 Z': 0.71753,
'08 22:30 Z': 0.87591,
'08 23:00 Z': 0.78939,
'08 23:30 Z': 0.48824,
'09 00:00 Z': 0.81894,
'09 00:30 Z': 0.87736,
'09 01:00 Z': 0.80543,
'09 01:30 Z': 0.80389,
'09 02:00 Z': 0.91232,
'09 02:30 Z': 0.84941,
'09 03:00 Z': 0.78617,
'09 03:30 Z': 0.99503,
'09 04:00 Z': 0.95145,
'09 04:30 Z': 0.64702,
'09 05:00 Z': 1.11053,
'09 05:30 Z': 0.87084,
'09 06:00 Z': 1.32399,
'09 06:30 Z': 1.88509,
'09 07:00 Z': 1.73045,
'09 07:30 Z': 1.02346,
'09 08:00 Z': 1.06581,
'09 08:30 Z': 1.18458,
'09 09:00 Z': 1.18778,
'09 09:30 Z': 1.56815,
'09 10:00 Z': 1.56916,
'09 10:30 Z': 1.47137,
'09 11:00 Z': 1.52016,
'09 11:30 Z': 1.30367,
'09 12:00 Z': 1.29824,
'09 12:30 Z': 1.40214,
'09 13:00 Z': 1.18836,
'09 13:30 Z': 0.91297,
'09 14:00 Z': 0.71176,
'09 14:30 Z': 1.10015,
'09 15:00 Z': 1.4651,
'09 15:30 Z': 1.62928,
'09 16:00 Z': 1.6605,
'09 16:30 Z': 1.7059,
'09 17:00 Z': 1.52338,
'09 17:30 Z': 1.19643,
'09 18:00 Z': 1.07447,
'09 18:30 Z': 1.43564,
'09 19:00 Z': 2.25706,
'09 19:30 Z': 1.97394,
'09 20:00 Z': 1.74051,
'09 20:30 Z': 1.22652,
'09 21:00 Z': 1.17559,
'09 21:30 Z': 0.94903,
'09 22:00 Z': 1.41686,
'09 22:30 Z': 1.71086,
'09 23:00 Z': 1.74145,
'09 23:30 Z': 1.60045,
'10 00:00 Z': 1.80902,
'10 00:30 Z': 1.82456,
'10 01:00 Z': 1.81949,
'10 01:30 Z': 1.71858,
'10 02:00 Z': 1.78705,
'10 02:30 Z': 1.89327,
'10 03:00 Z': 1.71154,
'10 03:30 Z': 1.49723,
'10 04:00 Z': 0.64813,
'10 04:30 Z': 0.21609,
'10 05:00 Z': 0.40147,
'10 05:30 Z': 0.78707,
'10 06:00 Z': 1.0328,
'10 06:30 Z': 1.50087,
'10 07:00 Z': 2.05254,
'10 07:30 Z': 1.31324,
'10 08:00 Z': 1.55548,
'10 08:30 Z': 1.40183,
'10 09:00 Z': 1.09786,
'10 09:30 Z': 1.40163,
'10 10:00 Z': 1.56874,
'10 10:30 Z': 1.79759,
'10 11:00 Z': 1.59404,
'10 11:30 Z': 1.40411,
'10 12:00 Z': 1.59248,
'10 12:30 Z': 1.45196,
'10 13:00 Z': 1.14511,
'10 13:30 Z': 0.96584,
'10 14:00 Z': 0.81897,
'10 14:30 Z': 0.77448,
'10 15:00 Z': 1.05677,
'10 15:30 Z': 1.47442,
'10 16:00 Z': 1.78071,
'10 16:30 Z': 1.38358,
'10 17:00 Z': 1.29722,
'10 17:30 Z': 1.53009,
'10 18:00 Z': 1.04147,
'10 18:30 Z': 1.91385,
'10 19:00 Z': 1.7718,
'10 19:30 Z': 1.63887,
'10 20:00 Z': 1.5454,
'10 20:30 Z': 1.12379,
'10 21:00 Z': 0.9712,
'10 21:30 Z': 0.64769,
'10 22:00 Z': 1.16568,
'10 22:30 Z': 1.30786,
'10 23:00 Z': 0.95552,
'10 23:30 Z': 0.7262,
'11 00:00 Z': 1.30078,
'11 00:30 Z': 1.35399,
'11 01:00 Z': 1.09159,
'11 01:30 Z': 1.04378,
'11 02:00 Z': 1.49452,
'11 02:30 Z': 1.26124,
'11 03:00 Z': 1.13142,
'11 03:30 Z': 1.05846,
'11 04:00 Z': 0.79909,
'11 04:30 Z': 0.76558,
'11 05:00 Z': 1.12706,
'11 05:30 Z': 0.78136,
'11 06:00 Z': 0.68804,
'11 06:30 Z': 1.07007,
'11 07:00 Z': 1.24821,
'11 07:30 Z': 1.23943,
'11 08:00 Z': 1.67956,
'11 08:30 Z': 2.10151,
'11 09:00 Z': 1.68122,
'11 09:30 Z': 1.70222,
'11 10:00 Z': 1.82759,
'11 10:30 Z': 1.84032,
'11 11:00 Z': 1.74578,
'11 11:30 Z': 1.70763,
'11 12:00 Z': 1.72135,
'11 12:30 Z': 1.39245,
'11 13:00 Z': 1.02933,
'11 13:30 Z': 0.89941,
'11 14:00 Z': 1.00968,
'11 14:30 Z': 1.03597,
'11 15:00 Z': 1.39581,
'11 15:30 Z': 2.13461,
'11 16:00 Z': 2.15999,
'11 16:30 Z': 2.02893,
'11 17:00 Z': 1.80432,
'11 17:30 Z': 1.88705,
'11 18:00 Z': 1.33336,
'11 18:30 Z': 2.20502,
'11 19:00 Z': 2.4072,
'11 19:30 Z': 1.70408,
'11 20:00 Z': 1.5535,
'11 20:30 Z': 1.37658,
'11 21:00 Z': 1.19671,
'11 21:30 Z': 1.04971,
'11 22:00 Z': 0.95835,
'11 22:30 Z': 0.92939,
'11 23:00 Z': 1.06734,
'11 23:30 Z': 1.41661,
'12 00:00 Z': 1.73664,
'12 00:30 Z': 1.87933,
'12 01:00 Z': 1.83533,
'12 01:30 Z': 1.65853,
'12 02:00 Z': 1.6909,
'12 02:30 Z': 1.61778,
'12 03:00 Z': 1.48414,
'12 03:30 Z': 1.27143,
'12 04:00 Z': 1.20485,
'12 04:30 Z': 1.21012,
'12 05:00 Z': 1.24533,
'12 05:30 Z': 1.39817,
'12 06:00 Z': 1.55385,
'12 06:30 Z': 1.55066,
'12 07:00 Z': 1.22176,
'12 07:30 Z': 1.37878,
'12 08:00 Z': 1.44059,
'12 08:30 Z': 1.59189,
'12 09:00 Z': 1.86388,
'12 09:30 Z': 1.80625,
'12 10:00 Z': 1.65193,
'12 10:30 Z': 1.86408,
'12 11:00 Z': 2.04651,
'12 11:30 Z': 1.9772,
'12 12:00 Z': 2.01204,
'12 12:30 Z': 1.69859,
'12 13:00 Z': 1.58092,
'12 13:30 Z': 1.42048,
'12 14:00 Z': 1.3602,
'12 14:30 Z': 1.41682,
'12 15:00 Z': 1.64178,
'12 15:30 Z': 1.72971,
'12 16:00 Z': 1.6651,
'12 16:30 Z': 1.71939,
'12 17:00 Z': 1.63218,
'12 17:30 Z': 1.57053,
'12 18:00 Z': 1.26717,
'12 18:30 Z': 2.09415,
'12 19:00 Z': 2.88172,
'12 19:30 Z': 2.61247,
'12 20:00 Z': 2.4099,
'12 20:30 Z': 1.67184,
'12 21:00 Z': 1.40765,
'12 21:30 Z': 1.43164,
'12 22:00 Z': 1.94412,
'12 22:30 Z': 1.28773,
'12 23:00 Z': 1.00356,
'12 23:30 Z': 1.01132,
'13 00:00 Z': 1.31887,
'13 00:30 Z': 1.5727,
'13 01:00 Z': 1.49568,
'13 01:30 Z': 1.43486,
'13 02:00 Z': 1.67501,
'13 02:30 Z': 1.73935,
'13 03:00 Z': 1.59405,
'13 03:30 Z': 1.50511,
'13 04:00 Z': 1.10885,
'13 04:30 Z': 1.28139,
'13 05:00 Z': 2.01801,
'13 05:30 Z': 2.18691,
'13 06:00 Z': 1.98756,
'13 06:30 Z': 2.02309,
'13 07:00 Z': 2.13007,
'13 07:30 Z': 1.76037,
'13 08:00 Z': 1.89732,
'13 08:30 Z': 1.71027,
'13 09:00 Z': 1.78942,
'13 09:30 Z': 1.76588,
'13 10:00 Z': 1.77823,
'13 10:30 Z': 1.78157,
'13 11:00 Z': 2.15058,
'13 11:30 Z': 2.27972,
'13 12:00 Z': 2.3523,
'13 12:30 Z': 1.87615,
'13 13:00 Z': 1.53004,
'13 13:30 Z': 1.10753,
'13 14:00 Z': 0.68477,
'13 14:30 Z': 0.75095,
'13 15:00 Z': 1.33512,
'13 15:30 Z': 1.52076,
'13 16:00 Z': 1.91828,
'13 16:30 Z': 2.23034,
'13 17:00 Z': 1.69378,
'13 17:30 Z': 1.4581,
'13 18:00 Z': 1.08444,
'13 18:30 Z': 1.58208,
'13 19:00 Z': 1.22263,
'13 19:30 Z': 1.01265,
'13 20:00 Z': 1.1082,
'13 20:30 Z': 1.02904,
'13 21:00 Z': 0.98486,
'13 21:30 Z': 0.52497,
'13 22:00 Z': 0.80718,
'13 22:30 Z': 1.07786,
'13 23:00 Z': 1.18517,
'13 23:30 Z': 1.45146,
'14 00:00 Z': 1.80759,
'14 00:30 Z': 1.62309,
'14 01:00 Z': 1.24258,
'14 01:30 Z': 1.13016,
'14 02:00 Z': 1.24559,
'14 02:30 Z': 1.24854,
'14 03:00 Z': 1.06546,
'14 03:30 Z': 1.34027,
'14 04:00 Z': 1.8037,
'14 04:30 Z': 1.85458,
'14 05:00 Z': 2.50493,
'14 05:30 Z': 1.6142,
'14 06:00 Z': 1.54581,
'14 06:30 Z': 2.35228,
'14 07:00 Z': 1.90597,
'14 07:30 Z': 1.33221,
'14 08:00 Z': 1.66666,
'14 08:30 Z': 1.35019,
'14 09:00 Z': 1.01915,
'14 09:30 Z': 1.23747,
'14 10:00 Z': 1.88255,
'14 10:30 Z': 1.81204,
'14 11:00 Z': 1.22993,
'14 11:30 Z': 1.1567,
'14 12:00 Z': 1.32909,
'14 12:30 Z': 1.38008,
'14 13:00 Z': 1.02444,
'14 13:30 Z': 1.06205,
'14 14:00 Z': 1.11488,
'14 14:30 Z': 1.53172,
'14 15:00 Z': 1.83389,
'14 15:30 Z': 2.39049,
'14 16:00 Z': 3.0518,
'14 16:30 Z': 2.32331,
'14 17:00 Z': 2.09855,
'14 17:30 Z': 2.01328,
'14 18:00 Z': 1.62468,
'14 18:30 Z': 1.71473,
'14 19:00 Z': 1.66091,
'14 19:30 Z': 1.62932,
'14 20:00 Z': 2.08496,
'14 20:30 Z': 1.25836,
'14 21:00 Z': 1.02533,
'14 21:30 Z': 0.57843,
'14 22:00 Z': 1.04772,
'14 22:30 Z': 1.09615,
'14 23:00 Z': 0.82677,
'14 23:30 Z': 0.83215,
'15 00:00 Z': 1.3022,
'15 00:30 Z': 1.75964,
'15 01:00 Z': 1.76725,
'15 01:30 Z': 1.2718,
'15 02:00 Z': 1.13518,
'15 02:30 Z': 1.13824,
'15 03:00 Z': 1.17578,
'15 03:30 Z': 1.42785,
'15 04:00 Z': 1.57725,
'15 04:30 Z': 1.12265,
'15 05:00 Z': 2.08011,
'15 05:30 Z': 1.79196,
'15 06:00 Z': 1.02866,
'15 06:30 Z': 0.7879,
'15 07:00 Z': 0.59109,
'15 07:30 Z': 0.89808,
'15 08:00 Z': 0.75367,
'15 08:30 Z': 0.69246,
'15 09:00 Z': 0.54283,
'15 09:30 Z': 0.47165,
'15 10:00 Z': 0.53501,
'15 10:30 Z': 0.71688,
'15 11:00 Z': 0.75209,
'15 11:30 Z': 0.87996,
'15 12:00 Z': 1.07708,
'15 12:30 Z': 1.18851,
'15 13:00 Z': 0.67211,
'15 13:30 Z': 0.73303,
'15 14:00 Z': 0.73943,
'15 14:30 Z': 0.82788,
'15 15:00 Z': 1.13199,
'15 15:30 Z': 1.3887,
'15 16:00 Z': 1.82058,
'15 16:30 Z': 1.56923,
'15 17:00 Z': 1.74653,
'15 17:30 Z': 2.07928,
'15 18:00 Z': 1.52023,
'15 18:30 Z': 2.20146,
'15 19:00 Z': 1.78948,
'15 19:30 Z': 1.38485,
'15 20:00 Z': 1.29733,
'15 20:30 Z': 0.69856,
'15 21:00 Z': 0.61573,
'15 21:30 Z': 0.16757,
'15 22:00 Z': 0.38835,
'15 22:30 Z': 0.83022,
'15 23:00 Z': 1.82851,
'15 23:30 Z': 1.78502,
'16 00:00 Z': 1.83817,
'16 00:30 Z': 1.9897,
'16 01:00 Z': 1.70149,
'16 01:30 Z': 1.57938,
'16 02:00 Z': 1.53155,
'16 02:30 Z': 1.4323,
'16 03:00 Z': 1.61089,
'16 03:30 Z': 1.72079,
'16 04:00 Z': 2.28904,
'16 04:30 Z': 2.79576,
'16 05:00 Z': 4.11665,
'16 05:30 Z': 3.08536,
'16 06:00 Z': 1.9241,
'16 06:30 Z': 2.46512,
'16 07:00 Z': 2.61218,
'16 07:30 Z': 2.00556,
'16 08:00 Z': 1.32699,
'16 08:30 Z': 1.30539,
'16 09:00 Z': 1.60555,
'16 09:30 Z': 1.47059,
'16 10:00 Z': 1.41645,
'16 10:30 Z': 1.43406,
'16 11:00 Z': 1.43082,
'16 11:30 Z': 1.32778,
'16 12:00 Z': 1.36846,
'16 12:30 Z': 1.34029,
'16 13:00 Z': 1.12343,
'16 13:30 Z': 1.40869,
'16 14:00 Z': 1.16648,
'16 14:30 Z': 1.17265,
'16 15:00 Z': 2.26645,
'16 15:30 Z': 1.86832,
'16 16:00 Z': 1.70923,
'16 16:30 Z': 1.60314,
'16 17:00 Z': 1.55212,
'16 17:30 Z': 1.16637,
'16 18:00 Z': 1.21699,
'16 18:30 Z': 1.85233,
'16 19:00 Z': 1.59828,
'16 19:30 Z': 1.3607,
'16 20:00 Z': 1.11736,
'16 20:30 Z': 0.63722,
'16 21:00 Z': 0.5892,
'16 21:30 Z': 0.90171,
'16 22:00 Z': 1.4053,
'16 22:30 Z': 1.02789,
'16 23:00 Z': 1.43765,
'16 23:30 Z': 0.95018,
'17 00:00 Z': 1.1098,
'17 00:30 Z': 1.36535,
'17 01:00 Z': 1.23695,
'17 01:30 Z': 1.29054,
'17 02:00 Z': 1.45197,
'17 02:30 Z': 1.39143,
'17 03:00 Z': 1.58418,
'17 03:30 Z': 1.85833,
'17 04:00 Z': 1.9407,
'17 04:30 Z': 1.17642,
'17 05:00 Z': 2.64613,
'17 05:30 Z': 2.00116,
'17 06:00 Z': 1.39771,
'17 06:30 Z': 3.82262,
'17 07:00 Z': 3.37444,
'17 07:30 Z': 2.71439,
'17 08:00 Z': 2.40087,
'17 08:30 Z': 2.17448,
'17 09:00 Z': 1.65292,
'17 09:30 Z': 1.34879,
'17 10:00 Z': 1.54688,
'17 10:30 Z': 1.44007,
'17 11:00 Z': 1.45332,
'17 11:30 Z': 1.3498,
'17 12:00 Z': 1.20946,
'17 12:30 Z': 0.80582,
'17 13:00 Z': 0.58408,
'17 13:30 Z': 0.55274,
'17 14:00 Z': 0.4886,
'17 14:30 Z': 0.47709,
'17 15:00 Z': 0.7427,
'17 15:30 Z': 0.85483,
'17 16:00 Z': 1.13611,
'17 16:30 Z': 1.16727,
'17 17:00 Z': 0.67789,
'17 17:30 Z': 0.94495,
'17 18:00 Z': 1.03818,
'17 18:30 Z': 1.65725,
'17 19:00 Z': 1.32105,
'17 19:30 Z': 1.80481,
'17 20:00 Z': 1.19329,
'17 20:30 Z': 0.87055,
'17 21:00 Z': 1.34196,
'17 21:30 Z': 1.86943,
'17 22:00 Z': 1.99775,
'17 22:30 Z': 1.71949,
'17 23:00 Z': 1.26031,
'17 23:30 Z': 0.96334,
'18 00:00 Z': 1.66319,
'18 00:30 Z': 1.46052,
'18 01:00 Z': 1.17504,
'18 01:30 Z': 1.16737,
'18 02:00 Z': 1.57353,
'18 02:30 Z': 1.60059,
'18 03:00 Z': 1.17637,
'18 03:30 Z': 1.18284,
'18 04:00 Z': 1.04912,
'18 04:30 Z': 0.96403,
'18 05:00 Z': 0.97884,
'18 05:30 Z': 0.75284,
'18 06:00 Z': 0.68428,
'18 06:30 Z': 1.18173,
'18 07:00 Z': 2.74207,
'18 07:30 Z': 3.73041,
'18 08:00 Z': 3.01027,
'18 08:30 Z': 2.15923,
'18 09:00 Z': 1.80488,
'18 09:30 Z': 1.54029,
'18 10:00 Z': 1.41894,
'18 10:30 Z': 1.43421,
'18 11:00 Z': 1.43255,
'18 11:30 Z': 1.39443,
'18 12:00 Z': 1.36673,
'18 12:30 Z': 1.19267,
'18 13:00 Z': 0.79156,
'18 13:30 Z': 0.85117,
'18 14:00 Z': 0.8778,
'18 14:30 Z': 0.92491,
'18 15:00 Z': 1.15013,
'18 15:30 Z': 1.35042,
'18 16:00 Z': 1.60333,
'18 16:30 Z': 1.76,
'18 17:00 Z': 1.94696,
'18 17:30 Z': 2.02951,
'18 18:00 Z': 1.99855,
'18 18:30 Z': 2.20224,
'18 19:00 Z': 1.80109,
'18 19:30 Z': 1.4213,
'18 20:00 Z': 1.60577,
'18 20:30 Z': 1.00085,
'18 21:00 Z': 1.42938,
'18 21:30 Z': 1.46547,
'18 22:00 Z': 1.45787,
'18 22:30 Z': 1.23691,
'18 23:00 Z': 0.91254,
'18 23:30 Z': 0.72369,
'19 00:00 Z': 0.65401,
'19 00:30 Z': 0.9012,
'19 01:00 Z': 0.82992,
'19 01:30 Z': 0.8986,
'19 02:00 Z': 0.90119,
'19 02:30 Z': 0.94584,
'19 03:00 Z': 0.80861,
'19 03:30 Z': 0.73559,
'19 04:00 Z': 0.67833,
'19 04:30 Z': 0.74008,
'19 05:00 Z': 0.83769,
'19 05:30 Z': 0.43636,
'19 06:00 Z': 0.18424,
'19 06:30 Z': 0.35446,
'19 07:00 Z': 0.45755,
'19 07:30 Z': 0.83255,
'19 08:00 Z': 0.86101,
'19 08:30 Z': 1.04425,
'19 09:00 Z': 1.49886,
'19 09:30 Z': 1.73022,
'19 10:00 Z': 1.7856,
'19 10:30 Z': 1.74879,
'19 11:00 Z': 1.76992,
'19 11:30 Z': 1.73136,
'19 12:00 Z': 1.69767,
'19 12:30 Z': 1.2634,
'19 13:00 Z': 1.28345,
'19 13:30 Z': 1.21566,
'19 14:00 Z': 1.1978,
'19 14:30 Z': 1.31178,
'19 15:00 Z': 1.29111,
'19 15:30 Z': 1.40557,
'19 16:00 Z': 1.48445,
'19 16:30 Z': 1.6357,
'19 17:00 Z': 1.89355,
'19 17:30 Z': 1.86884,
'19 18:00 Z': 2.27918,
'19 18:30 Z': 2.4803,
'19 19:00 Z': 2.27698,
'19 19:30 Z': 2.12161,
'19 20:00 Z': 1.79832,
'19 20:30 Z': 1.74256,
'19 21:00 Z': 1.09473,
'19 21:30 Z': 0.79842,
'19 22:00 Z': 0.93251,
'19 22:30 Z': 1.19271,
'19 23:00 Z': 1.44655,
'19 23:30 Z': 0.97146,
'20 00:00 Z': 1.28027,
'20 00:30 Z': 1.37667,
'20 01:00 Z': 1.3179,
'20 01:30 Z': 0.95518,
'20 02:00 Z': 0.90864,
'20 02:30 Z': 1.09793,
'20 03:00 Z': 1.25574,
'20 03:30 Z': 1.24598,
'20 04:00 Z': 1.19066,
'20 04:30 Z': 1.34354,
'20 05:00 Z': 1.78864,
'20 05:30 Z': 1.89553,
'20 06:00 Z': 1.83305,
'20 06:30 Z': 2.19013,
'20 07:00 Z': 2.08091,
'20 07:30 Z': 1.84965,
'20 08:00 Z': 1.64653,
'20 08:30 Z': 1.634,
'20 09:00 Z': 1.61338,
'20 09:30 Z': 1.51552,
'20 10:00 Z': 1.61219,
'20 10:30 Z': 1.7968,
'20 11:00 Z': 1.59944,
'20 11:30 Z': 1.48111,
'20 12:00 Z': 1.56118,
'20 12:30 Z': 1.22855,
'20 13:00 Z': 1.14852,
'20 13:30 Z': 0.9876,
'20 14:00 Z': 1.03075,
'20 14:30 Z': 1.05662,
'20 15:00 Z': 1.22217,
'20 15:30 Z': 1.87365,
'20 16:00 Z': 2.01053,
'20 16:30 Z': 2.15811,
'20 17:00 Z': 1.93811,
'20 17:30 Z': 1.84722,
'20 18:00 Z': 1.95492,
'20 18:30 Z': 2.68684,
'20 19:00 Z': 2.19291,
'20 19:30 Z': 2.00198,
'20 20:00 Z': 1.74619,
'20 20:30 Z': 1.04873,
'20 21:00 Z': 1.58671,
'20 21:30 Z': 1.34195,
'20 22:00 Z': 2.98166,
'20 22:30 Z': 2.59381,
'20 23:00 Z': 1.56924,
'20 23:30 Z': 1.03698,
'21 00:00 Z': 1.45483,
'21 00:30 Z': 1.41129,
'21 01:00 Z': 1.20104,
'21 01:30 Z': 1.19247,
'21 02:00 Z': 1.35458,
'21 02:30 Z': 1.25759,
'21 03:00 Z': 1.44334,
'21 03:30 Z': 1.35717,
'21 04:00 Z': 1.08893,
'21 04:30 Z': 1.31879,
'21 05:00 Z': 1.74838,
'21 05:30 Z': 1.30913,
'21 06:00 Z': 1.37539,
'21 06:30 Z': 1.37182,
'21 07:00 Z': 1.55562,
'21 07:30 Z': 1.81539,
'21 08:00 Z': 1.64655,
'21 08:30 Z': 1.22824,
'21 09:00 Z': 1.12543,
'21 09:30 Z': 1.22238,
'21 10:00 Z': 1.20225,
'21 10:30 Z': 1.54377,
'21 11:00 Z': 1.75754,
'21 11:30 Z': 1.54014,
'21 12:00 Z': 1.61262,
'21 12:30 Z': 1.60498,
'21 13:00 Z': 1.49512,
'21 13:30 Z': 1.11011,
'21 14:00 Z': 1.25682,
'21 14:30 Z': 1.31868,
'21 15:00 Z': 1.46376,
'21 15:30 Z': 1.87562,
'21 16:00 Z': 2.20262,
'21 16:30 Z': 1.93474,
'21 17:00 Z': 1.86168,
'21 17:30 Z': 2.03805,
'21 18:00 Z': 1.81539,
'21 18:30 Z': 1.79037,
'21 19:00 Z': 1.98997,
'21 19:30 Z': 1.30124,
'21 20:00 Z': 1.0579,
'21 20:30 Z': 1.40877,
'21 21:00 Z': 1.59336,
'21 21:30 Z': 1.07799,
'21 22:00 Z': 1.87729,
'21 22:30 Z': 1.6959,
'21 23:00 Z': 1.56121,
'21 23:30 Z': 1.66475,
'22 00:00 Z': 1.99669,
'22 00:30 Z': 1.62709,
'22 01:00 Z': 1.32322,
'22 01:30 Z': 1.44904,
'22 02:00 Z': 1.49289,
'22 02:30 Z': 1.28236,
'22 03:00 Z': 1.22607,
'22 03:30 Z': 1.07125,
'22 04:00 Z': 1.24251,
'22 04:30 Z': 1.72349,
'22 05:00 Z': 1.85905,
'22 05:30 Z': 1.66666,
'22 06:00 Z': 1.81948,
'22 06:30 Z': 2.13912,
'22 07:00 Z': 1.9453,
'22 07:30 Z': 1.60646,
'22 08:00 Z': 2.08875,
'22 08:30 Z': 1.62981,
'22 09:00 Z': 1.51368,
'22 09:30 Z': 1.63396,
'22 10:00 Z': 1.93212,
'22 10:30 Z': 1.92762,
'22 11:00 Z': 1.88945,
'22 11:30 Z': 2.09426,
'22 12:00 Z': 2.04124,
'22 12:30 Z': 1.23891,
'22 13:00 Z': 1.30925,
'22 13:30 Z': 1.15792,
'22 14:00 Z': 1.15904,
'22 14:30 Z': 1.23351,
'22 15:00 Z': 1.29962,
'22 15:30 Z': 1.56706,
'22 16:00 Z': 1.5602,
'22 16:30 Z': 1.70058,
'22 17:00 Z': 1.53654,
'22 17:30 Z': 2.18857,
'22 18:00 Z': 2.10286,
'22 18:30 Z': 1.97788,
'22 19:00 Z': 1.50917,
'22 19:30 Z': 1.16273,
'22 20:00 Z': 1.01345,
'22 20:30 Z': 0.93202,
'22 21:00 Z': 0.7878,
'22 21:30 Z': 0.95438,
'22 22:00 Z': 1.44312,
'22 22:30 Z': 1.70612,
'22 23:00 Z': 1.35725,
'22 23:30 Z': 1.21895,
'23 00:00 Z': 1.35481,
'23 00:30 Z': 1.44957,
'23 01:00 Z': 1.68172,
'23 01:30 Z': 1.26353,
'23 02:00 Z': 1.06473,
'23 02:30 Z': 0.77186,
'23 03:00 Z': 0.84362,
'23 03:30 Z': 1.047,
'23 04:00 Z': 1.50733,
'23 04:30 Z': 1.40681,
'23 05:00 Z': 1.53149,
'23 05:30 Z': 1.69223,
'23 06:00 Z': 1.88715,
'23 06:30 Z': 2.30085,
'23 07:00 Z': 1.88801,
'23 07:30 Z': 1.77089,
'23 08:00 Z': 2.5443,
'23 08:30 Z': 2.85922,
'23 09:00 Z': 1.96213,
'23 09:30 Z': 1.95475,
'23 10:00 Z': 2.33806,
'23 10:30 Z': 1.98163,
'23 11:00 Z': 1.8143,
'23 11:30 Z': 1.81309,
'23 12:00 Z': 1.7761,
'23 12:30 Z': 1.28838,
'23 13:00 Z': 1.18004,
'23 13:30 Z': 1.17703,
'23 14:00 Z': 0.69677,
'23 14:30 Z': 0.85574,
'23 15:00 Z': 1.17889,
'23 15:30 Z': 1.38607,
'23 16:00 Z': 1.23221,
'23 16:30 Z': 1.09524,
'23 17:00 Z': 1.19226,
'23 17:30 Z': 1.11038,
'23 18:00 Z': 1.0003,
'23 18:30 Z': 1.16097,
'23 19:00 Z': 0.81826,
'23 19:30 Z': 0.58113,
'23 20:00 Z': 0.37343,
'23 20:30 Z': 0.45616,
'23 21:00 Z': 0.67719,
'23 21:30 Z': 0.69662,
'23 22:00 Z': 1.40394,
'23 22:30 Z': 2.11526,
'23 23:00 Z': 2.14447,
'23 23:30 Z': 1.96175,
'24 00:00 Z': 2.48867,
'24 00:30 Z': 2.24943,
'24 01:00 Z': 1.81569,
'24 01:30 Z': 1.67916,
'24 02:00 Z': 1.68748,
'24 02:30 Z': 1.64589,
'24 03:00 Z': 1.82513,
'24 03:30 Z': 1.80306,
'24 04:00 Z': 2.19136,
'24 04:30 Z': 2.33611,
'24 05:00 Z': 2.16809,
'24 05:30 Z': 2.28837,
'24 06:00 Z': 1.63543,
'24 06:30 Z': 1.93912,
'24 07:00 Z': 1.52409,
'24 07:30 Z': 0.81113,
'24 08:00 Z': 0.94795,
'24 08:30 Z': 1.16291,
'24 09:00 Z': 0.85226,
'24 09:30 Z': 0.89139,
'24 10:00 Z': 0.8866,
'24 10:30 Z': 0.94556,
'24 11:00 Z': 1.06287,
'24 11:30 Z': 1.18702,
'24 12:00 Z': 1.58694,
'24 12:30 Z': 1.4443,
'24 13:00 Z': 1.1704,
'24 13:30 Z': 0.85133,
'24 14:00 Z': 0.52496,
'24 14:30 Z': 0.57893,
'24 15:00 Z': 0.63919,
'24 15:30 Z': 0.95684,
'24 16:00 Z': 1.17285,
'24 16:30 Z': 1.82601,
'24 17:00 Z': 2.72501,
'24 17:30 Z': 2.17242,
'24 18:00 Z': 1.74445,
'24 18:30 Z': 1.68369,
'24 19:00 Z': 1.43445,
'24 19:30 Z': 1.38353,
'24 20:00 Z': 0.97119,
'24 20:30 Z': 0.33375,
'24 21:00 Z': 0.89071,
'24 21:30 Z': 1.16786,
'24 22:00 Z': 1.11688,
'24 22:30 Z': 1.20698,
'24 23:00 Z': 0.94978,
'24 23:30 Z': 0.64026,
'25 00:00 Z': 0.99333,
'25 00:30 Z': 0.79834,
'25 01:00 Z': 0.69119,
'25 01:30 Z': 1.04458,
'25 02:00 Z': 1.00166,
'25 02:30 Z': 1.26803,
'25 03:00 Z': 1.21011,
'25 03:30 Z': 0.989,
'25 04:00 Z': 0.71672,
'25 04:30 Z': 0.59635,
'25 05:00 Z': 0.73705,
'25 05:30 Z': 0.6514,
'25 06:00 Z': 0.95919,
'25 06:30 Z': 1.37818,
'25 07:00 Z': 1.43284,
'25 07:30 Z': 1.48767,
'25 08:00 Z': 1.79562,
'25 08:30 Z': 1.64499,
'25 09:00 Z': 1.43204,
'25 09:30 Z': 1.35485,
'25 10:00 Z': 1.49817,
'25 10:30 Z': 1.36848,
'25 11:00 Z': 1.35061,
'25 11:30 Z': 1.28476,
'25 12:00 Z': 1.32661,
'25 12:30 Z': 0.93165,
'25 13:00 Z': 0.87235,
'25 13:30 Z': 0.93479,
'25 14:00 Z': 1.08222,
'25 14:30 Z': 1.05046,
'25 15:00 Z': 0.82896,
'25 15:30 Z': 1.20141,
'25 16:00 Z': 1.31619,
'25 16:30 Z': 1.43863,
'25 17:00 Z': 1.62686,
'25 17:30 Z': 1.96415,
'25 18:00 Z': 2.51561,
'25 18:30 Z': 2.95053,
'25 19:00 Z': 1.93561,
'25 19:30 Z': 1.96217,
'25 20:00 Z': 1.84606,
'25 20:30 Z': 1.47244,
'25 21:00 Z': 1.55536,
'25 21:30 Z': 1.45827,
'25 22:00 Z': 1.44686,
'25 22:30 Z': 0.88901,
'25 23:00 Z': 0.79977,
'25 23:30 Z': 0.79093,
'26 00:00 Z': 1.00782,
'26 00:30 Z': 1.10123,
'26 01:00 Z': 1.26589,
'26 01:30 Z': 1.13403,
'26 02:00 Z': 1.08523,
'26 02:30 Z': 1.23193,
'26 03:00 Z': 1.15875,
'26 03:30 Z': 0.98012,
'26 04:00 Z': 0.84429,
'26 04:30 Z': 0.95331,
'26 05:00 Z': 1.05966,
'26 05:30 Z': 1.20825,
'26 06:00 Z': 1.08823,
'26 06:30 Z': 1.03111,
'26 07:00 Z': 1.36614,
'26 07:30 Z': 1.63972,
'26 08:00 Z': 2.21561,
'26 08:30 Z': 1.69186,
'26 09:00 Z': 1.87702,
'26 09:30 Z': 2.08261,
'26 10:00 Z': 2.34376,
'26 10:30 Z': 2.42173,
'26 11:00 Z': 2.40018,
'26 11:30 Z': 2.12633,
'26 12:00 Z': 1.50188,
'26 12:30 Z': 1.08748,
'26 13:00 Z': 1.3227,
'26 13:30 Z': 1.62557,
'26 14:00 Z': 1.45707,
'26 14:30 Z': 1.47786,
'26 15:00 Z': 1.33605,
'26 15:30 Z': 1.6314,
'26 16:00 Z': 1.27809,
'26 16:30 Z': 1.87771,
'26 17:00 Z': 2.29831,
'26 17:30 Z': 2.14129,
'26 18:00 Z': 2.22636,
'26 18:30 Z': 2.18723,
'26 19:00 Z': 1.92922,
'26 19:30 Z': 2.17334,
'26 20:00 Z': 1.80118,
'26 20:30 Z': 1.19527,
'26 21:00 Z': 0.94264,
'26 21:30 Z': 0.61766,
'26 22:00 Z': 1.20238,
'26 22:30 Z': 0.93405,
'26 23:00 Z': 0.97603,
'26 23:30 Z': 0.98241,
'27 00:00 Z': 1.13436,
'27 00:30 Z': 1.39514,
'27 01:00 Z': 1.44243,
'27 01:30 Z': 1.39377,
'27 02:00 Z': 1.30936,
'27 02:30 Z': 1.22623,
'27 03:00 Z': 1.1054,
'27 03:30 Z': 0.99587,
'27 04:00 Z': 0.97763,
'27 04:30 Z': 0.95916,
'27 05:00 Z': 1.31613,
'27 05:30 Z': 2.19539,
'27 06:00 Z': 2.53864,
'27 06:30 Z': 2.58848,
'27 07:00 Z': 2.06964,
'27 07:30 Z': 1.56195,
'27 08:00 Z': 2.1766,
'27 08:30 Z': 2.72795,
'27 09:00 Z': 2.54872,
'27 09:30 Z': 2.0896,
'27 10:00 Z': 1.86405,
'27 10:30 Z': 1.93002,
'27 11:00 Z': 1.71475,
'27 11:30 Z': 1.72472,
'27 12:00 Z': 1.59474,
'27 12:30 Z': 1.21189,
'27 13:00 Z': 1.34033,
'27 13:30 Z': 1.22137,
'27 14:00 Z': 1.30715,
'27 14:30 Z': 1.69601,
'27 15:00 Z': 1.85571,
'27 15:30 Z': 2.45728,
'27 16:00 Z': 2.7607,
'27 16:30 Z': 2.29995,
'27 17:00 Z': 2.04322,
'27 17:30 Z': 2.45697,
'27 18:00 Z': 3.08547,
'27 18:30 Z': 2.21129,
'27 19:00 Z': 1.95399,
'27 19:30 Z': 1.72432,
'27 20:00 Z': 1.58458,
'27 20:30 Z': 1.19849,
'27 21:00 Z': 1.66159,
'27 21:30 Z': 1.21467,
'27 22:00 Z': 1.40411,
'27 22:30 Z': 1.19409,
'27 23:00 Z': 1.11818,
'27 23:30 Z': 1.49079,
'28 00:00 Z': 1.63951,
'28 00:30 Z': 1.82659,
'28 01:00 Z': 1.90738,
'28 01:30 Z': 1.82483,
'28 02:00 Z': 1.6424,
'28 02:30 Z': 1.4621,
'28 03:00 Z': 1.4799,
'28 03:30 Z': 1.29735,
'28 04:00 Z': 1.0335,
'28 04:30 Z': 1.38152,
'28 05:00 Z': 1.92915,
'28 05:30 Z': 2.28951,
'28 06:00 Z': 3.00505,
'28 06:30 Z': 2.91582,
'28 07:00 Z': 2.0384,
'28 07:30 Z': 1.30754,
'28 08:00 Z': 1.30991,
'28 08:30 Z': 1.44109,
'28 09:00 Z': 1.17857,
'28 09:30 Z': 1.32908,
'28 10:00 Z': 1.37512,
'28 10:30 Z': 1.48666,
'28 11:00 Z': 1.45739,
'28 11:30 Z': 1.30455,
'28 12:00 Z': 1.38033,
'28 12:30 Z': 1.3618,
'28 13:00 Z': 1.69061,
'28 13:30 Z': 1.62854,
'28 14:00 Z': 1.36383,
'28 14:30 Z': 1.09602,
'28 15:00 Z': 1.41758,
'28 15:30 Z': 1.84575,
'28 16:00 Z': 1.85812,
'28 16:30 Z': 2.15828,
'28 17:00 Z': 2.0504,
'28 17:30 Z': 2.26918,
'28 18:00 Z': 2.18429,
'28 18:30 Z': 1.74437,
'28 19:00 Z': 1.99668,
'28 19:30 Z': 1.24607,
'28 20:00 Z': 1.48292,
'28 20:30 Z': 0.85096,
'28 21:00 Z': 1.19792,
'28 21:30 Z': 1.27241,
'28 22:00 Z': 1.26809,
'28 22:30 Z': 0.84609,
'28 23:00 Z': 0.97457,
'28 23:30 Z': 1.00081,
'29 00:00 Z': 1.21275,
'29 00:30 Z': 1.18899,
'29 01:00 Z': 0.91596,
'29 01:30 Z': 1.00296,
'29 02:00 Z': 1.27682,
'29 02:30 Z': 1.31616,
'29 03:00 Z': 1.40747,
'29 03:30 Z': 1.32753,
'29 04:00 Z': 1.0929,
'29 04:30 Z': 1.9681,
'29 05:00 Z': 2.91645,
'29 05:30 Z': 2.25361,
'29 06:00 Z': 2.14688,
'29 06:30 Z': 1.97335,
'29 07:00 Z': 1.83757,
'29 07:30 Z': 1.36055,
'29 08:00 Z': 1.8419,
'29 08:30 Z': 1.27452,
'29 09:00 Z': 1.9606,
'29 09:30 Z': 1.91682,
'29 10:00 Z': 1.79724,
'29 10:30 Z': 1.60028,
'29 11:00 Z': 1.72803,
'29 11:30 Z': 1.65347,
'29 12:00 Z': 1.64609,
'29 12:30 Z': 1.22946,
'29 13:00 Z': 1.19883,
'29 13:30 Z': 1.15856,
'29 14:00 Z': 0.7328,
'29 14:30 Z': 0.8819,
'29 15:00 Z': 1.31505,
'29 15:30 Z': 1.66767,
'29 16:00 Z': 1.66991,
'29 16:30 Z': 1.59119,
'29 17:00 Z': 1.34492,
'29 17:30 Z': 1.48064,
'29 18:00 Z': 1.43374,
'29 18:30 Z': 1.62563,
'29 19:00 Z': 0.86764,
'29 19:30 Z': 0.62305,
'29 20:00 Z': 0.98188,
'29 20:30 Z': 0.90989,
'29 21:00 Z': 0.88214,
'29 21:30 Z': 0.81042,
'29 22:00 Z': 0.58145,
'29 22:30 Z': 0.91154,
'29 23:00 Z': 1.05066,
'29 23:30 Z': 1.04094,
'30 00:00 Z': 1.18406,
'30 00:30 Z': 1.43065,
'30 01:00 Z': 1.18532,
'30 01:30 Z': 1.06024,
'30 02:00 Z': 1.42158,
'30 02:30 Z': 1.35093,
'30 03:00 Z': 0.95706,
'30 03:30 Z': 1.01172,
'30 04:00 Z': 1.14296,
'30 04:30 Z': 0.74047,
'30 05:00 Z': 0.84607,
'30 05:30 Z': 1.19284,
'30 06:00 Z': 1.66098,
'30 06:30 Z': 1.55245,
'30 07:00 Z': 1.32599,
'30 07:30 Z': 1.07023,
'30 08:00 Z': 1.25256,
'30 08:30 Z': 1.23824,
'30 09:00 Z': 1.14079,
'30 09:30 Z': 1.10246,
'30 10:00 Z': 1.03248,
'30 10:30 Z': 1.16792,
'30 11:00 Z': 1.15092,
'30 11:30 Z': 1.01803,
'30 12:00 Z': 1.04761,
'30 12:30 Z': 0.63763,
'30 13:00 Z': 0.60638,
'30 13:30 Z': 0.50009,
'30 14:00 Z': 0.19813,
'30 14:30 Z': 0.26308,
'30 15:00 Z': 0.26349,
'30 15:30 Z': 0.63856,
'30 16:00 Z': 1.01148,
'30 16:30 Z': 1.11714,
'30 17:00 Z': 1.06343,
'30 17:30 Z': 1.89717,
'30 18:00 Z': 2.2222,
'30 18:30 Z': 1.98988,
'30 19:00 Z': 1.20101,
'30 19:30 Z': 0.72408,
'30 20:00 Z': 0.73202,
'30 20:30 Z': 0.40585,
'30 21:00 Z': 0.6718,
'30 21:30 Z': 0.79104,
'30 22:00 Z': 0.29317,
'30 22:30 Z': 0.69806,
'30 23:00 Z': 0.7628,
'30 23:30 Z': 1.43752}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[bsuos]]></value>
        <value><![CDATA[233]]></value>
        <value><![CDATA[2010-10-01T00:00Z]]></value>
        <value><![CDATA[def rates_gbp_per_mwh():
    return {
'01 00:00 Z': 1.92158,
'01 00:30 Z': 1.77992,
'01 01:00 Z': 1.51145,
'01 01:30 Z': 1.37178,
'01 02:00 Z': 1.44522,
'01 02:30 Z': 1.17104,
'01 03:00 Z': 1.03332,
'01 03:30 Z': 0.95226,
'01 04:00 Z': 1.30174,
'01 04:30 Z': 1.20614,
'01 05:00 Z': 1.65961,
'01 05:30 Z': 1.50601,
'01 06:00 Z': 2.11694,
'01 06:30 Z': 2.11531,
'01 07:00 Z': 2.28735,
'01 07:30 Z': 1.48611,
'01 08:00 Z': 2.13988,
'01 08:30 Z': 1.94734,
'01 09:00 Z': 1.53841,
'01 09:30 Z': 2.00108,
'01 10:00 Z': 2.3988,
'01 10:30 Z': 2.22363,
'01 11:00 Z': 2.64356,
'01 11:30 Z': 2.79771,
'01 12:00 Z': 2.83029,
'01 12:30 Z': 2.54066,
'01 13:00 Z': 2.52726,
'01 13:30 Z': 2.48979,
'01 14:00 Z': 2.56531,
'01 14:30 Z': 2.4906,
'01 15:00 Z': 2.76281,
'01 15:30 Z': 3.21335,
'01 16:00 Z': 2.90225,
'01 16:30 Z': 2.53246,
'01 17:00 Z': 2.4352,
'01 17:30 Z': 2.76504,
'01 18:00 Z': 2.45017,
'01 18:30 Z': 2.33365,
'01 19:00 Z': 2.16685,
'01 19:30 Z': 1.68287,
'01 20:00 Z': 1.50311,
'01 20:30 Z': 1.47847,
'01 21:00 Z': 1.85944,
'01 21:30 Z': 1.78051,
'01 22:00 Z': 1.6743,
'01 22:30 Z': 1.54168,
'01 23:00 Z': 2.13297,
'01 23:30 Z': 1.97334,
'02 00:00 Z': 2.14527,
'02 00:30 Z': 2.25191,
'02 01:00 Z': 2.14878,
'02 01:30 Z': 2.11049,
'02 02:00 Z': 2.37,
'02 02:30 Z': 2.19469,
'02 03:00 Z': 2.02709,
'02 03:30 Z': 1.82097,
'02 04:00 Z': 1.28159,
'02 04:30 Z': 1.44919,
'02 05:00 Z': 2.03397,
'02 05:30 Z': 2.20544,
'02 06:00 Z': 2.99371,
'02 06:30 Z': 2.26571,
'02 07:00 Z': 2.2703,
'02 07:30 Z': 1.97863,
'02 08:00 Z': 2.33486,
'02 08:30 Z': 2.14864,
'02 09:00 Z': 2.05518,
'02 09:30 Z': 1.44164,
'02 10:00 Z': 1.47771,
'02 10:30 Z': 1.53594,
'02 11:00 Z': 1.52943,
'02 11:30 Z': 1.41274,
'02 12:00 Z': 1.44443,
'02 12:30 Z': 0.99956,
'02 13:00 Z': 0.88378,
'02 13:30 Z': 0.84709,
'02 14:00 Z': 1.10039,
'02 14:30 Z': 1.13865,
'02 15:00 Z': 1.22773,
'02 15:30 Z': 1.61313,
'02 16:00 Z': 2.50166,
'02 16:30 Z': 2.55988,
'02 17:00 Z': 2.44738,
'02 17:30 Z': 2.80108,
'02 18:00 Z': 2.72224,
'02 18:30 Z': 1.7617,
'02 19:00 Z': 1.72785,
'02 19:30 Z': 1.17993,
'02 20:00 Z': 1.15223,
'02 20:30 Z': 1.12916,
'02 21:00 Z': 1.21795,
'02 21:30 Z': 1.15605,
'02 22:00 Z': 1.65562,
'02 22:30 Z': 1.31214,
'02 23:00 Z': 1.56269,
'02 23:30 Z': 1.2554,
'03 00:00 Z': 1.60421,
'03 00:30 Z': 1.6604,
'03 01:00 Z': 1.67072,
'03 01:30 Z': 1.51457,
'03 02:00 Z': 1.63446,
'03 02:30 Z': 1.42879,
'03 03:00 Z': 1.11439,
'03 03:30 Z': 1.09056,
'03 04:00 Z': 1.20632,
'03 04:30 Z': 1.42451,
'03 05:00 Z': 1.1784,
'03 05:30 Z': 1.42999,
'03 06:00 Z': 1.51275,
'03 06:30 Z': 1.99725,
'03 07:00 Z': 1.46172,
'03 07:30 Z': 1.87772,
'03 08:00 Z': 3.96995,
'03 08:30 Z': 3.86752,
'03 09:00 Z': 5.10482,
'03 09:30 Z': 6.03526,
'03 10:00 Z': 6.81626,
'03 10:30 Z': 6.79889,
'03 11:00 Z': 6.61138,
'03 11:30 Z': 6.42338,
'03 12:00 Z': 6.33857,
'03 12:30 Z': 4.22924,
'03 13:00 Z': 2.57863,
'03 13:30 Z': 2.21699,
'03 14:00 Z': 2.28061,
'03 14:30 Z': 1.91965,
'03 15:00 Z': 1.82147,
'03 15:30 Z': 1.86812,
'03 16:00 Z': 1.71957,
'03 16:30 Z': 2.03987,
'03 17:00 Z': 2.65337,
'03 17:30 Z': 3.198,
'03 18:00 Z': 3.71758,
'03 18:30 Z': 3.13301,
'03 19:00 Z': 2.63214,
'03 19:30 Z': 2.20308,
'03 20:00 Z': 2.82863,
'03 20:30 Z': 2.07045,
'03 21:00 Z': 1.90803,
'03 21:30 Z': 1.61019,
'03 22:00 Z': 2.16107,
'03 22:30 Z': 1.08357,
'03 23:00 Z': 0.92141,
'03 23:30 Z': 0.5416,
'04 00:00 Z': 1.31982,
'04 00:30 Z': 1.45141,
'04 01:00 Z': 1.62355,
'04 01:30 Z': 1.27347,
'04 02:00 Z': 0.86252,
'04 02:30 Z': 0.54429,
'04 03:00 Z': 0.51768,
'04 03:30 Z': 0.91011,
'04 04:00 Z': 1.32416,
'04 04:30 Z': 1.10994,
'04 05:00 Z': 1.7545,
'04 05:30 Z': 2.0987,
'04 06:00 Z': 2.66936,
'04 06:30 Z': 2.88861,
'04 07:00 Z': 2.60073,
'04 07:30 Z': 2.08774,
'04 08:00 Z': 2.06092,
'04 08:30 Z': 1.9939,
'04 09:00 Z': 2.60126,
'04 09:30 Z': 1.75081,
'04 10:00 Z': 1.63096,
'04 10:30 Z': 1.5878,
'04 11:00 Z': 1.02892,
'04 11:30 Z': 1.04954,
'04 12:00 Z': 1.05614,
'04 12:30 Z': 0.80344,
'04 13:00 Z': 0.83655,
'04 13:30 Z': 0.80979,
'04 14:00 Z': 0.53021,
'04 14:30 Z': 0.64433,
'04 15:00 Z': 0.74632,
'04 15:30 Z': 1.15472,
'04 16:00 Z': 1.38933,
'04 16:30 Z': 1.05961,
'04 17:00 Z': 1.26326,
'04 17:30 Z': 1.63867,
'04 18:00 Z': 1.7375,
'04 18:30 Z': 1.44055,
'04 19:00 Z': 0.80842,
'04 19:30 Z': 0.46757,
'04 20:00 Z': 0.5521,
'04 20:30 Z': 0.63942,
'04 21:00 Z': 0.87787,
'04 21:30 Z': 0.72611,
'04 22:00 Z': 0.60395,
'04 22:30 Z': 0.92256,
'04 23:00 Z': 0.45377,
'04 23:30 Z': 0.04332,
'05 00:00 Z': 1.02339,
'05 00:30 Z': 0.93355,
'05 01:00 Z': 0.57602,
'05 01:30 Z': 0.54635,
'05 02:00 Z': 0.60573,
'05 02:30 Z': 0.59642,
'05 03:00 Z': 0.7319,
'05 03:30 Z': 0.74947,
'05 04:00 Z': 1.08869,
'05 04:30 Z': 1.45998,
'05 05:00 Z': 1.53727,
'05 05:30 Z': 1.5307,
'05 06:00 Z': 2.44879,
'05 06:30 Z': 1.99102,
'05 07:00 Z': 1.51693,
'05 07:30 Z': 1.29758,
'05 08:00 Z': 1.34592,
'05 08:30 Z': 1.35802,
'05 09:00 Z': 1.43636,
'05 09:30 Z': 1.49693,
'05 10:00 Z': 1.51395,
'05 10:30 Z': 1.41794,
'05 11:00 Z': 1.36789,
'05 11:30 Z': 1.26561,
'05 12:00 Z': 1.17627,
'05 12:30 Z': 1.06949,
'05 13:00 Z': 1.02614,
'05 13:30 Z': 0.9014,
'05 14:00 Z': 0.54167,
'05 14:30 Z': 0.49008,
'05 15:00 Z': 0.61105,
'05 15:30 Z': 1.05973,
'05 16:00 Z': 1.12379,
'05 16:30 Z': 1.12637,
'05 17:00 Z': 1.51542,
'05 17:30 Z': 2.47943,
'05 18:00 Z': 2.39509,
'05 18:30 Z': 1.5801,
'05 19:00 Z': 1.1976,
'05 19:30 Z': 0.98476,
'05 20:00 Z': 1.44245,
'05 20:30 Z': 1.11218,
'05 21:00 Z': 1.03869,
'05 21:30 Z': 1.21327,
'05 22:00 Z': 1.5188,
'05 22:30 Z': 1.33872,
'05 23:00 Z': 0.92129,
'05 23:30 Z': 0.46092,
'06 00:00 Z': 1.0319,
'06 00:30 Z': 1.18959,
'06 01:00 Z': 1.15003,
'06 01:30 Z': 1.26267,
'06 02:00 Z': 1.40692,
'06 02:30 Z': 1.1934,
'06 03:00 Z': 1.21259,
'06 03:30 Z': 1.40494,
'06 04:00 Z': 1.19184,
'06 04:30 Z': 1.51023,
'06 05:00 Z': 1.81315,
'06 05:30 Z': 2.44097,
'06 06:00 Z': 3.21642,
'06 06:30 Z': 2.92367,
'06 07:00 Z': 2.3346,
'06 07:30 Z': 1.78735,
'06 08:00 Z': 2.07869,
'06 08:30 Z': 1.87175,
'06 09:00 Z': 1.71718,
'06 09:30 Z': 1.55992,
'06 10:00 Z': 1.41833,
'06 10:30 Z': 1.38223,
'06 11:00 Z': 1.4082,
'06 11:30 Z': 1.45032,
'06 12:00 Z': 1.36473,
'06 12:30 Z': 1.00952,
'06 13:00 Z': 0.92679,
'06 13:30 Z': 0.81575,
'06 14:00 Z': 0.66771,
'06 14:30 Z': 0.85186,
'06 15:00 Z': 0.61435,
'06 15:30 Z': 0.94578,
'06 16:00 Z': 0.93394,
'06 16:30 Z': 0.84655,
'06 17:00 Z': 1.16875,
'06 17:30 Z': 1.61374,
'06 18:00 Z': 1.68903,
'06 18:30 Z': 1.40647,
'06 19:00 Z': 1.55516,
'06 19:30 Z': 0.94513,
'06 20:00 Z': 0.84542,
'06 20:30 Z': 1.00826,
'06 21:00 Z': 1.35761,
'06 21:30 Z': 0.82807,
'06 22:00 Z': 0.8859,
'06 22:30 Z': 1.29042,
'06 23:00 Z': 1.38323,
'06 23:30 Z': 0.7961,
'07 00:00 Z': 1.18564,
'07 00:30 Z': 1.17796,
'07 01:00 Z': 1.23848,
'07 01:30 Z': 1.10531,
'07 02:00 Z': 1.09261,
'07 02:30 Z': 0.88887,
'07 03:00 Z': 0.95747,
'07 03:30 Z': 1.13217,
'07 04:00 Z': 1.19285,
'07 04:30 Z': 1.43419,
'07 05:00 Z': 1.66125,
'07 05:30 Z': 1.5159,
'07 06:00 Z': 1.72771,
'07 06:30 Z': 1.8037,
'07 07:00 Z': 1.71516,
'07 07:30 Z': 1.48871,
'07 08:00 Z': 1.77186,
'07 08:30 Z': 1.77418,
'07 09:00 Z': 1.65383,
'07 09:30 Z': 1.50002,
'07 10:00 Z': 1.31234,
'07 10:30 Z': 1.38772,
'07 11:00 Z': 1.77458,
'07 11:30 Z': 1.34453,
'07 12:00 Z': 1.36942,
'07 12:30 Z': 0.87376,
'07 13:00 Z': 0.95323,
'07 13:30 Z': 0.6804,
'07 14:00 Z': 0.25728,
'07 14:30 Z': 0.34482,
'07 15:00 Z': 0.86409,
'07 15:30 Z': 1.38351,
'07 16:00 Z': 1.19523,
'07 16:30 Z': 1.20661,
'07 17:00 Z': 1.47491,
'07 17:30 Z': 2.18695,
'07 18:00 Z': 1.92118,
'07 18:30 Z': 1.60131,
'07 19:00 Z': 1.05795,
'07 19:30 Z': 0.70921,
'07 20:00 Z': 0.41669,
'07 20:30 Z': 0.70745,
'07 21:00 Z': 0.95617,
'07 21:30 Z': 0.85735,
'07 22:00 Z': 1.05248,
'07 22:30 Z': 1.5086,
'07 23:00 Z': 1.23939,
'07 23:30 Z': 1.20779,
'08 00:00 Z': 1.69654,
'08 00:30 Z': 1.80962,
'08 01:00 Z': 1.64544,
'08 01:30 Z': 1.55535,
'08 02:00 Z': 1.48418,
'08 02:30 Z': 1.34347,
'08 03:00 Z': 1.18539,
'08 03:30 Z': 1.32698,
'08 04:00 Z': 1.85227,
'08 04:30 Z': 2.79485,
'08 05:00 Z': 2.79566,
'08 05:30 Z': 2.58811,
'08 06:00 Z': 2.86145,
'08 06:30 Z': 2.51298,
'08 07:00 Z': 2.57284,
'08 07:30 Z': 2.07006,
'08 08:00 Z': 1.94933,
'08 08:30 Z': 1.92868,
'08 09:00 Z': 2.18233,
'08 09:30 Z': 1.87391,
'08 10:00 Z': 1.72013,
'08 10:30 Z': 1.72355,
'08 11:00 Z': 1.54715,
'08 11:30 Z': 1.49686,
'08 12:00 Z': 1.43098,
'08 12:30 Z': 0.99057,
'08 13:00 Z': 1.07681,
'08 13:30 Z': 1.32839,
'08 14:00 Z': 1.06035,
'08 14:30 Z': 0.96292,
'08 15:00 Z': 0.91346,
'08 15:30 Z': 1.24636,
'08 16:00 Z': 1.37019,
'08 16:30 Z': 1.37027,
'08 17:00 Z': 1.95303,
'08 17:30 Z': 2.02275,
'08 18:00 Z': 1.00094,
'08 18:30 Z': 0.4785,
'08 19:00 Z': 0.40559,
'08 19:30 Z': 0.54635,
'08 20:00 Z': 0.58179,
'08 20:30 Z': 0.38703,
'08 21:00 Z': 0.58853,
'08 21:30 Z': 0.45763,
'08 22:00 Z': 0.40925,
'08 22:30 Z': 0.98011,
'08 23:00 Z': 1.2648,
'08 23:30 Z': 1.08986,
'09 00:00 Z': 1.3374,
'09 00:30 Z': 1.56832,
'09 01:00 Z': 1.22979,
'09 01:30 Z': 1.08172,
'09 02:00 Z': 1.22503,
'09 02:30 Z': 1.08963,
'09 03:00 Z': 1.11918,
'09 03:30 Z': 1.03086,
'09 04:00 Z': 1.01841,
'09 04:30 Z': 1.11273,
'09 05:00 Z': 1.63974,
'09 05:30 Z': 1.23911,
'09 06:00 Z': 1.51952,
'09 06:30 Z': 1.66258,
'09 07:00 Z': 1.81746,
'09 07:30 Z': 1.85027,
'09 08:00 Z': 1.93133,
'09 08:30 Z': 1.97946,
'09 09:00 Z': 2.25646,
'09 09:30 Z': 2.03122,
'09 10:00 Z': 1.82991,
'09 10:30 Z': 1.98645,
'09 11:00 Z': 1.74468,
'09 11:30 Z': 1.78622,
'09 12:00 Z': 1.74182,
'09 12:30 Z': 0.8337,
'09 13:00 Z': 0.81672,
'09 13:30 Z': 0.65666,
'09 14:00 Z': 0.79135,
'09 14:30 Z': 0.72284,
'09 15:00 Z': 1.03535,
'09 15:30 Z': 1.52953,
'09 16:00 Z': 1.6912,
'09 16:30 Z': 2.14968,
'09 17:00 Z': 2.44486,
'09 17:30 Z': 2.55469,
'09 18:00 Z': 2.11624,
'09 18:30 Z': 2.02414,
'09 19:00 Z': 1.52991,
'09 19:30 Z': 1.28656,
'09 20:00 Z': 1.07766,
'09 20:30 Z': 0.8489,
'09 21:00 Z': 1.10706,
'09 21:30 Z': 0.69324,
'09 22:00 Z': 1.11025,
'09 22:30 Z': 0.94994,
'09 23:00 Z': 0.94023,
'09 23:30 Z': 0.92641,
'10 00:00 Z': 1.17457,
'10 00:30 Z': 1.91797,
'10 01:00 Z': 1.60079,
'10 01:30 Z': 1.97434,
'10 02:00 Z': 1.61163,
'10 02:30 Z': 1.82481,
'10 03:00 Z': 1.47057,
'10 03:30 Z': 1.39719,
'10 04:00 Z': 1.22451,
'10 04:30 Z': 1.27571,
'10 05:00 Z': 1.48103,
'10 05:30 Z': 1.67269,
'10 06:00 Z': 1.70835,
'10 06:30 Z': 1.47873,
'10 07:00 Z': 1.54218,
'10 07:30 Z': 1.3386,
'10 08:00 Z': 0.98365,
'10 08:30 Z': 0.73726,
'10 09:00 Z': 0.76316,
'10 09:30 Z': 1.06658,
'10 10:00 Z': 1.14873,
'10 10:30 Z': 1.34504,
'10 11:00 Z': 1.84483,
'10 11:30 Z': 1.27819,
'10 12:00 Z': 1.18927,
'10 12:30 Z': 0.78079,
'10 13:00 Z': 0.64687,
'10 13:30 Z': 0.58873,
'10 14:00 Z': 0.5368,
'10 14:30 Z': 0.62231,
'10 15:00 Z': 0.86742,
'10 15:30 Z': 1.13307,
'10 16:00 Z': 0.96228,
'10 16:30 Z': 1.23,
'10 17:00 Z': 1.50626,
'10 17:30 Z': 1.98715,
'10 18:00 Z': 1.84139,
'10 18:30 Z': 1.63546,
'10 19:00 Z': 1.46268,
'10 19:30 Z': 1.02779,
'10 20:00 Z': 1.61698,
'10 20:30 Z': 1.00967,
'10 21:00 Z': 0.70147,
'10 21:30 Z': 0.51685,
'10 22:00 Z': 0.83682,
'10 22:30 Z': 1.0261,
'10 23:00 Z': 0.60871,
'10 23:30 Z': 0.49932,
'11 00:00 Z': 0.50085,
'11 00:30 Z': 0.61548,
'11 01:00 Z': 0.55435,
'11 01:30 Z': 0.30822,
'11 02:00 Z': 0.2593,
'11 02:30 Z': 0.29585,
'11 03:00 Z': 0.45501,
'11 03:30 Z': 0.62617,
'11 04:00 Z': 1.08826,
'11 04:30 Z': 0.97188,
'11 05:00 Z': 1.08145,
'11 05:30 Z': 1.15344,
'11 06:00 Z': 1.28023,
'11 06:30 Z': 1.08484,
'11 07:00 Z': 0.80224,
'11 07:30 Z': 0.19481,
'11 08:00 Z': 0.29391,
'11 08:30 Z': 0.45718,
'11 09:00 Z': 0.45571,
'11 09:30 Z': 0.458,
'11 10:00 Z': 0.47373,
'11 10:30 Z': 0.73325,
'11 11:00 Z': 0.95941,
'11 11:30 Z': 0.76914,
'11 12:00 Z': 0.51001,
'11 12:30 Z': 0.31578,
'11 13:00 Z': 0.24801,
'11 13:30 Z': 0.16928,
'11 14:00 Z': -0.03259,
'11 14:30 Z': 0.19549,
'11 15:00 Z': 0.31516,
'11 15:30 Z': 0.42953,
'11 16:00 Z': 0.60053,
'11 16:30 Z': 0.74378,
'11 17:00 Z': 1.15469,
'11 17:30 Z': 1.91054,
'11 18:00 Z': 1.88092,
'11 18:30 Z': 1.53745,
'11 19:00 Z': 0.99371,
'11 19:30 Z': 0.73896,
'11 20:00 Z': 0.85699,
'11 20:30 Z': 0.64434,
'11 21:00 Z': 0.97501,
'11 21:30 Z': 0.71879,
'11 22:00 Z': 0.92948,
'11 22:30 Z': 0.80389,
'11 23:00 Z': 0.2435,
'11 23:30 Z': 0.10201,
'12 00:00 Z': 0.51348,
'12 00:30 Z': 0.55666,
'12 01:00 Z': 0.43639,
'12 01:30 Z': 0.45949,
'12 02:00 Z': 0.64946,
'12 02:30 Z': 0.50845,
'12 03:00 Z': 0.38217,
'12 03:30 Z': 0.3465,
'12 04:00 Z': 0.77363,
'12 04:30 Z': 0.89712,
'12 05:00 Z': 1.17213,
'12 05:30 Z': 1.14194,
'12 06:00 Z': 2.13751,
'12 06:30 Z': 1.57869,
'12 07:00 Z': 1.73303,
'12 07:30 Z': 1.13904,
'12 08:00 Z': 0.82358,
'12 08:30 Z': 0.93044,
'12 09:00 Z': 0.57985,
'12 09:30 Z': 0.55626,
'12 10:00 Z': 0.58943,
'12 10:30 Z': 0.67431,
'12 11:00 Z': 0.70949,
'12 11:30 Z': 0.55713,
'12 12:00 Z': 0.6216,
'12 12:30 Z': 0.55276,
'12 13:00 Z': 0.54071,
'12 13:30 Z': 0.34715,
'12 14:00 Z': -0.05986,
'12 14:30 Z': 0.05852,
'12 15:00 Z': 0.20765,
'12 15:30 Z': 0.46028,
'12 16:00 Z': 0.35195,
'12 16:30 Z': 0.313,
'12 17:00 Z': 1.25535,
'12 17:30 Z': 3.09645,
'12 18:00 Z': 2.70328,
'12 18:30 Z': 1.84865,
'12 19:00 Z': 1.00412,
'12 19:30 Z': 0.94589,
'12 20:00 Z': 1.19208,
'12 20:30 Z': 1.03082,
'12 21:00 Z': 1.0048,
'12 21:30 Z': 0.61747,
'12 22:00 Z': 0.49616,
'12 22:30 Z': 0.34975,
'12 23:00 Z': 0.40596,
'12 23:30 Z': 0.23218,
'13 00:00 Z': 0.43934,
'13 00:30 Z': 0.51919,
'13 01:00 Z': 0.43802,
'13 01:30 Z': 0.31097,
'13 02:00 Z': 0.25603,
'13 02:30 Z': 0.27841,
'13 03:00 Z': 0.33483,
'13 03:30 Z': 0.49135,
'13 04:00 Z': 0.44917,
'13 04:30 Z': 0.34801,
'13 05:00 Z': 0.55453,
'13 05:30 Z': 0.7387,
'13 06:00 Z': 0.90701,
'13 06:30 Z': 0.85566,
'13 07:00 Z': 0.77526,
'13 07:30 Z': 0.36585,
'13 08:00 Z': 0.43225,
'13 08:30 Z': 0.46421,
'13 09:00 Z': 0.47868,
'13 09:30 Z': 0.52827,
'13 10:00 Z': 0.54759,
'13 10:30 Z': 0.56661,
'13 11:00 Z': 0.78426,
'13 11:30 Z': 0.75823,
'13 12:00 Z': 0.64736,
'13 12:30 Z': 0.46068,
'13 13:00 Z': 0.51016,
'13 13:30 Z': 0.44088,
'13 14:00 Z': 0.36257,
'13 14:30 Z': 0.52254,
'13 15:00 Z': 0.45161,
'13 15:30 Z': 0.4512,
'13 16:00 Z': 0.44301,
'13 16:30 Z': 0.50397,
'13 17:00 Z': 1.75809,
'13 17:30 Z': 2.40914,
'13 18:00 Z': 2.20655,
'13 18:30 Z': 1.74203,
'13 19:00 Z': 0.7695,
'13 19:30 Z': 0.4185,
'13 20:00 Z': 1.13367,
'13 20:30 Z': 0.89055,
'13 21:00 Z': 0.66461,
'13 21:30 Z': 0.55396,
'13 22:00 Z': 0.81069,
'13 22:30 Z': 0.76396,
'13 23:00 Z': 0.61007,
'13 23:30 Z': 0.52426,
'14 00:00 Z': 0.76318,
'14 00:30 Z': 0.785,
'14 01:00 Z': 0.75349,
'14 01:30 Z': 0.62325,
'14 02:00 Z': 0.6132,
'14 02:30 Z': 0.6623,
'14 03:00 Z': 0.68965,
'14 03:30 Z': 0.7381,
'14 04:00 Z': 0.62015,
'14 04:30 Z': 0.85048,
'14 05:00 Z': 1.15292,
'14 05:30 Z': 1.14405,
'14 06:00 Z': 1.75038,
'14 06:30 Z': 1.68556,
'14 07:00 Z': 1.80593,
'14 07:30 Z': 1.16865,
'14 08:00 Z': 1.14333,
'14 08:30 Z': 1.6635,
'14 09:00 Z': 1.24948,
'14 09:30 Z': 1.35733,
'14 10:00 Z': 1.19014,
'14 10:30 Z': 1.25939,
'14 11:00 Z': 1.24692,
'14 11:30 Z': 0.89421,
'14 12:00 Z': 0.63763,
'14 12:30 Z': 0.39642,
'14 13:00 Z': 0.42708,
'14 13:30 Z': 0.36838,
'14 14:00 Z': 0.4249,
'14 14:30 Z': 0.56453,
'14 15:00 Z': 0.66163,
'14 15:30 Z': 0.95086,
'14 16:00 Z': 0.90417,
'14 16:30 Z': 1.02819,
'14 17:00 Z': 2.06459,
'14 17:30 Z': 2.41217,
'14 18:00 Z': 1.85811,
'14 18:30 Z': 1.23663,
'14 19:00 Z': 0.65224,
'14 19:30 Z': 0.44634,
'14 20:00 Z': 0.75176,
'14 20:30 Z': 0.78026,
'14 21:00 Z': 0.84888,
'14 21:30 Z': 0.61704,
'14 22:00 Z': 1.09192,
'14 22:30 Z': 0.90755,
'14 23:00 Z': 1.02565,
'14 23:30 Z': 0.82514,
'15 00:00 Z': 1.14924,
'15 00:30 Z': 1.19681,
'15 01:00 Z': 0.83763,
'15 01:30 Z': 0.72801,
'15 02:00 Z': 0.53399,
'15 02:30 Z': 0.57079,
'15 03:00 Z': 0.54353,
'15 03:30 Z': 0.49358,
'15 04:00 Z': 0.75706,
'15 04:30 Z': 1.05811,
'15 05:00 Z': 1.45011,
'15 05:30 Z': 1.22726,
'15 06:00 Z': 1.48478,
'15 06:30 Z': 1.52707,
'15 07:00 Z': 1.52408,
'15 07:30 Z': 1.09221,
'15 08:00 Z': 0.98629,
'15 08:30 Z': 0.95458,
'15 09:00 Z': 0.89205,
'15 09:30 Z': 0.85812,
'15 10:00 Z': 0.88076,
'15 10:30 Z': 0.97884,
'15 11:00 Z': 0.97623,
'15 11:30 Z': 0.92677,
'15 12:00 Z': 0.78873,
'15 12:30 Z': 0.58795,
'15 13:00 Z': 0.48611,
'15 13:30 Z': 0.43515,
'15 14:00 Z': 0.44533,
'15 14:30 Z': 0.629,
'15 15:00 Z': 0.77053,
'15 15:30 Z': 0.95711,
'15 16:00 Z': 1.3709,
'15 16:30 Z': 2.06545,
'15 17:00 Z': 3.06528,
'15 17:30 Z': 3.70271,
'15 18:00 Z': 3.34121,
'15 18:30 Z': 2.47984,
'15 19:00 Z': 1.57772,
'15 19:30 Z': 0.87621,
'15 20:00 Z': 0.9209,
'15 20:30 Z': 1.04283,
'15 21:00 Z': 1.4006,
'15 21:30 Z': 1.16528,
'15 22:00 Z': 1.40821,
'15 22:30 Z': 0.99211,
'15 23:00 Z': 1.13123,
'15 23:30 Z': 0.82319,
'16 00:00 Z': 1.22204,
'16 00:30 Z': 1.21472,
'16 01:00 Z': 0.98762,
'16 01:30 Z': 0.88569,
'16 02:00 Z': 1.14929,
'16 02:30 Z': 1.09718,
'16 03:00 Z': 0.92619,
'16 03:30 Z': 0.89178,
'16 04:00 Z': 0.76267,
'16 04:30 Z': 0.91027,
'16 05:00 Z': 1.15347,
'16 05:30 Z': 1.00876,
'16 06:00 Z': 1.20658,
'16 06:30 Z': 1.39265,
'16 07:00 Z': 1.41477,
'16 07:30 Z': 1.19319,
'16 08:00 Z': 1.48553,
'16 08:30 Z': 1.21837,
'16 09:00 Z': 1.24179,
'16 09:30 Z': 1.28167,
'16 10:00 Z': 1.10656,
'16 10:30 Z': 0.98172,
'16 11:00 Z': 1.00667,
'16 11:30 Z': 1.01402,
'16 12:00 Z': 0.87991,
'16 12:30 Z': 0.69491,
'16 13:00 Z': 0.70992,
'16 13:30 Z': 0.55499,
'16 14:00 Z': 0.64984,
'16 14:30 Z': 0.61463,
'16 15:00 Z': 0.59721,
'16 15:30 Z': 0.61644,
'16 16:00 Z': 0.67472,
'16 16:30 Z': 1.0499,
'16 17:00 Z': 1.50887,
'16 17:30 Z': 2.11671,
'16 18:00 Z': 2.10544,
'16 18:30 Z': 1.70262,
'16 19:00 Z': 1.19155,
'16 19:30 Z': 0.99358,
'16 20:00 Z': 1.24918,
'16 20:30 Z': 1.14284,
'16 21:00 Z': 1.00511,
'16 21:30 Z': 0.78375,
'16 22:00 Z': 1.02671,
'16 22:30 Z': 1.30584,
'16 23:00 Z': 0.82744,
'16 23:30 Z': 0.538,
'17 00:00 Z': 0.87743,
'17 00:30 Z': 1.57823,
'17 01:00 Z': 1.01251,
'17 01:30 Z': 1.23076,
'17 02:00 Z': 0.94506,
'17 02:30 Z': 0.88462,
'17 03:00 Z': 0.73929,
'17 03:30 Z': 0.63274,
'17 04:00 Z': 0.21285,
'17 04:30 Z': 0.10263,
'17 05:00 Z': 0.36147,
'17 05:30 Z': 0.61289,
'17 06:00 Z': 0.46368,
'17 06:30 Z': 0.16651,
'17 07:00 Z': 0.72136,
'17 07:30 Z': 0.8697,
'17 08:00 Z': 0.79476,
'17 08:30 Z': 0.76198,
'17 09:00 Z': 0.96237,
'17 09:30 Z': 0.76071,
'17 10:00 Z': 1.17766,
'17 10:30 Z': 1.55558,
'17 11:00 Z': 1.70196,
'17 11:30 Z': 1.55747,
'17 12:00 Z': 1.3977,
'17 12:30 Z': 0.97602,
'17 13:00 Z': 0.7098,
'17 13:30 Z': 0.60126,
'17 14:00 Z': 0.61213,
'17 14:30 Z': 0.69817,
'17 15:00 Z': 0.97943,
'17 15:30 Z': 1.13106,
'17 16:00 Z': 1.06396,
'17 16:30 Z': 1.45142,
'17 17:00 Z': 1.8932,
'17 17:30 Z': 2.70246,
'17 18:00 Z': 2.54842,
'17 18:30 Z': 1.6379,
'17 19:00 Z': 1.00769,
'17 19:30 Z': 0.51197,
'17 20:00 Z': 0.73503,
'17 20:30 Z': 0.98477,
'17 21:00 Z': 1.08906,
'17 21:30 Z': 0.92303,
'17 22:00 Z': 0.78524,
'17 22:30 Z': 0.60961,
'17 23:00 Z': 0.84919,
'17 23:30 Z': 0.9816,
'18 00:00 Z': 1.15535,
'18 00:30 Z': 1.15277,
'18 01:00 Z': 1.09404,
'18 01:30 Z': 0.85812,
'18 02:00 Z': 0.85153,
'18 02:30 Z': 0.78912,
'18 03:00 Z': 0.89509,
'18 03:30 Z': 0.65878,
'18 04:00 Z': 0.7835,
'18 04:30 Z': 0.78076,
'18 05:00 Z': 0.99847,
'18 05:30 Z': 1.10853,
'18 06:00 Z': 1.95115,
'18 06:30 Z': 1.63864,
'18 07:00 Z': 1.47171,
'18 07:30 Z': 1.10538,
'18 08:00 Z': 1.65953,
'18 08:30 Z': 1.42219,
'18 09:00 Z': 1.33852,
'18 09:30 Z': 1.3143,
'18 10:00 Z': 1.30552,
'18 10:30 Z': 1.24219,
'18 11:00 Z': 1.77893,
'18 11:30 Z': 1.68116,
'18 12:00 Z': 1.47936,
'18 12:30 Z': 1.07226,
'18 13:00 Z': 0.85612,
'18 13:30 Z': 0.73282,
'18 14:00 Z': 0.61045,
'18 14:30 Z': 0.67089,
'18 15:00 Z': 0.6648,
'18 15:30 Z': 1.07249,
'18 16:00 Z': 1.73093,
'18 16:30 Z': 1.97599,
'18 17:00 Z': 2.95554,
'18 17:30 Z': 2.50463,
'18 18:00 Z': 2.08993,
'18 18:30 Z': 1.8054,
'18 19:00 Z': 1.02134,
'18 19:30 Z': 0.86252,
'18 20:00 Z': 0.73472,
'18 20:30 Z': 0.80182,
'18 21:00 Z': 0.87111,
'18 21:30 Z': 0.4877,
'18 22:00 Z': 0.63142,
'18 22:30 Z': 1.38526,
'18 23:00 Z': 1.20201,
'18 23:30 Z': 0.64852,
'19 00:00 Z': 1.19265,
'19 00:30 Z': 1.40372,
'19 01:00 Z': 1.38422,
'19 01:30 Z': 1.1954,
'19 02:00 Z': 1.13596,
'19 02:30 Z': 1.06073,
'19 03:00 Z': 0.86371,
'19 03:30 Z': 0.84126,
'19 04:00 Z': 1.12646,
'19 04:30 Z': 1.61559,
'19 05:00 Z': 1.777,
'19 05:30 Z': 2.38331,
'19 06:00 Z': 2.11143,
'19 06:30 Z': 2.20623,
'19 07:00 Z': 1.98539,
'19 07:30 Z': 1.35304,
'19 08:00 Z': 1.17292,
'19 08:30 Z': 1.03305,
'19 09:00 Z': 0.85338,
'19 09:30 Z': 0.87622,
'19 10:00 Z': 0.90313,
'19 10:30 Z': 0.88423,
'19 11:00 Z': 0.85092,
'19 11:30 Z': 0.77493,
'19 12:00 Z': 0.71324,
'19 12:30 Z': 0.52415,
'19 13:00 Z': 0.51745,
'19 13:30 Z': 0.38579,
'19 14:00 Z': 0.26881,
'19 14:30 Z': 0.25236,
'19 15:00 Z': 0.52586,
'19 15:30 Z': 1.13881,
'19 16:00 Z': 1.51395,
'19 16:30 Z': 1.30573,
'19 17:00 Z': 1.78837,
'19 17:30 Z': 2.62164,
'19 18:00 Z': 1.87459,
'19 18:30 Z': 2.11264,
'19 19:00 Z': 1.72681,
'19 19:30 Z': 1.36274,
'19 20:00 Z': 1.57317,
'19 20:30 Z': 1.53935,
'19 21:00 Z': 0.87418,
'19 21:30 Z': 0.25294,
'19 22:00 Z': 0.11588,
'19 22:30 Z': 0.00094,
'19 23:00 Z': -0.24658,
'19 23:30 Z': -0.39647,
'20 00:00 Z': 0.21952,
'20 00:30 Z': 0.43432,
'20 01:00 Z': 0.43777,
'20 01:30 Z': 0.45757,
'20 02:00 Z': 0.38194,
'20 02:30 Z': 0.2413,
'20 03:00 Z': 0.48438,
'20 03:30 Z': 0.49187,
'20 04:00 Z': 0.86796,
'20 04:30 Z': 1.0479,
'20 05:00 Z': 0.94154,
'20 05:30 Z': 0.86234,
'20 06:00 Z': 1.85064,
'20 06:30 Z': 1.88006,
'20 07:00 Z': 1.60386,
'20 07:30 Z': 1.07772,
'20 08:00 Z': 1.35413,
'20 08:30 Z': 1.64066,
'20 09:00 Z': 1.58958,
'20 09:30 Z': 1.18439,
'20 10:00 Z': 1.07127,
'20 10:30 Z': 0.98849,
'20 11:00 Z': 0.88142,
'20 11:30 Z': 0.73909,
'20 12:00 Z': 0.80369,
'20 12:30 Z': 0.60599,
'20 13:00 Z': 0.58451,
'20 13:30 Z': 0.41868,
'20 14:00 Z': 0.40151,
'20 14:30 Z': 0.57198,
'20 15:00 Z': 0.51692,
'20 15:30 Z': 1.04843,
'20 16:00 Z': 2.0119,
'20 16:30 Z': 2.28044,
'20 17:00 Z': 3.18625,
'20 17:30 Z': 3.87611,
'20 18:00 Z': 3.24508,
'20 18:30 Z': 3.39068,
'20 19:00 Z': 2.13436,
'20 19:30 Z': 1.43957,
'20 20:00 Z': 1.54046,
'20 20:30 Z': 2.30065,
'20 21:00 Z': 2.12959,
'20 21:30 Z': 1.40097,
'20 22:00 Z': 1.39325,
'20 22:30 Z': 1.00306,
'20 23:00 Z': 0.89668,
'20 23:30 Z': 0.62773,
'21 00:00 Z': 1.18777,
'21 00:30 Z': 1.28751,
'21 01:00 Z': 1.35927,
'21 01:30 Z': 1.29377,
'21 02:00 Z': 1.3201,
'21 02:30 Z': 1.021,
'21 03:00 Z': 0.74443,
'21 03:30 Z': 0.5241,
'21 04:00 Z': 0.58342,
'21 04:30 Z': 1.03543,
'21 05:00 Z': 1.36075,
'21 05:30 Z': 1.31099,
'21 06:00 Z': 2.28724,
'21 06:30 Z': 2.28598,
'21 07:00 Z': 1.62676,
'21 07:30 Z': 1.01348,
'21 08:00 Z': 1.03776,
'21 08:30 Z': 1.09405,
'21 09:00 Z': 1.03307,
'21 09:30 Z': 0.81755,
'21 10:00 Z': 0.77158,
'21 10:30 Z': 0.70674,
'21 11:00 Z': 0.57914,
'21 11:30 Z': 0.4677,
'21 12:00 Z': 0.50349,
'21 12:30 Z': 0.1979,
'21 13:00 Z': 0.06546,
'21 13:30 Z': -0.07916,
'21 14:00 Z': -0.3141,
'21 14:30 Z': -0.27817,
'21 15:00 Z': -0.07461,
'21 15:30 Z': 0.34543,
'21 16:00 Z': 1.1562,
'21 16:30 Z': 1.34202,
'21 17:00 Z': 1.50054,
'21 17:30 Z': 1.63178,
'21 18:00 Z': 1.68031,
'21 18:30 Z': 1.36237,
'21 19:00 Z': 1.12956,
'21 19:30 Z': 1.29356,
'21 20:00 Z': 1.25467,
'21 20:30 Z': 0.9197,
'21 21:00 Z': 0.90804,
'21 21:30 Z': 0.58769,
'21 22:00 Z': 0.67584,
'21 22:30 Z': 0.72263,
'21 23:00 Z': 0.32059,
'21 23:30 Z': 0.36888,
'22 00:00 Z': 0.77794,
'22 00:30 Z': 1.06828,
'22 01:00 Z': 0.79095,
'22 01:30 Z': 0.74964,
'22 02:00 Z': 0.76722,
'22 02:30 Z': 0.65466,
'22 03:00 Z': 0.9843,
'22 03:30 Z': 0.87573,
'22 04:00 Z': 0.74632,
'22 04:30 Z': 0.40551,
'22 05:00 Z': 0.51541,
'22 05:30 Z': 0.59136,
'22 06:00 Z': 1.61126,
'22 06:30 Z': 1.67539,
'22 07:00 Z': 1.21946,
'22 07:30 Z': 0.96014,
'22 08:00 Z': 0.78816,
'22 08:30 Z': 1.00705,
'22 09:00 Z': 1.08703,
'22 09:30 Z': 0.94038,
'22 10:00 Z': 0.89712,
'22 10:30 Z': 0.75796,
'22 11:00 Z': 0.80825,
'22 11:30 Z': 0.74369,
'22 12:00 Z': 0.50681,
'22 12:30 Z': 0.44206,
'22 13:00 Z': 0.48378,
'22 13:30 Z': 0.44861,
'22 14:00 Z': 0.47681,
'22 14:30 Z': 0.536,
'22 15:00 Z': 0.72903,
'22 15:30 Z': 0.85929,
'22 16:00 Z': 1.25582,
'22 16:30 Z': 1.25208,
'22 17:00 Z': 1.50973,
'22 17:30 Z': 1.46351,
'22 18:00 Z': 1.27732,
'22 18:30 Z': 1.53381,
'22 19:00 Z': 0.86597,
'22 19:30 Z': 0.78274,
'22 20:00 Z': 0.56776,
'22 20:30 Z': 0.42322,
'22 21:00 Z': 0.50741,
'22 21:30 Z': 0.45468,
'22 22:00 Z': 0.49615,
'22 22:30 Z': 0.67692,
'22 23:00 Z': 0.93979,
'22 23:30 Z': 0.78749,
'23 00:00 Z': 1.32521,
'23 00:30 Z': 1.52004,
'23 01:00 Z': 1.6577,
'23 01:30 Z': 1.89602,
'23 02:00 Z': 1.7635,
'23 02:30 Z': 1.6934,
'23 03:00 Z': 1.48891,
'23 03:30 Z': 1.18266,
'23 04:00 Z': 0.93995,
'23 04:30 Z': 0.94576,
'23 05:00 Z': 1.1978,
'23 05:30 Z': 0.89063,
'23 06:00 Z': 1.26104,
'23 06:30 Z': 2.08004,
'23 07:00 Z': 2.32437,
'23 07:30 Z': 1.92969,
'23 08:00 Z': 2.71744,
'23 08:30 Z': 2.44716,
'23 09:00 Z': 2.07528,
'23 09:30 Z': 1.68402,
'23 10:00 Z': 1.79575,
'23 10:30 Z': 1.77384,
'23 11:00 Z': 1.27061,
'23 11:30 Z': 1.13773,
'23 12:00 Z': 1.06538,
'23 12:30 Z': 0.58166,
'23 13:00 Z': 0.38624,
'23 13:30 Z': 0.40408,
'23 14:00 Z': 0.40129,
'23 14:30 Z': 0.26681,
'23 15:00 Z': 0.4632,
'23 15:30 Z': 0.96859,
'23 16:00 Z': 1.14029,
'23 16:30 Z': 1.21067,
'23 17:00 Z': 1.42742,
'23 17:30 Z': 1.55343,
'23 18:00 Z': 1.24589,
'23 18:30 Z': 1.48674,
'23 19:00 Z': 1.38795,
'23 19:30 Z': 0.76044,
'23 20:00 Z': 0.5256,
'23 20:30 Z': 0.97998,
'23 21:00 Z': 0.77543,
'23 21:30 Z': 0.54748,
'23 22:00 Z': 1.16725,
'23 22:30 Z': 1.49896,
'23 23:00 Z': 1.30983,
'23 23:30 Z': 0.86089,
'24 00:00 Z': 1.11594,
'24 00:30 Z': 1.14322,
'24 01:00 Z': 1.06249,
'24 01:30 Z': 0.96186,
'24 02:00 Z': 1.40417,
'24 02:30 Z': 1.3994,
'24 03:00 Z': 1.24683,
'24 03:30 Z': 1.31319,
'24 04:00 Z': 1.35275,
'24 04:30 Z': 1.28982,
'24 05:00 Z': 1.42056,
'24 05:30 Z': 1.44045,
'24 06:00 Z': 1.00368,
'24 06:30 Z': 1.08398,
'24 07:00 Z': 1.69388,
'24 07:30 Z': 1.64559,
'24 08:00 Z': 1.54957,
'24 08:30 Z': 1.61062,
'24 09:00 Z': 1.69637,
'24 09:30 Z': 1.69903,
'24 10:00 Z': 1.30688,
'24 10:30 Z': 1.31445,
'24 11:00 Z': 1.1913,
'24 11:30 Z': 1.12542,
'24 12:00 Z': 1.09166,
'24 12:30 Z': 0.55198,
'24 13:00 Z': 0.42048,
'24 13:30 Z': 0.60288,
'24 14:00 Z': 0.68487,
'24 14:30 Z': 0.64477,
'24 15:00 Z': 0.74466,
'24 15:30 Z': 0.48833,
'24 16:00 Z': 0.33676,
'24 16:30 Z': 0.87899,
'24 17:00 Z': 1.31352,
'24 17:30 Z': 1.57321,
'24 18:00 Z': 1.40746,
'24 18:30 Z': 1.1125,
'24 19:00 Z': 1.3443,
'24 19:30 Z': 0.7905,
'24 20:00 Z': 1.20467,
'24 20:30 Z': 1.23815,
'24 21:00 Z': 1.07496,
'24 21:30 Z': 0.46676,
'24 22:00 Z': 1.29652,
'24 22:30 Z': 1.32983,
'24 23:00 Z': 1.09176,
'24 23:30 Z': 0.87708,
'25 00:00 Z': 1.3925,
'25 00:30 Z': 1.85204,
'25 01:00 Z': 1.62717,
'25 01:30 Z': 1.6481,
'25 02:00 Z': 1.44683,
'25 02:30 Z': 1.52114,
'25 03:00 Z': 1.53415,
'25 03:30 Z': 1.26225,
'25 04:00 Z': 1.45102,
'25 04:30 Z': 1.02728,
'25 05:00 Z': 0.89198,
'25 05:30 Z': 0.97269,
'25 06:00 Z': 2.34444,
'25 06:30 Z': 1.79844,
'25 07:00 Z': 1.70796,
'25 07:30 Z': 1.87946,
'25 08:00 Z': 1.6872,
'25 08:30 Z': 1.67977,
'25 09:00 Z': 1.6853,
'25 09:30 Z': 1.8131,
'25 10:00 Z': 1.61547,
'25 10:30 Z': 1.23086,
'25 11:00 Z': 1.04006,
'25 11:30 Z': 0.79462,
'25 12:00 Z': 0.61981,
'25 12:30 Z': 0.25201,
'25 13:00 Z': 0.20112,
'25 13:30 Z': -0.03461,
'25 14:00 Z': 0.08023,
'25 14:30 Z': 0.08483,
'25 15:00 Z': 0.12647,
'25 15:30 Z': 0.49587,
'25 16:00 Z': 1.41086,
'25 16:30 Z': 1.74937,
'25 17:00 Z': 3.04474,
'25 17:30 Z': 2.82994,
'25 18:00 Z': 2.01236,
'25 18:30 Z': 1.83595,
'25 19:00 Z': 1.28709,
'25 19:30 Z': 0.92182,
'25 20:00 Z': 0.63048,
'25 20:30 Z': 0.87334,
'25 21:00 Z': 0.98808,
'25 21:30 Z': 0.68463,
'25 22:00 Z': 0.69376,
'25 22:30 Z': 0.83565,
'25 23:00 Z': 1.35859,
'25 23:30 Z': 1.06459,
'26 00:00 Z': 1.61048,
'26 00:30 Z': 1.69017,
'26 01:00 Z': 1.63919,
'26 01:30 Z': 1.47078,
'26 02:00 Z': 1.34807,
'26 02:30 Z': 1.30981,
'26 03:00 Z': 1.00316,
'26 03:30 Z': 0.88474,
'26 04:00 Z': 1.09967,
'26 04:30 Z': 1.17402,
'26 05:00 Z': 1.41981,
'26 05:30 Z': 1.52936,
'26 06:00 Z': 2.10278,
'26 06:30 Z': 2.1439,
'26 07:00 Z': 1.95863,
'26 07:30 Z': 2.03401,
'26 08:00 Z': 3.18175,
'26 08:30 Z': 3.38915,
'26 09:00 Z': 2.7214,
'26 09:30 Z': 2.62218,
'26 10:00 Z': 2.6577,
'26 10:30 Z': 3.06184,
'26 11:00 Z': 3.5363,
'26 11:30 Z': 3.52359,
'26 12:00 Z': 3.36961,
'26 12:30 Z': 2.80879,
'26 13:00 Z': 2.69068,
'26 13:30 Z': 2.43731,
'26 14:00 Z': 2.41002,
'26 14:30 Z': 2.37738,
'26 15:00 Z': 3.41004,
'26 15:30 Z': 2.98031,
'26 16:00 Z': 3.61782,
'26 16:30 Z': 3.33552,
'26 17:00 Z': 2.59972,
'26 17:30 Z': 2.5173,
'26 18:00 Z': 2.47632,
'26 18:30 Z': 2.28395,
'26 19:00 Z': 1.34161,
'26 19:30 Z': 1.32445,
'26 20:00 Z': 1.36597,
'26 20:30 Z': 1.1486,
'26 21:00 Z': 1.48253,
'26 21:30 Z': 0.91894,
'26 22:00 Z': 1.21432,
'26 22:30 Z': 1.03058,
'26 23:00 Z': 0.52643,
'26 23:30 Z': 0.2342,
'27 00:00 Z': 0.81967,
'27 00:30 Z': 1.03976,
'27 01:00 Z': 1.0864,
'27 01:30 Z': 1.20861,
'27 02:00 Z': 1.73784,
'27 02:30 Z': 1.70233,
'27 03:00 Z': 1.43633,
'27 03:30 Z': 1.20463,
'27 04:00 Z': 1.20596,
'27 04:30 Z': 1.23858,
'27 05:00 Z': 1.06008,
'27 05:30 Z': 0.63581,
'27 06:00 Z': 0.54103,
'27 06:30 Z': 0.75336,
'27 07:00 Z': 0.68697,
'27 07:30 Z': 0.57074,
'27 08:00 Z': 0.72951,
'27 08:30 Z': 0.81931,
'27 09:00 Z': 0.73207,
'27 09:30 Z': 0.6151,
'27 10:00 Z': 0.8088,
'27 10:30 Z': 0.79721,
'27 11:00 Z': 1.10109,
'27 11:30 Z': 1.09657,
'27 12:00 Z': 0.77457,
'27 12:30 Z': 0.49841,
'27 13:00 Z': 0.44027,
'27 13:30 Z': 1.14413,
'27 14:00 Z': 0.93919,
'27 14:30 Z': 0.9053,
'27 15:00 Z': 0.90354,
'27 15:30 Z': 1.13871,
'27 16:00 Z': 1.51176,
'27 16:30 Z': 1.54891,
'27 17:00 Z': 2.33796,
'27 17:30 Z': 2.05995,
'27 18:00 Z': 1.74548,
'27 18:30 Z': 1.51022,
'27 19:00 Z': 1.09752,
'27 19:30 Z': 0.92584,
'27 20:00 Z': 0.92722,
'27 20:30 Z': 0.75338,
'27 21:00 Z': 1.04097,
'27 21:30 Z': 0.66937,
'27 22:00 Z': 0.99931,
'27 22:30 Z': 0.86829,
'27 23:00 Z': 0.86475,
'27 23:30 Z': 0.68592,
'28 00:00 Z': 1.10121,
'28 00:30 Z': 1.35688,
'28 01:00 Z': 1.28651,
'28 01:30 Z': 1.15805,
'28 02:00 Z': 1.06085,
'28 02:30 Z': 1.14765,
'28 03:00 Z': 0.9556,
'28 03:30 Z': 1.00225,
'28 04:00 Z': 1.27888,
'28 04:30 Z': 1.3402,
'28 05:00 Z': 1.48297,
'28 05:30 Z': 1.00729,
'28 06:00 Z': 1.48947,
'28 06:30 Z': 1.78111,
'28 07:00 Z': 2.30389,
'28 07:30 Z': 2.34827,
'28 08:00 Z': 2.90943,
'28 08:30 Z': 2.67246,
'28 09:00 Z': 1.60927,
'28 09:30 Z': 1.10291,
'28 10:00 Z': 0.90494,
'28 10:30 Z': 0.7156,
'28 11:00 Z': 0.62665,
'28 11:30 Z': 0.65735,
'28 12:00 Z': 0.8226,
'28 12:30 Z': 0.51406,
'28 13:00 Z': 0.71773,
'28 13:30 Z': 0.62154,
'28 14:00 Z': 0.75635,
'28 14:30 Z': 0.69418,
'28 15:00 Z': 0.49929,
'28 15:30 Z': 0.79807,
'28 16:00 Z': 1.28064,
'28 16:30 Z': 1.63197,
'28 17:00 Z': 1.93658,
'28 17:30 Z': 1.70358,
'28 18:00 Z': 1.54721,
'28 18:30 Z': 1.04162,
'28 19:00 Z': 0.71881,
'28 19:30 Z': 0.80496,
'28 20:00 Z': 0.81476,
'28 20:30 Z': 0.6553,
'28 21:00 Z': 0.96139,
'28 21:30 Z': 0.8901,
'28 22:00 Z': 1.60632,
'28 22:30 Z': 2.30185,
'28 23:00 Z': 1.93333,
'28 23:30 Z': 1.19557,
'29 00:00 Z': 1.64608,
'29 00:30 Z': 2.80805,
'29 01:00 Z': 2.61694,
'29 01:30 Z': 2.25963,
'29 02:00 Z': 2.10265,
'29 02:30 Z': 1.85999,
'29 03:00 Z': 1.78845,
'29 03:30 Z': 1.43861,
'29 04:00 Z': 1.66926,
'29 04:30 Z': 2.00335,
'29 05:00 Z': 2.19502,
'29 05:30 Z': 1.62615,
'29 06:00 Z': 1.57143,
'29 06:30 Z': 2.03939,
'29 07:00 Z': 2.38831,
'29 07:30 Z': 2.5679,
'29 08:00 Z': 2.14979,
'29 08:30 Z': 1.84427,
'29 09:00 Z': 1.65097,
'29 09:30 Z': 1.27653,
'29 10:00 Z': 1.19523,
'29 10:30 Z': 1.43318,
'29 11:00 Z': 1.75832,
'29 11:30 Z': 1.32846,
'29 12:00 Z': 1.15259,
'29 12:30 Z': 0.82428,
'29 13:00 Z': 0.93208,
'29 13:30 Z': 1.31078,
'29 14:00 Z': 1.52166,
'29 14:30 Z': 2.06785,
'29 15:00 Z': 1.83007,
'29 15:30 Z': 1.97257,
'29 16:00 Z': 1.93319,
'29 16:30 Z': 2.02201,
'29 17:00 Z': 1.99099,
'29 17:30 Z': 1.89045,
'29 18:00 Z': 1.74065,
'29 18:30 Z': 1.66704,
'29 19:00 Z': 1.43195,
'29 19:30 Z': 1.25027,
'29 20:00 Z': 1.1881,
'29 20:30 Z': 1.26207,
'29 21:00 Z': 1.69146,
'29 21:30 Z': 1.34516,
'29 22:00 Z': 1.2575,
'29 22:30 Z': 1.61597,
'29 23:00 Z': 1.88763,
'29 23:30 Z': 1.55277,
'30 00:00 Z': 2.34879,
'30 00:30 Z': 2.42734,
'30 01:00 Z': 2.01419,
'30 01:30 Z': 2.17652,
'30 02:00 Z': 2.31383,
'30 02:30 Z': 2.02108,
'30 03:00 Z': 1.85336,
'30 03:30 Z': 1.66385,
'30 04:00 Z': 1.17573,
'30 04:30 Z': 1.3415,
'30 05:00 Z': 2.07292,
'30 05:30 Z': 1.80601,
'30 06:00 Z': 1.48599,
'30 06:30 Z': 1.88048,
'30 07:00 Z': 1.96273,
'30 07:30 Z': 1.55298,
'30 08:00 Z': 1.22234,
'30 08:30 Z': 1.16125,
'30 09:00 Z': 1.23374,
'30 09:30 Z': 1.43017,
'30 10:00 Z': 1.20552,
'30 10:30 Z': 1.10791,
'30 11:00 Z': 0.99109,
'30 11:30 Z': 0.73474,
'30 12:00 Z': 0.62768,
'30 12:30 Z': 0.56994,
'30 13:00 Z': 0.60399,
'30 13:30 Z': 0.22752,
'30 14:00 Z': 0.27718,
'30 14:30 Z': 0.38383,
'30 15:00 Z': 0.34917,
'30 15:30 Z': 0.81536,
'30 16:00 Z': 1.25747,
'30 16:30 Z': 2.74,
'30 17:00 Z': 4.88113,
'30 17:30 Z': 3.46601,
'30 18:00 Z': 1.25584,
'30 18:30 Z': 1.45458,
'30 19:00 Z': 1.51489,
'30 19:30 Z': 0.83139,
'30 20:00 Z': 0.6646,
'30 20:30 Z': 0.89993,
'30 21:00 Z': 0.9024,
'30 21:30 Z': 1.37487,
'30 22:00 Z': 1.56638,
'30 22:30 Z': 1.58546,
'30 23:00 Z': 1.08196,
'30 23:30 Z': 0.99833,
'31 00:00 Z': 2.34075,
'31 00:30 Z': 3.06256,
'31 01:00 Z': 3.0172,
'31 01:30 Z': 2.12823,
'31 02:00 Z': 1.25966,
'31 02:30 Z': 1.06778,
'31 03:00 Z': 1.00103,
'31 03:30 Z': 0.88505,
'31 04:00 Z': 0.62016,
'31 04:30 Z': 0.46214,
'31 05:00 Z': 0.41883,
'31 05:30 Z': 0.78452,
'31 06:00 Z': 0.93458,
'31 06:30 Z': 0.85877,
'31 07:00 Z': 0.71588,
'31 07:30 Z': 0.99105,
'31 08:00 Z': 1.34451,
'31 08:30 Z': 1.56377,
'31 09:00 Z': 1.68547,
'31 09:30 Z': 2.2925,
'31 10:00 Z': 1.44486,
'31 10:30 Z': 1.88731,
'31 11:00 Z': 2.0337,
'31 11:30 Z': 1.9105,
'31 12:00 Z': 3.14595,
'31 12:30 Z': 3.17711,
'31 13:00 Z': 2.35768,
'31 13:30 Z': 1.28718,
'31 14:00 Z': 1.34005,
'31 14:30 Z': 0.93886,
'31 15:00 Z': 0.74345,
'31 15:30 Z': 0.74171,
'31 16:00 Z': 0.6717,
'31 16:30 Z': 1.17541,
'31 17:00 Z': 1.39387,
'31 17:30 Z': 1.20669,
'31 18:00 Z': 0.72049,
'31 18:30 Z': 0.55551,
'31 19:00 Z': 0.34778,
'31 19:30 Z': 0.41421,
'31 20:00 Z': 0.6751,
'31 20:30 Z': 0.73546,
'31 21:00 Z': 0.87826,
'31 21:30 Z': 0.59991,
'31 22:00 Z': 0.65627,
'31 22:30 Z': 0.1501,
'31 23:00 Z': 0.0829,
'31 23:30 Z': 0.37431}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[39]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[POOL]]></value>
        <value><![CDATA[ccl]]></value>
        <value><![CDATA[def ccl_month_gbp(bill, data_source, whole_data):
    bill.setdefault('ccl-kwh', 0)
    bill.setdefault('ccl-gbp', 0)
    bill.setdefault('ccl-rate', 0)

    bill.setdefault('lec-kwh', 0)
    bill.setdefault('lec-gbp', 0)
    bill.setdefault('lec-rate', 0)

    summary = whole_data['summary']
    month_kwh = summary['sum-msp-kwh']
    if month_kwh > 999:
        rate = bill['ccl-rate'] = bill['lec-rate'] = data_source.rate(contract.rateScript(summary['finish-date']), 'ccl_rate')
        if data_source.is_green:
            prefix = 'lec'
        else:
            prefix = 'ccl'

        bill[prefix + '-kwh'] += month_kwh
        bill[prefix + '-gbp'] += month_kwh * rate]]></value>
        <value><![CDATA[141]]></value>
        <value><![CDATA[2000-04-01T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[def ccl_rate():
    return 0.004410]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[ccl]]></value>
        <value><![CDATA[217]]></value>
        <value><![CDATA[2007-04-01T00:00Z]]></value>
        <value><![CDATA[def ccl_rate():
    return 0.004410]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[ccl]]></value>
        <value><![CDATA[63]]></value>
        <value><![CDATA[2008-04-01T00:00Z]]></value>
        <value><![CDATA[def ccl_rate():
    return 0.004560]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[ccl]]></value>
        <value><![CDATA[65]]></value>
        <value><![CDATA[2009-04-01T00:00Z]]></value>
        <value><![CDATA[def ccl_rate():
    return 0.0047]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[41]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[POOL]]></value>
        <value><![CDATA[computer]]></value>
        <value><![CDATA[from net.sf.chellow.billing import NonCoreContract
from net.sf.chellow.physical import HhStartDate, MpanCore, Site, ReadType, Units
from java.util import GregorianCalendar, TimeZone, Locale, Calendar, Date
from net.sf.chellow.monad import UserException, Hiber
from net.sf.chellow.monad.types import MonadDate
from java.sql import Timestamp, ResultSet
from java.lang import System, NumberFormatException, Integer, Math
from org.python.util import PythonInterpreter
from java.io import LineNumberReader
from java.text import SimpleDateFormat, ParseException
from java.math import BigDecimal


cons_types = ['construction', 'commissioning', 'operation']
lec_cats = ['import-net', 'export-net', 'import-gen', 'export-gen', 'import-3rd-party', 'export-3rd-party']

interp_cache = {}

rate_interp_cache = {}

rate_cache = {}

contract_cache = {}

tlms_contract = NonCoreContract.getNonCoreContract('tlms')
bank_holidays_contract = NonCoreContract.getNonCoreContract('bank-holidays')

def contract_function(contract, func_name):
    contract_id = contract.getId()
    if contract_id not in interp_cache:
        interp = PythonInterpreter()
        interp.set('contract', contract)
        interp.exec(contract.getChargeScript())
        interp_cache[contract_id] = interp
        
    return interp_cache[contract_id].get(func_name)

def rate(script, name, pw=None):
    script_id = script.getId()

    if script_id not in rate_cache:
        rate_cache[script_id] = {}

    rate_names = rate_cache[script_id]

    if name not in rate_names:
        if script_id not in rate_interp_cache:
            interp = PythonInterpreter()
            interp.exec(script.getScript())
            rate_interp_cache[script_id] = interp
        rate_interp = rate_interp_cache[script_id]
        rate_func = rate_interp.get(name)
        if rate_func is None:
            return None
        rate_names[name] = rate_func()

    return rate_names[name]


def hh_rate(contract, date, name, pw=None):
    try:
        contract_dates = contract_cache[contract.getId()]
    except KeyError:
        contract_dates = {}
        contract_cache[contract.getId()] = contract_dates

    try:
        rate_names = contract_dates[date]
    except KeyError:
        rate_names = {}
        contract_dates[date] = rate_names

    try:
        rate_val = rate_names[name]
    except:
        rate_val = rate(contract.rateScript(HhStartDate(date)), name)

    return rate_val


def create_comterp():
    interp = PythonInterpreter()
    interp.exec(contract.getChargeScript())
    return interp


def forecast_date():
    cal = MonadDate.getCalendar()
    cal.setTime(Date())
    cal.set(Calendar.DAY_OF_MONTH, 1)
    cal.set(Calendar.HOUR_OF_DAY, 0)
    cal.set(Calendar.MINUTE, 0)
    cal.set(Calendar.SECOND, 0)
    cal.set(Calendar.MILLISECOND, 0)
    return HhStartDate(cal.getTime())


def export_data_sources(contract, supply, month_start, month_finish, forecast_date, comterp, pw):

    if supply is None:
        query = Hiber.session().createQuery("select distinct generation from SupplyGeneration generation where generation.exportMpan is not null and generation.exportMpan.supplierContract = :contract and generation.startDate.date <= :finishDate and (generation.finishDate is null or generation.finishDate.date >= :startDate)").setEntity('contract', contract)
    else:
        query = Hiber.session().createQuery("select distinct generation from SupplyGeneration generation where generation.supply = :supply and generation.exportMpan is not null and generation.startDate.date <= :finishDate and (generation.finishDate is null or generation.finishDate.date >= :startDate)").setEntity('supply', supply)
    generations = query.setTimestamp('startDate', month_start.getDate()).setTimestamp('finishDate', month_finish.getDate()).scroll()
    while generations.next():
        generation = generations.get(0)

        gen_start = generation.getStartDate()
        if month_start.before(gen_start):
            chunk_start = gen_start
        else:
            chunk_start = month_start
        gen_finish = generation.getFinishDate()
        if month_finish.after(gen_finish):
            chunk_finish = gen_finish
        else:
            chunk_finish = month_finish
        
        mpan = generation.getExportMpan()
        mpan_core = mpan.getCore()
        mpan_core_str = str(mpan_core)
        data_source = SupplySource(forecast_date, comterp, pw)
        data_source.init_from_mpan(chunk_start, chunk_finish, mpan)
        yield data_source


def import_data_sources(contract, supply, month_start, month_finish, forecast_date, comterp, pw):

    '''
    # is it a forecast?
    if month_finish.after(forecast_date):
        selection_finish = forecast_date.getPrevious()
        cal = MonadDate.getCalendar()
        cal.setTime(forecast_date.getDate())
        cal.add(Calendar.MONTH, -1)
        selection_start = HhStartDate(cal.getTime())
    else:
        selection_start = month_start
        selection_finish = month_finish
    '''

    if supply is None:
        query = Hiber.session().createQuery("select distinct generation from SupplyGeneration generation where generation.importMpan is not null and generation.importMpan.supplierContract = :contract and generation.startDate.date <= :finishDate and (generation.finishDate is null or generation.finishDate.date >= :startDate)").setEntity('contract', contract)
    else:
        query = Hiber.session().createQuery("select distinct generation from SupplyGeneration generation where generation.supply = :supply and generation.importMpan is not null and generation.startDate.date <= :finishDate and (generation.finishDate is null or generation.finishDate.date >= :startDate)").setEntity('supply', supply)
    generations = query.setTimestamp('startDate', month_start.getDate()).setTimestamp('finishDate', month_finish.getDate()).scroll()
    while generations.next():
        generation = generations.get(0)

        gen_start = generation.getStartDate()
        if month_start.before(gen_start):
            chunk_start = gen_start
        else:
            chunk_start = month_start
        gen_finish = generation.getFinishDate()
        if month_finish.after(gen_finish):
            chunk_finish = gen_finish
        else:
            chunk_finish = month_finish
        
        mpan = generation.getImportMpan()
        mpan_core = mpan.getCore()
        mpan_core_str = str(mpan_core)
        data_source = SupplySource(forecast_date, comterp, pw)
        data_source.init_from_mpan(chunk_start, chunk_finish, mpan)
        yield data_source


def hh_list(date):
    utc_cal = GregorianCalendar(TimeZone.getTimeZone("GMT"), Locale.UK)
    ct_cal = GregorianCalendar(TimeZone.getTimeZone("Europe/London"), Locale.UK)
    utc_cal.setTime(date.getDate())
    ct_cal.setTime(date.getDate())
    return [{'used-kwh': 0, 'hist-kwh': 0, 'msp-kwh': 0, 'msp-kvarh': 0, 'end-date': date.getDate(), 'ct-day': ct_cal.get(5), 'utc-month': utc_cal.get(2), 'utc-day': utc_cal.get(5), 'utc-decimal-hour': utc_cal.get(11) + float(utc_cal.get(12)) / 60, 'ct-month': ct_cal.get(2), 'ct-decimal-hour': ct_cal.get(11) + ct_cal.get(12) / 60, 'ct-day-of-week': ct_cal.get(7), 'utc-day-of-week': utc_cal.get(7)}]


class DataSource():
    def set_is_green(self, is_green):
        self.is_green = is_green
        self.summary['is_green'] = is_green


    def contract_function(self, contract, func_name):
        return contract_function(contract, func_name)


    def rate(self, script, name):
        return rate(script, name)

    def hh_rate(self, contract, date, name):
        return hh_rate(contract, date, name)

class SiteSource(DataSource):
    def __init__(self, site, start_date, finish_date, forecast_date, comterp, pw):
        if start_date.after(finish_date):
            raise UserException('The start date is after the finish date.')
        self.start_date = start_date
        self.finish_date = finish_date

        self.forecast_date = forecast_date
        self.site_id = site.getId()
        self.is_new = False
        self.id = site.getCode()
        self.is_green = False
        self.comterp = comterp
        self.pw = pw
        

    def init_from_site(self):
        self.is_site = True
        self.is_displaced = False
        self.whole_data = self.create_whole_data(self.start_date, self.finish_date, self.forecast_date)
        self.summary = self.whole_data['summary']
        self.hh_data = self.whole_data['data']


    def init_from_mpan(self, mpan):
        self.is_site = True
        self.is_displaced = True
        mpan_core = mpan.getCore()
        dso = mpan_core.getDso()
        self.dso_code = dso.getCode()
        llfc = mpan.getLlfc()
        self.llfc_code = str(llfc)
        self.is_import = llfc.getIsImport()
        self.mpan_core = mpan_core.toString()
        self.voltage_level_code = llfc.getVoltageLevel().getCode()
        self.is_substation = llfc.getIsSubstation()
        self.availability = mpan.getAgreedSupplyCapacity()
        self.pc_code = str(mpan.getSupplyGeneration().getPc())
        self.supply_generation = mpan.getSupplyGeneration()
        self.supply = self.supply_generation.getSupply()
        self.whole_data = self.create_whole_data(self.start_date, self.finish_date, self.forecast_date)
        self.summary = self.whole_data['summary']
        self.hh_data = self.whole_data['data']


    def create_whole_data(self, start_date, finish_date, forecast_date):
        #s elf.pw.println('starting whole data site, ' + str(System.currentTimeMillis()))
        bank_holidays_rate_script = bank_holidays_contract.rateScript(start_date)
        bank_holidays = self.rate(bank_holidays_rate_script, 'days')

        cal = MonadDate.getCalendar()
        cal.setTime(finish_date.getDate())
        year_adjustment = 0
        while cal.getTime().after(forecast_date.getDate()):
            cal.add(Calendar.YEAR, -1)
            year_adjustment -= 1
        history_finish = HhStartDate(cal.getTime())
        cal.setTime(start_date.getDate())
        cal.add(Calendar.YEAR, year_adjustment)
        history_start = HhStartDate(cal.getTime())
        summary = {'start-date': start_date, 'finish-date': finish_date, 'is-forecast': not start_date.before(forecast_date), 'hist-start': history_start, 'hist-finish': history_finish, 'is-green': self.is_green, 'days': 0, 'problem': ''}

        cal.setTime(start_date.getDate())
        cal.set(Calendar.HOUR_OF_DAY, 0)
        cal.set(Calendar.MINUTE, 0)
        while not HhStartDate(cal.getTime()).after(finish_date):
            summary['days'] += 1
            cal.add(Calendar.DAY_OF_MONTH, 1)

        is_forecast = finish_date.after(forecast_date)
        hh_data = []
        utc_cal = GregorianCalendar(TimeZone.getTimeZone("GMT"), Locale.UK)
        ct_cal = GregorianCalendar(TimeZone.getTimeZone("Europe/London"), Locale.UK)

        site = Site.getSite(self.site_id)
        con = Hiber.session().connection()

        for group in site.groups(summary['hist-start'], summary['hist-finish'], True):
            supplies = group.getSupplies()
            if len(supplies) == 0:
                continue
            hh_date = group.getFrom()
            group_to = group.getTo()
            supplies_sql = ','.join(str(supply.getId()) for supply in supplies)
            stmt = con.prepareStatement("select hh_datum.value, hh_datum.start_date, hh_datum.status, channel.is_import, source.code from hh_datum, channel, supply_generation, supply, source where hh_datum.channel_id = channel.id and channel.supply_generation_id = supply_generation.id and supply_generation.supply_id = supply.id and supply.source_id = source.id and channel.is_kwh is true and hh_datum.start_date >= ? and hh_datum.start_date <= ? and supply.id in (" + supplies_sql + ") order by hh_datum.start_date", ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.CLOSE_CURSORS_AT_COMMIT)
            stmt.setTimestamp(1, Timestamp(group.getFrom().getDate().getTime()))
            stmt.setTimestamp(2, Timestamp(group_to.getDate().getTime()))
            stmt.setFetchSize(100)
            rs = stmt.executeQuery()
            if rs.next():
                hh_value = rs.getBigDecimal("value").doubleValue()
                hh_start_date = rs.getTimestamp("start_date")
                is_import = rs.getBoolean("is_import")
                status = rs.getString("status")
                source_code = rs.getString("code")
            else:
                continue
            while not hh_date.after(group_to):
                export_net_kwh = 0
                import_net_kwh = 0
                export_gen_kwh = 0
                import_gen_kwh = 0
                import_3rd_party_kwh = 0
                export_3rd_party_kwh = 0                
                while hh_start_date is not None and hh_start_date.getTime() == hh_date.getDate().getTime():
                    if not is_import and source_code in ('net', 'gen-net'):
                        export_net_kwh += hh_value
                    if is_import and source_code in ('net', 'gen-net'):
                        import_net_kwh += hh_value
                    if (is_import and source_code == 'gen') or (not is_import and source_code == 'gen-net'):
                        #s elf.pw.println('big val ' + str(big_val) + 'hhval,' + str(hh_value) + ' start date ' + str(hh_start_date) + ' is_import ' + str(is_import) + ' status ' + str(status) + 'source ' + source_code)
                        import_gen_kwh += hh_value
                    if (not is_import and source_code == 'gen') or (is_import and source_code == 'gen-net'):
                        export_gen_kwh += hh_value
                    if (is_import and source_code == '3rd-party') or (not is_import and source_code == '3rd-party-reverse'):
                        import_3rd_party_kwh += hh_value
                    if (not is_import and source_code == '3rd-party') or (is_import and source_code == '3rd-party-reverse'):
                        export_3rd_party_kwh += hh_value
                    if rs.next():
                        source_code = rs.getString("code")
                        hh_value = rs.getBigDecimal("value").doubleValue()
                        hh_start_date = rs.getTimestamp("start_date")
                        is_import = rs.getBoolean("is_import")
                        status = rs.getString("status")
                    else:
                        hh_start_date = None

                ct_cal.setTime(hh_date.getDate())
                ct_cal.add(Calendar.YEAR, -1 * year_adjustment)
                utc_cal.setTime(hh_date.getDate())
                utc_cal.add(Calendar.YEAR, -1 * year_adjustment)

                utc_day = utc_cal.get(Calendar.DAY_OF_MONTH)

                hh_values = {'status': 'E', 'hist-start-date': hh_date.getDate(), 'hist-import-net-kwh': import_net_kwh, 'hist-import-net-kvarh': 0, 'hist-export-net-kwh': export_net_kwh, 'hist-export-net-kvarh': 0, 'hist-import-gen-kwh': import_gen_kwh, 'hist-export-gen-kwh': export_gen_kwh, 'hist-import-3rd-party-kwh': import_3rd_party_kwh, 'hist-export-3rd-party-kwh': export_3rd_party_kwh, 'start-date': utc_cal.getTime(), 'ct-day': ct_cal.get(5), 'utc-year': utc_cal.get(Calendar.YEAR), 'utc-month': utc_cal.get(2), 'utc-day': utc_day, 'utc-hour': utc_cal.get(Calendar.HOUR_OF_DAY), 'utc-decimal-hour': utc_cal.get(11) + float(utc_cal.get(12)) / 60, 'utc-minute': utc_cal.get(Calendar.MINUTE), 'ct-month': ct_cal.get(2), 'ct-decimal-hour': ct_cal.get(11) + ct_cal.get(12) / 60, 'ct-day-of-week': ct_cal.get(7), 'utc-day-of-week': utc_cal.get(7), 'utc-is-bank-holiday': utc_day in bank_holidays}
                hh_values['hist-used-3rd-party-kwh'] = hh_values['hist-import-3rd-party-kwh'] - hh_values['hist-export-3rd-party-kwh']
                hh_values['used-3rd-party-kwh'] = hh_values['hist-used-3rd-party-kwh']
                hh_values['hist-kwh'] = hh_values['hist-import-gen-kwh'] - hh_values['hist-export-gen-kwh'] - hh_values['hist-export-net-kwh']
                
                hh_values['msp-kwh'] = hh_values['hist-kwh']
                for lec_cat in lec_cats:
                    hh_values[lec_cat + '-kwh'] = hh_values['hist-' + lec_cat + '-kwh']

                hh_values['hist-used-kwh'] = hh_values['hist-kwh'] + hh_values['hist-import-net-kwh'] + hh_values['hist-used-3rd-party-kwh']
                hh_values['hist-imp-msp-kvarh'] = 0
                hh_values['imp-msp-kvarh'] = 0
                hh_values['exp-msp-kvarh'] = 0

                hh_values['used-kwh'] = hh_values['hist-used-kwh']
                hh_values['import-net-kwh'] = hh_values['hist-import-net-kwh']
                hh_values['msp-kw'] = hh_values['msp-kwh'] * 2
                hh_values['imp-msp-kvar'] = hh_values['imp-msp-kvarh'] * 2
                hh_values['exp-msp-kvar'] = hh_values['exp-msp-kvarh'] * 2

                hh_data.append(hh_values)
                hh_date = hh_date.getNext()
            rs.close()
            stmt.close()
        
        if len(hh_data) == 0:
            utc_cal = GregorianCalendar(TimeZone.getTimeZone("GMT"), Locale.UK)
            ct_cal = GregorianCalendar(TimeZone.getTimeZone("Europe/London"), Locale.UK)
            utc_cal.setTime(finish_date.getDate())
            ct_cal.setTime(finish_date.getDate())
            utc_day = utc_cal.get(Calendar.DAY_OF_MONTH)
            hh_data.append({'status': 'E', 'hist-start-date': history_finish.getDate(), 'status': 'E', 'hist-import-net-kwh': 0, 'hist-import-net-kvarh': 0, 'hist-export-net-kwh': 0, 'hist-export-net-kvarh': 0, 'hist-import-gen-kwh': 0, 'hist-export-gen-kwh': 0, 'hist-import-3rd-party-kwh': 0, 'hist-export-3rd-party-kwh': 0, 'hist-kwh': 0, 'msp-kwh': 0, 'msp-kw': 0, 'export-net-kwh': 0, 'import-gen-kwh': 0, 'export-gen-kwh': 0, 'hist-used-kwh': 0, 'hist-kvarh': 0, 'imp-msp-kvarh': 0, 'imp-msp-kvar': 0, 'exp-msp-kvarh': 0, 'exp-msp-kvar': 0, 'used-kwh': 0, 'import-net-kwh': 0, 'import-3rd-party-kwh': 0, 'export-3rd-party-kwh': 0, 'used-3rd-party-kwh': 0, 'start-date': finish_date.getDate(), 'ct-day': ct_cal.get(5), 'utc-month': utc_cal.get(2), 'utc-day': utc_day, 'utc-hour': utc_cal.get(Calendar.HOUR_OF_DAY), 'utc-decimal-hour': utc_cal.get(11) + float(utc_cal.get(12)) / 60, 'utc-minute': utc_cal.get(Calendar.MINUTE), 'ct-month': ct_cal.get(2), 'ct-decimal-hour': ct_cal.get(11) + ct_cal.get(12) / 60, 'ct-day-of-week': ct_cal.get(7), 'utc-day-of-week': utc_cal.get(7), 'utc-is-bank-holiday': utc_day in bank_holidays})
        if self.is_displaced and self.pc_code == '00' and self.is_import:
            dso_contract = get_dso_contract(self.dso_code, start_date, self.pw)
            #s elf.pw.println('start date ' + str(start_date) + ' dso contract ' + str(dso_contract.getId()) + ' finish date ' + str(HhStartDate(finish_date.getDate())) + ' start ' + str(HhStartDate(hh_data[-1]['start-date'])))
            summary['dso-bill'] = {'problem': ''}
            contract_function(dso_contract, 'hh')(summary, hh_data, self)
            #s elf.pw.println('got after')
            datum_list = list(datum['gsp-kwh'] for datum in hh_data)
            summary['sum-gsp-kwh'] = sum(datum_list)
            summary['max-gsp-kwh'] = max(datum_list)


        for name in ['used-kwh', 'hist-kwh', 'import-net-kwh', 'export-net-kwh', 'msp-kwh', 'imp-msp-kvarh', 'import-gen-kwh', 'export-gen-kwh', 'import-3rd-party-kwh', 'export-3rd-party-kwh', 'used-3rd-party-kwh']:
            datum_list = list(datum[name] for datum in hh_data)
            summary['sum-' + name] = sum(datum_list)
            summary['max-' + name] = max(datum_list)
        #s elf.pw.println('finished whole data site, ' + str(System.currentTimeMillis()))
        return {'summary': summary, 'data': hh_data}

ACTUAL_READ_TYPES = ['N', 'N3', 'C', 'X', 'CP'] 

class SupplySource(DataSource):
    def __init__(self, forecast_date, comterp, pw, bill=None):
        self.forecast_date = forecast_date
        self.whole_data = None
        self.comterp = comterp
        self.pw = pw
        self.is_displaced = False
        if bill is None:
            self.bill_start = self.bill_finish = None
        else:
            self.bill_start = bill.getStartDate()
            self.bill_finish = bill.getFinishDate()

    def init_from_mpan(self, start_date, finish_date, mpan):
        self.site_id = None
        self.mpan_core = mpan.getCore()
        self.mpan_core_str = self.mpan_core.toString()
        self.id = self.mpan_core_str
        if start_date.after(finish_date):
            raise UserException('The start date is after the finish date for MPAN core ' + str(mpan.getCore()) + '.')
        self.start_date = start_date
        self.finish_date = finish_date
        self.llfc = mpan.getLlfc()
        self.llfc_code = str(self.llfc)
        self.voltage_level = self.llfc.getVoltageLevel()
        self.voltage_level_code = self.voltage_level.getCode()
        self.is_substation = self.llfc.getIsSubstation()
        self.dso_code = self.mpan_core.getDso().getCode()
        self.availability = mpan.getAgreedSupplyCapacity()
        self.is_new = False
        self.supplier_account = mpan.getSupplierAccount()
        self.supply_generation = mpan.getSupplyGeneration()
        self.supply = self.supply_generation.getSupply()
        self.mtc = self.supply_generation.getMtc()
        self.meter_type = self.mtc.getMeterType()
        self.meter_type_code = self.meter_type.getCode()
        self.ssc = self.supply_generation.getSsc()

        if self.ssc is None:
            self.ssc_code = None
        else:
            self.ssc_code = str(self.ssc)
            
        self.pc_code = str(self.supply_generation.getPc())
        
        self.is_amr = self.pc_code != '00' and len(self.supply_generation.getChannels()) > 0

        if self.forecast_date.after(start_date):
            if self.supply_generation.getStartDate().after(start_date):
                self.start_date = self.supply_generation.getStartDate()
            else:
                self.start_date = start_date
            if finish_date.after(self.supply_generation.getFinishDate()):
                self.finish_date = self.supply_generation.getFinishDate()
            else:
                self.finish_date = finish_date
            self.is_forecast = False
        else:
            self.is_forecast = True
        self.is_import = self.llfc.getIsImport()

        self.whole_data = self.create_whole_data(self.start_date, self.finish_date, self.forecast_date)
        self.summary = self.whole_data['summary']
        self.hh_data = self.whole_data['data']


    def hh_list_month(self, month_start):
        cal = MonadDate.getCalendar()
        cal.setTime(month_start)
        cal.add(Calendar.MONTH, 1)
        cal.add(Calendar.MINUTE, -30)
        month_finish = HhStartDate(cal.getTime())
        return self.hh_list(month_start, month_finish, pw)

    def create_whole_data(self, start_date, finish_date, forecast_date):
        #s elf.pw.println("starting create whole data start date " + str(start_date) + " finish date " + str(finish_date) + ','  + str(System.currentTimeMillis()))

        bank_holidays_rate_script = bank_holidays_contract.rateScript(start_date)
        bank_holidays = self.rate(bank_holidays_rate_script, 'days')


        cal = MonadDate.getCalendar()
        cal.setTime(finish_date.getDate())
        year_adjustment = 0
        while cal.getTime().after(forecast_date.getDate()):
            cal.add(Calendar.YEAR, -1)
            year_adjustment -= 1
        history_finish = HhStartDate(cal.getTime())
        cal.setTime(start_date.getDate())
        cal.add(Calendar.YEAR, year_adjustment)
        history_start = HhStartDate(cal.getTime())

        summary = {'start-date': start_date, 'finish-date': finish_date, 'is-forecast': not start_date.before(forecast_date), 'hist-start': history_start, 'hist-finish': history_finish, 'days': 0, 'problem': ''}

        cal.setTime(start_date.getDate())
        cal.set(Calendar.HOUR_OF_DAY, 0)
        cal.set(Calendar.MINUTE, 0)
        while not HhStartDate(cal.getTime()).after(finish_date):
            summary['days'] += 1
            cal.add(Calendar.DAY_OF_MONTH, 1)

        #s elf.pw.println("done setup, " + str(System.currentTimeMillis()))

        data_hh = []
        utc_cal = GregorianCalendar(TimeZone.getTimeZone("GMT"), Locale.UK)
        ct_cal = GregorianCalendar(TimeZone.getTimeZone("Europe/London"), Locale.UK)

        generation = self.supply.getGeneration(start_date)
        year_advance = -1 * year_adjustment

        # remove last clause to enable general nhh metered and self.bill_start is not None
        if self.pc_code != '00' and generation is not None and len(generation.getChannels()) == 0:
            ci_query = Hiber.session().createQuery("select mod(ci.dayOfWeek, 7) + 1 as dayOfWeek, (ci.startMonth - 1) * 100 + ci.startDay as startMonth, ci.startHour + (ci.startMinute / 60.0) as startHourDec, (ci.endMonth - 1) * 100 + ci.endDay as endMonth, ci.endHour + (ci.endMinute / 60.0) as endHourDec from ClockInterval ci where ci.tpr = :tpr")
            if self.meter_type_code == 'UM':
                utc_cal.setTime(start_date.getDate())
                utc_cal.set(Calendar.MONTH, Calendar.JANUARY)
                utc_cal.set(Calendar.DAY_OF_MONTH, 1)
                utc_cal.set(Calendar.HOUR_OF_DAY, 0)
                utc_cal.set(Calendar.MINUTE, 0)
                year_start_millis = utc_cal.getTimeInMillis()
                utc_cal.add(Calendar.YEAR, 1)
                kwh = float(self.availability * 1000 * 60 * 30) / float(utc_cal.getTimeInMillis() - year_start_millis)

                for tpr in Hiber.session().createQuery("select mr.tpr from MeasurementRequirement mr where mr.ssc = :ssc").setEntity("ssc", self.ssc).list():
                    days_of_week = dict([[i, []] for i in range(1,8)])

                    for ci in ci_query.setEntity('tpr', tpr).list():
                        day_of_week = ci[0]
                        start_month = ci[1]
                        start_hour = ci[2]
                        end_month = ci[3]
                        end_hour = ci[4]
                        days_of_week[day_of_week].append({'start-month': start_month, 'start-hour': start_hour, 'end-month': end_month, 'end-hour': end_hour})

                    if tpr.getIsGmt():
                        cal = utc_cal
                        time_prefix = 'utc'
                    else:
                        cal = ct_cal
                        time_prefix = 'ct'
                    decimal_hour_key = time_prefix + '-decimal-hour'
                    day_of_week_key = time_prefix + '-day-of-week'
                    month_key = time_prefix + '-month'
                    day_of_month_key = time_prefix + '-day'

                    #s elf.pw.println('av_kwh ' + str(av_kwh) + ',' + str(System.currentTimeMillis()))
                            
                    hh_date = start_date.getDate().getTime()
                    #s elf.pw.println('hh_date ' + str(hh_date))
                    finish_millis = finish_date.getDate().getTime()
                    #s elf.pw.println('chunk_finish_millis ' + str(chunk_finish_millis))

                    utc_cal.setTimeInMillis(hh_date)
                    while not hh_date > finish_millis:
                        ct_cal.setTimeInMillis(hh_date)
                        utc_cal.add(Calendar.YEAR, year_advance)
                        ct_cal.add(Calendar.YEAR, year_advance)
                        decimal_hour = cal.get(11) + float(cal.get(12)) / 60
                        fractional_month = cal.get(Calendar.MONTH) * 100 + cal.get(Calendar.DAY_OF_MONTH)
                        for ci in days_of_week[cal.get(Calendar.DAY_OF_WEEK)]:
                            if ((ci['start-hour'] < ci['end-hour'] and ci['start-hour'] <= decimal_hour < ci['end-hour']) or (ci['start-hour'] >= ci['end-hour'] and (ci['start-hour'] <= decimal_hour or decimal_hour < ci['end-hour']))) and ci['start-month'] <= fractional_month <= ci['end-month']:
                                utc_day = utc_cal.get(Calendar.DAY_OF_MONTH)
                                data_hh.append({'status': 'E', 'msp-kw': kwh * 2, 'msp-kwh': kwh, 'hist-kwh': kwh, 'imp-msp-kvarh': 0, 'imp-msp-kvar': 0, 'exp-msp-kvarh': 0, 'exp-msp-kvar': 0, 'hist-start-date': utc_cal.getTime(), 'start-date': utc_cal.getTime(), 'ct-day': ct_cal.get(5), 'utc-month': utc_cal.get(2), 'utc-day': utc_day, 'utc-decimal-hour': utc_cal.get(11) + float(utc_cal.get(12)) / 60, 'utc-year': utc_cal.get(Calendar.YEAR), 'utc-hour': utc_cal.get(Calendar.HOUR_OF_DAY), 'utc-minute': utc_cal.get(Calendar.MINUTE), 'ct-year': ct_cal.get(Calendar.YEAR), 'ct-month': ct_cal.get(2), 'ct-decimal-hour': ct_cal.get(11) + float(ct_cal.get(12)) / 60, 'ct-day-of-week': ct_cal.get(7), 'utc-day-of-week': utc_cal.get(7), 'utc-is-bank-holiday': utc_day in bank_holidays})
                                break
                        hh_date = HhStartDate.getNext(utc_cal, hh_date)
                    #s elf.pw.println(str(System.currentTimeMillis()) + " finished inner loop ")

                    #s elf.pw.println(str(System.currentTimeMillis()) + " done bills ")

            elif self.bill_start is None:
                #s elf.pw.println('starting, ' + str(System.currentTimeMillis()))
                search_date = history_start
                search_msn = ''
                read_0 = None
                read_1 = None
                read_2 = None
                read_3 = None

                read_dict = None

                bill_query = Hiber.session().createQuery("select distinct read.bill, read.bill.issueDate, read.bill.type.code from RegisterRead read where read.bill.supply = :supply and read.bill.finishDate.date >= :readDate and read.bill.startDate <= :readDate order by read.bill.issueDate desc, read.bill.type.code").setEntity('supply', self.supply).setMaxResults(1)

                prior_present_read_query = Hiber.session().createQuery("select read, read.bill from RegisterRead read where read.units.int = 0 and read.presentType.code in ('N', 'N3', 'C') and read.bill.supply = :supply and read.presentDate.date < :startDate order by read.presentDate.date desc, read.bill.issueDate desc, read.bill.type.code").setEntity('supply', self.supply).setMaxResults(1)

                prior_previous_read_query = Hiber.session().createQuery("select read, read.bill from RegisterRead read where read.units.int = 0 and read.previousType.code in ('N', 'N3', 'C') and read.bill.supply = :supply and read.previousDate.date < :startDate order by read.previousDate.date desc, read.bill.issueDate desc, read.bill.type.code").setEntity('supply', self.supply).setMaxResults(1)

                present_reads_query = Hiber.session().createQuery("from RegisterRead read where read.units.int = 0 and read.bill = :bill and read.presentDate.date = :readDate and read.meterSerialNumber = :msn")

                previous_reads_query = Hiber.session().createQuery("from RegisterRead read where read.units.int = 0 and read.bill = :bill and read.previousDate.date = :readDate and read.meterSerialNumber = :msn")

                tie = False
                while True:
                    #s elf.pw.println('search date ' + str(search_date))
                    present_read_prime = False
                    previous_read_prime = False
                    #s elf.pw.println('first loop, ' + str(self.supply.getId()))
                    present_read = prior_present_read_query.setTimestamp('startDate', search_date.getDate()).uniqueResult()
                    if present_read is not None:
                        present_read = present_read[0]

                    previous_read = prior_previous_read_query.setTimestamp('startDate', search_date.getDate()).uniqueResult()
                    if previous_read is not None:
                        previous_read = previous_read[0]

                    #s elf.pw.println('prev read ' + str(previous_read) + ' pres read ' + str(present_read))
                    if present_read is None and previous_read is None:
                        break

                    if previous_read is not None:
                        #s elf.pw.println('prev read ' + str(previous_read.getId()) + ' bill id ' + str(previous_read.getBill().getId()))
                        previous_bill = bill_query.setTimestamp('readDate', previous_read.getBill().getStartDate().getDate()).uniqueResult()[0]

                        #s elf.pw.println('prev bill id ' + str(previous_bill.getId()))

                        if  previous_bill.getId() == previous_read.getBill().getId():
                            previous_read_prime = True

                    if present_read is not None:
                        #s elf.pw.println('pres read ' + str(present_read.getId()) + ' bill id ' + str(present_read.getBill().getId()))

                        present_bill = bill_query.setTimestamp('readDate', present_read.getBill().getStartDate().getDate()).uniqueResult()[0]
                        #s elf.pw.println('pres bill ' + str(present_bill.getId()))
                        if  present_bill.getId() == present_read.getBill().getId():
                            if previous_read_prime:
                                #s elf.pw.println('prev read pot prime, pres prime pres read date' + str(present_read.getPresentDate()) + ' prev read date ' + str(previous_read.getPreviousDate()))

                                if present_read.getPresentDate().after(previous_read.getPreviousDate()):
                                    present_read_prime = True
                                    previous_read_prime = False
                                elif previous_read.getPreviousDate().getDate().getTime() == present_read.getPresentDate().getDate().getTime() and previous_read.getMeterSerialNumber() != present_read.getMeterSerialNumber():
                                    if tie:
                                        tie = False
                                        previous_read_prime = False
                                        present_read_prime = True
                                    else:
                                        tie = True
            
                            else:
                                present_read_prime = True

                    if present_read_prime:
                        #s elf.pw.println('pres supply prime pres bill ' + str(present_bill.getId()))

                        if not tie:
                            search_date = present_read.getPresentDate().getPrevious()

                        #s elf.pw.println('present read ' + str(present_read.getId()) + ' present read bill ' + str(present_read.getBill().getId()) + ' present bill ' + str(present_bill.getId()))
                        reads = {}
                        present_reads = present_reads_query.setEntity('bill', present_bill).setTimestamp('readDate', present_read.getPresentDate().getDate()).setString('msn', present_read.getMeterSerialNumber()).list()
                        #s elf.pw.println('present reads ' + str(present_reads))
                        for read in present_reads:
                            tpr = read.getTpr()
                            reads[tpr.getCode()] = {'tpr': read.getTpr(), 'value': read.getPresentValue().doubleValue() * read.getCoefficient().doubleValue()}

                        read_dict = {'date': present_read.getPresentDate(), 'reads': reads, 'msn': present_read.getMeterSerialNumber()}

                    if previous_read_prime:
                        #s elf.pw.println('prev supply prime prev bill ' + str(previous_bill.getId()))
                        if not tie:
                            search_date = previous_read.getPreviousDate().getPrevious()
                        reads = {}
                        previous_reads = previous_reads_query.setEntity('bill', previous_bill).setTimestamp('readDate', previous_read.getPreviousDate().getDate()).setString('msn', previous_read.getMeterSerialNumber()).list()
                        for read in previous_reads:
                            tpr = read.getTpr()
                            reads[tpr.getCode()] = {'tpr': read.getTpr(), 'value': read.getPreviousValue().doubleValue() * read.getCoefficient().doubleValue()}
                        
                        read_dict = {'date': previous_read.getPreviousDate(), 'reads': reads, 'msn': previous_reads[0].getMeterSerialNumber()}

                    if previous_read_prime or present_read_prime:
                        if read_2 is None:
                            read_2 = read_dict
                        elif read_1 is None:
                            read_1 = read_dict
                            if read_1['msn'] == read_2['msn']:
                                break
                        else:
                            read_0 = read_dict
                            break
                        

                    if not previous_read_prime and not present_read_prime:
                        if previous_read is None:
                            search_date = present_read.getPresentDate().getPrevious()
                        elif present_read is None:
                            search_date = previous_read.getPreviousDate().getPrevious()
                        elif previous_read.getPreviousDate().before(present_read.getPresentDate()):
                            search_date = present_read.getPresentDate().getPrevious()
                        else:
                            search_date = previous_read.getPreviousDate().getPrevious()

                #s elf.pw.println('initial read_0 ' + str(read_0) + ' read_1 ' + str(read_1) + ' read_2 ' + str(read_2))
                            

                search_date = history_start
                keep_going = True

                next_present_read_query = Hiber.session().createQuery("select read, read.bill from RegisterRead read where read.units.int = 0 and read.presentType.code in ('N', 'N3', 'C') and read.bill.supply = :supply and read.presentDate.date >= :finishDate order by read.presentDate.date, read.bill.issueDate desc, read.bill.type.code").setEntity('supply', self.supply).setMaxResults(1)

                next_previous_read_query = Hiber.session().createQuery("select read, read.bill from RegisterRead read where read.units.int = 0 and read.previousType.code in ('N', 'N3', 'C') and read.bill.supply = :supply and read.previousDate.date >= :finishDate order by read.previousDate.date, read.bill.issueDate desc, read.bill.type.code").setEntity('supply', self.supply).setMaxResults(1)
                tie = False
                while keep_going:
                    while True:
                        present_read_prime = False
                        previous_read_prime = False
                        #s elf.pw.println('first loop, ' + str(self.supply.getId()))
                        present_read = next_present_read_query.setTimestamp('finishDate', search_date.getDate()).uniqueResult()
                        if present_read is not None:
                            present_read = present_read[0]
                        previous_read = next_previous_read_query.setTimestamp('finishDate', search_date.getDate()).uniqueResult()
                        if previous_read is not None:
                            previous_read = previous_read[0]

                        if present_read is None and previous_read is None:
                            keep_going = False
                            break

                        if present_read is not None:
                            present_bill = bill_query.setTimestamp('readDate', present_read.getPresentDate().getDate()).uniqueResult()[0]
                            #s elf.pw.println('bill id ' + str(bill.getId()))

                            if present_bill.getId() == present_read.getBill().getId():
                                present_read_prime = True

                        if previous_read is not None:
                            #s elf.pw.println('previous read id ' + str(previous_read.getId()) + ' date ' + str(previous_read.getPreviousDate()) + ' prev bill id ' + str(previous_bill.getId()))
                            #s elf.pw.println('bill id ' + str(bill.getId()))

                            previous_bill = bill_query.setTimestamp('readDate', previous_read.getBill().getStartDate().getDate()).uniqueResult()[0]
                                #s elf.pw.println(' prev bill id ' + str(previous_bill.getId()))
                            if previous_bill.getId() == previous_read.getBill().getId():
                                if present_read_prime:
                                    if previous_read.getPreviousDate().before(present_read.getPresentDate()):
                                        previous_read_prime = True
                                        present_read_prime = False
                                    elif previous_read.getPreviousDate().getDate().getTime() == present_read.getPresentDate().getDate().getTime() and previous_read.getMeterSerialNumber() != present_read.getMeterSerialNumber():
                                        #s elf.pw.println('it is a tie ' + str(tie) + ' search date ' + str(search_date))

                                        if tie:
                                            tie = False
                                            previous_read_prime = True
                                            present_read_prime = False
                                        else:
                                            tie = True
                                else:
                                    previous_read_prime = True


                        if present_read_prime:
                            if not tie:
                                search_date = present_read.getPresentDate().getNext()
                            #s elf.pw.println('present read ' + str(present_read.getId()) + ' present read bill ' + str(present_read.getBill().getId()) + ' present bill ' + str(present_bill.getId()))

                            reads = {}
                            present_reads = present_reads_query.setEntity('bill', present_bill).setTimestamp('readDate', present_read.getPresentDate().getDate()).setString('msn', present_read.getMeterSerialNumber()).list()
                            #s elf.pw.println('present readns next ' + str(present_reads))
                            for read in present_reads:
                                tpr = read.getTpr()
                                reads[tpr.getCode()] = {'tpr': tpr, 'value': read.getPresentValue().doubleValue() * read.getCoefficient().doubleValue()}

                            read_3 = {'date': present_read.getPresentDate(), 'reads': reads, 'msn': present_reads[0].getMeterSerialNumber()}
                            break
                            #s elf.pw.println('got 3 ')
                            
                        if previous_read_prime:
                            if not tie:
                                search_date = previous_read.getPreviousDate().getNext()
                            reads = {}
                            previous_reads = previous_reads_query.setEntity('bill', previous_bill).setTimestamp('readDate', previous_read.getPreviousDate().getDate()).setString('msn', previous_read.getMeterSerialNumber()).list()
                            for read in previous_reads:
                                tpr = read.getTpr()
                                reads[tpr.getCode()] = {'tpr': tpr, 'value': read.getPreviousValue().doubleValue() * read.getCoefficient().doubleValue()}
                        
                            read_3 = {'date': previous_read.getPreviousDate(), 'reads': reads, 'msn': previous_reads[0].getMeterSerialNumber()}
                            break

                        if not previous_read_prime and not present_read_prime:
                            if previous_read is None:
                                search_date = present_read.getPresentDate().getNext()
                            elif present_read is None:
                                search_date = previous_read.getPreviousDate().getNext()
                            elif previous_read.getPreviousDate().before(present_read.getPresentDate()):
                                search_date = previous_read.getPreviousDate().getNext()
                            else:
                                search_date = present_read.getPresentDate().getNext()


                    #s elf.pw.println('read_0 ' + str(read_0) + ' read_1 ' + str(read_1) + ' read_2 ' + str(read_2) + ' read_3 ' + str(read_3))
                    

                    passes = []
                    if read_3 is None or (read_2 is not None and read_3['msn'] != read_2['msn']):
                        if read_1 is not None and read_2 is not None and read_1['msn'] == read_2['msn']:
                            if read_1['msn'] == read_2['msn']:
                                aft_read = read_1
                                fore_read = read_2
                            else:
                                aft_read = read_0
                                fore_read = read_1

                            if history_start.before(read_2['date'].getNext()):
                                chunk_start = read_2['date'].getNext()
                            else:
                                chunk_start = history_start

                            if read_3 is None or read_3['date'].after(history_finish):
                                chunk_finish = history_finish
                            else:
                                chunk_finish = read_3['date']

                            passes.append({'aft-read': aft_read, 'fore-read': fore_read, 'chunk-finish': chunk_finish, 'chunk-start': chunk_start})
                        elif read_0 is not None and read_1 is not None and read_0['msn'] == read_1['msn']:
                            if history_start.before(read_1['date']):
                                chunk_start = read_1['date'].getNext()
                            else:
                                chunk_start = history_start
                            passes.append({'aft-read': read_0, 'fore-read': read_1, 'chunk-finish': history_finish, 'chunk-start': chunk_start})
                    elif read_2 is not None:
                        if history_finish.before(read_3['date']):
                            chunk_finish = history_finish
                        else:
                            chunk_finish = read_3['date']

                        if history_start.after(read_2['date']):
                            chunk_start = history_start
                        else:
                            chunk_start = read_2['date'].getNext()

                        passes.append({'aft-read': read_2, 'fore-read': read_3, 'chunk-start': chunk_start, 'chunk-finish': chunk_finish})
                        if read_1 is None and read_2['date'].after(history_start):
                            #s elf.pw.println('doing extra bit ')                             
                            if read_2['date'].after(history_finish):
                                chunk_finish = history_finish
                            else:
                                chunk_finish = read_2['date'].getPrevious()
                            passes.append({'aft-read': read_2, 'fore-read': read_3, 'chunk-finish': history_finish, 'chunk-start': history_start})
                                
                    #s elf.pw.println('aft read ' + str(aft_read.getPresentDate()) + ' aft bill ' + str(aft_bill.getId()) + ' fore read ' + str(fore_read.getPresentDate()) + ' fore bill ' + str(fore_bill.getId()))
                            
                    #s elf.pw.println('chunk start ' + str(chunk_start) + ' chunk finish ' + str(chunk_finish))
                    #s elf.pw.println('passed ' + str(passes))

                    for read_pass in passes:
                        aft_read = read_pass['aft-read']
                        fore_read = read_pass['fore-read']
                        chunk_start = read_pass['chunk-start']
                        chunk_finish = read_pass['chunk-finish']

                        for tpr_code, initial_read in aft_read['reads'].iteritems():
                            #s elf.pw.println('read ' + str(initial_read.getId()))
                            
                            tpr = initial_read['tpr']
                            if tpr_code in fore_read['reads']:
                                end_read = fore_read['reads'][tpr_code]
                            else:
                                continue

                            initial_val = initial_read['value']
                            end_val = end_read['value']
                            kwh =  end_val - initial_val
                            if kwh < 0:
                                digits = int(Math.log10(initial_val)) + 1
                                kwh = 10 ** digits - initial_val + end_val

                            #s elf.pw.println('fore ' + str(fore_read))
                            #s elf.pw.println('aft ' + str(aft_read))

                            kwh_rate = float(kwh) / float(fore_read['date'].getDate().getTime() - aft_read['date'].getDate().getTime())
                            
                            #s elf.pw.println('kwh ' + str(kwh))
                            #s elf.pw.println('kwh rate ' + str(kwh_rate))

                            days_of_week = dict([[i, []] for i in range(1,8)])

                            for ci in ci_query.setEntity('tpr', tpr).list():
                                day_of_week = ci[0]
                                start_month = ci[1]
                                start_hour = ci[2]
                                end_month = ci[3]
                                end_hour = ci[4]
                                days_of_week[day_of_week].append({'start-month': start_month, 'start-hour': start_hour, 'end-month': end_month, 'end-hour': end_hour})

                            if tpr.getIsGmt():
                                cal = utc_cal
                                decimal_hour_key = 'utc-decimal-hour'
                                day_of_week_key = 'utc-day-of-week'
                                month_key = 'utc-month'
                                day_of_month_key = 'utc-day'
                            else:
                                cal = ct_cal
                                decimal_hour_key = 'ct-decimal-hour'
                                day_of_week_key = 'ct-day-of-week'
                                month_key = 'ct-month'
                                day_of_month_key = 'ct-day'

                            #s elf.pw.println('av_kwh ' + str(av_kwh) + ',' + str(System.currentTimeMillis()))
                            
                            hh_date = chunk_start.getDate().getTime()
                            #s elf.pw.println('hh_date ' + str(hh_date))
                            chunk_finish_millis = chunk_finish.getDate().getTime()
                            #s elf.pw.println('chunk_finish_millis ' + str(chunk_finish_millis))

                            kwh = kwh_rate * (chunk_finish_millis - hh_date + 30 * 60 * 1000)
                            part_hh = []
                            #s elf.pw.println('kwh ' + str(kwh))
                            #s elf.pw.println('times ' + str(chunk_finish_millis - hh_date + 30 * 60 * 1000))

                            utc_cal.setTimeInMillis(hh_date)
                            while not hh_date > chunk_finish_millis:
                                ct_cal.setTimeInMillis(hh_date)
                                utc_cal.add(Calendar.YEAR, year_advance)
                                ct_cal.add(Calendar.YEAR, year_advance)
                                decimal_hour = cal.get(11) + float(cal.get(12)) / 60
                                fractional_month = cal.get(Calendar.MONTH) * 100 + cal.get(Calendar.DAY_OF_MONTH)
                                for ci in days_of_week[cal.get(Calendar.DAY_OF_WEEK)]:
                                    if ((ci['start-hour'] < ci['end-hour'] and ci['start-hour'] <= decimal_hour < ci['end-hour']) or (ci['start-hour'] >= ci['end-hour'] and (ci['start-hour'] <= decimal_hour or decimal_hour < ci['end-hour']))) and ci['start-month'] <= fractional_month <= ci['end-month']:
                                        utc_day = utc_cal.get(Calendar.DAY_OF_MONTH)
                                        part_hh.append({'status': 'E', 'imp-msp-kvarh': 0, 'imp-msp-kvar': 0, 'exp-msp-kvarh': 0, 'exp-msp-kvar': 0, 'hist-start-date': utc_cal.getTime(), 'start-date': utc_cal.getTime(), 'ct-day': ct_cal.get(5), 'utc-month': utc_cal.get(2), 'utc-day': utc_day, 'utc-decimal-hour': utc_cal.get(11) + float(utc_cal.get(12)) / 60, 'utc-year': utc_cal.get(Calendar.YEAR), 'utc-hour': utc_cal.get(Calendar.HOUR_OF_DAY), 'utc-minute': utc_cal.get(Calendar.MINUTE), 'ct-year': ct_cal.get(Calendar.YEAR), 'ct-month': ct_cal.get(2), 'ct-decimal-hour': ct_cal.get(11) + float(ct_cal.get(12)) / 60, 'ct-day-of-week': ct_cal.get(7), 'utc-day-of-week': utc_cal.get(7), 'utc-is-bank-holiday': utc_day in bank_holidays})
                                        break
                                hh_date = HhStartDate.getNext(utc_cal, hh_date)
                                #s elf.pw.println(str(System.currentTimeMillis()) + " finished inner loop ")

                                #s elf.pw.println(str(System.currentTimeMillis()) + " done bills ")
                            num_hh = len(part_hh)
                            if num_hh == 0:
                                av_kwh = 0
                            else:
                                av_kwh = float(kwh) / float(num_hh)
                            #s elf.pw.println("av kwh " + str(av_kwh))

                            for datum in part_hh:
                                datum.update({'msp-kw': av_kwh * 2, 'msp-kwh': av_kwh, 'hist-kwh': av_kwh})
                            data_hh += part_hh

                    if read_3 is None:
                        keep_going = False

                    if keep_going and read_2 is not None and read_2['date'].after(history_finish):
                        keep_going = False

                    if keep_going and read_3['date'].after(history_finish) and not (read_2 is None and read_3['date'].after(history_start)):
                        keep_going = False

                    read_0 = read_1
                    read_1 = read_2
                    read_2 = read_3
                    read_3 = None

                    #s elf.pw.println('finished scond inner loop ' + str(prev_read.getPresentDate()) + ', ' + str(System.currentTimeMillis()))
                #s elf.pw.println('finished section, ' + str(System.currentTimeMillis()))
            else:
                if self.is_import:
                    mpan = generation.getImportMpan()
                else:
                    mpan = generation.getExportMpan()
                tpr_codes = Hiber.session().createQuery("select mr.tpr.code from MeasurementRequirement mr where mr.ssc = :ssc").setEntity('ssc', generation.getSsc()).list()
                bills = []
                for cand_bill_res in Hiber.session().createQuery("select distinct read.bill, read.bill.issueDate, read.bill.startDate.date from RegisterRead read where read.bill.supply = :supply and read.bill.batch.contract = :contract and read.bill.startDate.date <= :finishDate and read.bill.finishDate.date >= :searchStart and read.bill.type.code != 'W' order by read.bill.issueDate desc, read.bill.startDate.date").setEntity('supply', self.supply).setEntity('contract', mpan.getSupplierContract()).setTimestamp('searchStart', start_date.getDate()).setTimestamp('finishDate', finish_date.getDate()).list():
                    cand_bill = cand_bill_res[0]
                    can_insert = True
                    for bill in bills:
                        if not cand_bill.getStartDate().after(bill.getFinishDate()) and not cand_bill.getFinishDate().before(bill.getStartDate()):
                            can_insert = False
                            break
                    if can_insert:
                        bills.append(cand_bill)

                for bill in bills:                
                    for read in Hiber.session().createQuery("select read.tpr, read.tpr.code, read.coefficient, read.previousDate, read.previousValue, read.previousType.code, read.presentDate, read.presentValue, read.presentType.code, read.id from RegisterRead read where read.bill = :bill and read.units.int = :units order by read.presentDate.date").setEntity('bill', bill).setInteger('units', 0).list():
                        tpr = read[0]
                        tpr_code = read[1]
                        if tpr_code not in tpr_codes:
                            summary['problem'] += "The TPR " + str(tpr) + " from the register read does not match any of the TPRs associated with the MPAN. "

                        coefficient = read[2].doubleValue()
                        previous_date = read[3].getNext()
                        previous_value = read[4].doubleValue()
                        previous_type = read[5]
                        present_date = read[6]
                        present_value = read[7].doubleValue()
                        present_type = read[8]

                        if present_date.before(start_date) or previous_date.after(finish_date):
                            continue
                    
                        if previous_date.before(bill.getStartDate()):
                            summary['problem'] += "There's a read before the start of the bill!"
                        if present_date.after(bill.getFinishDate()):
                            summary['problem'] += "There's a read after the end of the bill!"
                        advance = present_value - previous_value
                        if advance < 0:
                            summary['problem'] += "Clocked? "
                            digits = int(Math.log10(previous_value)) + 1
                            advance = 10 ** digits - previous_value + present_value

                        kwh = advance * coefficient
                        #s elf.pw.write(' kwh ' + str(kwh))
                        if previous_date.before(start_date):
                            chunk_start = start_date
                        else:
                            chunk_start = previous_date

                        if present_date.after(finish_date):
                            chunk_finish = finish_date
                        else:
                            chunk_finish = present_date

                        days_of_week = dict([[i, []] for i in range(1,8)])


                        for ci in ci_query.setEntity('tpr', tpr).list():
                            day_of_week = ci[0]
                            start_month = ci[1]
                            start_hour = ci[2]
                            end_month = ci[3]
                            end_hour = ci[4]
                            days_of_week[day_of_week].append({'start-month': start_month, 'start-hour': start_hour, 'end-month': end_month, 'end-hour': end_hour})

                        if tpr.getIsGmt():
                            cal = utc_cal
                            decimal_hour_key = 'utc-decimal-hour'
                            day_of_week_key = 'utc-day-of-week'
                            month_key = 'utc-month'
                            day_of_month_key = 'utc-day'
                        else:
                            cal = ct_cal
                            decimal_hour_key = 'ct-decimal-hour'
                            day_of_week_key = 'ct-day-of-week'
                            month_key = 'ct-month'
                            day_of_month_key = 'ct-day'
                        if present_type in ACTUAL_READ_TYPES and previous_type in ACTUAL_READ_TYPES:
                            status = 'A'
                        else:
                            status = 'E'

                        hh_date = previous_date.getDate().getTime()
                        pass_finish = present_date.getDate().getTime()

                        num_hh = 0
                        chunk_start_millis = chunk_start.getDate().getTime()
                        chunk_finish_millis = chunk_finish.getDate().getTime()
                        utc_cal.setTimeInMillis(hh_date)

                        part_hh = []
                        while not hh_date > pass_finish:
                            ct_cal.setTimeInMillis(hh_date)
                            utc_cal.add(Calendar.YEAR, year_advance)
                            ct_cal.add(Calendar.YEAR, year_advance)
                            decimal_hour = cal.get(11) + float(cal.get(12)) / 60
                            fractional_month = cal.get(Calendar.MONTH) * 100 + cal.get(Calendar.DAY_OF_MONTH)
                            for ci in days_of_week[cal.get(Calendar.DAY_OF_WEEK)]:
                                if ((ci['start-hour'] < ci['end-hour'] and ci['start-hour'] <= decimal_hour < ci['end-hour']) or (ci['start-hour'] >= ci['end-hour'] and (ci['start-hour'] <= decimal_hour or decimal_hour < ci['end-hour']))) and ci['start-month'] <= fractional_month <= ci['end-month']:
                                    num_hh += 1
                                    if chunk_start_millis <= hh_date <= chunk_finish_millis:
                                        utc_day = utc_cal.get(Calendar.DAY_OF_MONTH)
                                        part_hh.append({'status': status, 'imp-msp-kvarh': 0, 'imp-msp-kvar': 0, 'exp-msp-kvarh': 0, 'exp-msp-kvar': 0, 'hist-start-date': chunk_start, 'start-date': utc_cal.getTime(), 'ct-day': ct_cal.get(5), 'utc-month': utc_cal.get(2), 'utc-day': utc_day, 'utc-decimal-hour': utc_cal.get(11) + float(utc_cal.get(12)) / 60, 'utc-year': utc_cal.get(Calendar.YEAR), 'utc-hour': utc_cal.get(Calendar.HOUR_OF_DAY), 'utc-minute': utc_cal.get(Calendar.MINUTE), 'ct-year': ct_cal.get(Calendar.YEAR), 'ct-month': ct_cal.get(2), 'ct-decimal-hour': ct_cal.get(11) + float(ct_cal.get(12)) / 60, 'ct-day-of-week': ct_cal.get(7), 'utc-day-of-week': utc_cal.get(7), 'utc-is-bank-holiday': utc_day in bank_holidays})
                                    break
                            hh_date = HhStartDate.getNext(utc_cal, hh_date)
                        #s elf.pw.println(str(System.currentTimeMillis()) + " finished inner loop ")

                        #s elf.pw.println('pass count ' + str(pass_count) + '  len(data_hh) ' + str(len(data_hh)))

                        if num_hh > 0:
                            kwh = float(kwh) / float(num_hh)
                            for datum in part_hh:
                                datum.update({'msp-kw': kwh * 2, 'msp-kwh': kwh, 'hist-kwh': kwh})
                        #s elf.pw.println(str(System.currentTimeMillis()) + " done bills ")
                        data_hh += part_hh

        else:
            #s elf.pw.println("whole data: about to prepare query, " +  str(System.currentTimeMillis()))
            con = Hiber.session().connection()
            if self.is_import:
                imp_pref = ''
                exp_pref = 'anti_'
            else:
                imp_pref = 'anti_'
                exp_pref = ''
            stmt = con.prepareStatement("select sum(case when channel.is_import and channel.is_kwh then hh_datum.value else 0 end) as " + imp_pref + "kwh, max(case when channel.is_import and channel.is_kwh then hh_datum.status else '' end) as " + imp_pref + "status, sum(case when channel.is_import and not channel.is_kwh then hh_datum.value else 0 end) as imp_kvarh, sum(case when not channel.is_import and channel.is_kwh then hh_datum.value else 0 end) as " + exp_pref + "kwh, max(case when not channel.is_import and channel.is_kwh then hh_datum.status else '' end) as " + exp_pref + "status, sum(case when not channel.is_kwh and not channel.is_import then hh_datum.value else 0  end) as exp_kvarh, hh_datum.start_date from hh_datum, channel, supply_generation where hh_datum.channel_id = channel.id and channel.supply_generation_id = supply_generation.id and supply_generation.supply_id = ? and (channel.is_import = ? or channel.is_kwh = FALSE) and hh_datum.start_date >= ? and hh_datum.start_date <= ? group by hh_datum.start_date order by hh_datum.start_date", ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.CLOSE_CURSORS_AT_COMMIT)
            stmt.setLong(1, self.supply.getId())
            stmt.setBoolean(2, self.is_import)
            stmt.setTimestamp(3, Timestamp(history_start.getDate().getTime()))
            stmt.setTimestamp(4, Timestamp(history_finish.getDate().getTime()))
            #stmt.setFetchSize(100)
            #s elf.pw.println("whole data: about to execute query, " + str(System.currentTimeMillis()))
            rs = stmt.executeQuery()
            #s elf.pw.println("whole data: starting loop, " + str(System.currentTimeMillis()))
            while rs.next():
                hh_start_date = rs.getTimestamp('start_date')
                msp_kwh = rs.getBigDecimal('kwh').doubleValue()
                anti_msp_kwh = rs.getBigDecimal('anti_kwh').doubleValue()
                imp_kvarh = rs.getBigDecimal('imp_kvarh').doubleValue()
                exp_kvarh = rs.getBigDecimal('exp_kvarh').doubleValue()
                status = rs.getString('status')

                utc_cal.setTime(hh_start_date)
                ct_cal.setTime(hh_start_date)
                utc_cal.add(Calendar.YEAR, year_advance)
                ct_cal.add(Calendar.YEAR, year_advance)

                utc_day = utc_cal.get(Calendar.DAY_OF_MONTH)
                data_hh.append({'status': status, 'imp-msp-kvarh': imp_kvarh, 'imp-msp-kvar': imp_kvarh * 2, 'exp-msp-kvarh': exp_kvarh, 'exp-msp-kvar': exp_kvarh * 2, 'anti-msp-kwh': anti_msp_kwh, 'anti-msp-kw': anti_msp_kwh * 2, 'msp-kw': msp_kwh * 2, 'msp-kwh': msp_kwh, 'hist-kwh': msp_kwh, 'hist-start-date': hh_start_date, 'start-date': utc_cal.getTime(), 'ct-day': ct_cal.get(5), 'utc-month': utc_cal.get(2), 'utc-day': utc_day, 'utc-decimal-hour': utc_cal.get(11) + float(utc_cal.get(12)) / 60, 'utc-year': utc_cal.get(Calendar.YEAR), 'utc-hour': utc_cal.get(Calendar.HOUR_OF_DAY), 'utc-minute': utc_cal.get(Calendar.MINUTE), 'ct-year': ct_cal.get(Calendar.YEAR), 'ct-month': ct_cal.get(2), 'ct-decimal-hour': ct_cal.get(11) + float(ct_cal.get(12)) / 60, 'ct-day-of-week': ct_cal.get(7), 'utc-day-of-week': utc_cal.get(7), 'utc-is-bank-holiday': utc_day in bank_holidays})

            rs.close()
            stmt.close()


        #s elf.pw.println(" done looping," + str(System.currentTimeMillis()))
      
        if len(data_hh) == 0:
            utc_cal.setTime(finish_date.getDate())
            ct_cal.setTime(finish_date.getDate())
            utc_day = utc_cal.get(Calendar.DAY_OF_MONTH)
            data_hh.append({'status': 'E', 'used-kwh': 0, 'hist-kwh': 0, 'msp-kwh': 0, 'gsp-kwh': 0, 'msp-kw': 0,'anti-msp-kw': 0,'anti-msp-kwh': 0, 'imp-msp-kvarh': 0, 'imp-msp-kvar': 0, 'exp-msp-kvarh': 0, 'exp-msp-kvar': 0, 'hist-start-date': history_finish.getDate(), 'start-date': finish_date.getDate(), 'ct-day': ct_cal.get(5), 'utc-month': utc_cal.get(2), 'utc-day': utc_day, 'utc-decimal-hour': utc_cal.get(11) + float(utc_cal.get(12)) / 60, 'ct-month': ct_cal.get(2), 'ct-decimal-hour': ct_cal.get(11) + ct_cal.get(12) / 60, 'ct-day-of-week': ct_cal.get(7), 'utc-day-of-week': utc_cal.get(7), 'utc-year': utc_cal.get(Calendar.YEAR), 'utc-hour': utc_cal.get(Calendar.HOUR), 'utc-minute': utc_cal.get(Calendar.MINUTE), 'utc-is-bank-holiday': utc_day in bank_holidays})

        #s elf.pw.println("whole data: starting dso hh, " + str(System.currentTimeMillis()))
        if self.pc_code == '00':
            dso_contract = get_dso_contract(self.dso_code, start_date, self.pw)
            summary['dso-bill'] = {'problem': ''}
            contract_function(dso_contract, 'hh')(summary, data_hh, self)
            summary['sum-gsp-kwh'] = sum(datum['gsp-kwh'] for datum in data_hh)
            summary['max-gsp-kwh'] = max(datum['gsp-kwh'] for datum in data_hh)
            #s elf.pw.println("whole data: about to do tlms, " + str(System.currentTimeMillis()))
            contract_function(tlms_contract, 'hh')(self, data_hh)
            summary['sum-nbp-kwh'] = sum(datum['nbp-kwh'] for datum in data_hh)
            summary['max-nbp-kwh'] = max(datum['nbp-kwh'] for datum in data_hh)

        #s elf.pw.println("whole data: about to start summarry, " + str(System.currentTimeMillis()))
        for name in ['msp-kwh', 'hist-kwh', 'imp-msp-kvarh', 'exp-msp-kvarh']:
            datum_list = [datum[name] for datum in data_hh]
            summary['sum-' + name] = sum(datum_list)
            summary['max-' + name] = max(datum_list)

        #s elf.pw.println("finished create whole data, " + str(System.currentTimeMillis()))

        return {'summary': summary, 'data': data_hh}



def get_dso_contract(dso_code, date, pw):
    return Hiber.session().createQuery("select distinct contract from DsoContract contract join contract.rateScripts script where contract.party.code = :dsoCode and contract.name like 'main%' and script.startDate.date <= :date and (script.finishDate.date is null or script.finishDate.date >= :date)").setString('dsoCode', dso_code).setTimestamp('date', date.getDate()).uniqueResult()


def site_source(site, start_date, finish_date, forecast_date, comterp, pw):
    return SiteSource(site, start_date, finish_date, forecast_date, comterp, pw)

def supply_source(forecast_date, comterp, pw, bill=None):
    #timing = System.currentTimeMillis()
    #pw.println("supply_source: start " + str(System.currentTimeMillis() - timing))

    source = SupplySource(forecast_date, comterp, pw, bill)
    #pw.println("supply_source: finish " + str(System.currentTimeMillis() - timing))
    return source

def get_edi_parser(reader):
    return EdiParser(reader)

class EdiParser():
    def __init__(self, reader):
        self.lreader = LineNumberReader(reader)
        self.date_format = SimpleDateFormat("yyMMdd", Locale.UK)
        self.date_format.setCalendar(MonadDate.getCalendar())


    def next_segment(self):
        line = self.lreader.readLine()
        if line is None:
            return None
        if line[-1] != "'":
            raise UserException("This parser expects one segment per line.")
        self.elements = [element.split(':') for element in line[4:-1].split("+")]
        return line[:3]


    def to_big_decimal(self, components):
        result = BigDecimal(components[0])
        if len(components) > 1 and components[-1] == "R":
            result = result.multiply(BigDecimal("-1"))
        return result


    def to_date(self, component):
        try:
            return HhStartDate(self.date_format.parse(component))
        except ParseException, e:
            raise UserException("Couldn't parse " + component + " as a date. " + e.getMessage())


    def to_int(self, component):
        try:
            return Integer.parseInt(component)
        except NumberFormatException, e:
            raise UserException("Couldn't parse " + component + " as an integer. " + e.getMessage())


    def close(self):
        try:
            self.lreader.close()
        except IOException, e:
            raise UserException("Can't read SSE EDI file.")
        except Throwable, e:
            raise UserException("Problem at line number " + self.lreader.getLineNumber() + "\n" + line + "\n of the EDI file.\n" + HttpException.getStackTraceString(e))


def displaced_mpan(site_group, start_date, finish_date):
    has_displaced = False
    mpans = {}
    for supply in site_group.getSupplies():
        source_code = supply.getSource().getCode()
        if source_code in ['gen', 'gen-net']:
            has_displaced = True
        if source_code in ['net', 'gen-net']:
            export_channels = Hiber.session().createQuery("select count(*) from Channel channel where channel.supplyGeneration.supply = :supply and channel.isImport is false and channel.isKwh is true and channel.supplyGeneration.startDate.date <= :finishDate and (channel.supplyGeneration.finishDate is null or channel.supplyGeneration.finishDate.date >= :startDate)").setEntity('supply', supply).setTimestamp('startDate', start_date.getDate()).setTimestamp('finishDate', finish_date.getDate()).uniqueResult()
            if export_channels is not None and export_channels > 0:
                has_displaced = True

            for mpan in Hiber.session().createQuery("from Mpan mpan where mpan.llfc.isImport is true and mpan.supplyGeneration.pc.code = 0 and mpan.supplyGeneration.supply = :supply and mpan.supplyGeneration.startDate.date <= :finishDate and (mpan.supplyGeneration.finishDate is null or mpan.supplyGeneration.finishDate.date >= :startDate) order by mpan.supplyGeneration.startDate.date").setEntity('supply', supply).setTimestamp('startDate', start_date.getDate()).setTimestamp('finishDate', finish_date.getDate()).list():
                mpans[mpan.getCore().toString()] = mpan
    keys = mpans.keys()                
    if has_displaced and len(keys) > 0:
        keys.sort()
        return mpans[keys[0]]
    else:
        return None]]></value>
        <value><![CDATA[143]]></value>
        <value><![CDATA[2009-11-27T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[71]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[fit]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def hh(bill, supply_source, rate, differentiator, whole_data=None):
    if whole_data is None:
        whole_data = supply_source.whole_data

    hh_data = whole_data['data']
    summary = whole_data['summary']

    bill['fit-' + differentiator + '-msp-kwh'] = summary['sum-msp-kwh']
    bill['fit-' + differentiator + '-rate'] = rate
    bill['fit-' + differentiator + '-gbp'] = summary['sum-msp-kwh'] * rate]]></value>
        <value><![CDATA[231]]></value>
        <value><![CDATA[2010-12-02T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[73]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[hh-importer]]></value>
        <value><![CDATA[from java.text import SimpleDateFormat
from java.util import Date, Timer, TimerTask
from java.util.concurrent.locks import ReentrantLock
from org.apache.commons.net.ftp import FTPClient, FTPFile, FTPReply
from net.sf.chellow.billing import HhdcContract, NonCoreContract
from net.sf.chellow.hhimport import HhDataImportProcess
from net.sf.chellow.monad import Hiber, HttpException, InternalException, UserException
from net.sf.chellow.monad.types import MonadDate
import sys


def import_hh_data(task):
    ftp = None
    try:
        contract = HhdcContract.getHhdcContract(task.contract_id)
        host_name = contract.getProperty("hostname")
        user_name = contract.getProperty("username")
        password = contract.getProperty("password")
        file_type = contract.getProperty("file.type")

        directories = []
    
        while True:
            name = contract.getProperty("directory" + str(len(directories)))
            if name is None:
                break
            last_import_key_name = "lastImportKey" + str(len(directories))
            last_import_key = contract.getStateProperty(last_import_key_name)
            if last_import_key is None:
                last_import_key = unicode('')
            directories.append({'name': name, 'last-import-key-name': last_import_key_name, 'last-import-key': last_import_key})

        ftp = FTPClient()
        ftp.setDataTimeout(1000 * 60)
    
        ftp.connect(host_name)
        task.log("Connecting to ftp server at " + host_name + ".")
        task.log("Server replied with '" + ftp.getReplyString() + "'.")
        reply = ftp.getReplyCode()
        if not FTPReply.isPositiveCompletion(reply):
            raise UserException("FTP server refused connection.")

        task.log("Connected to server, now logging in.")
        ftp.login(user_name, password)
        task.log("Server replied with '" + ftp.getReplyString() + "'.")
        for directory in directories:
            task.log("Checking the directory '" + directory['name'] + "'.")

            files = [(str(MonadDate(file.getTimestamp().getTime())) + "_" + file.getName(), file) for file in ftp.listFiles(directory['name']) if file.getType() == FTPFile.FILE_TYPE]

            files = [(key, file) for key, file in files if key > directory['last-import-key']]

            for key, file in sorted(files):
                file_name = directory['name'] + "\\" + file.getName()
                if file.getSize() == 0:
                    task.log("Ignoring '" + file_name + "'because it has zero length")
                    continue
                task.log("Attempting to download '" + file_name
+ "'.")
                istr = ftp.retrieveFileStream(file_name)
                if istr is None:
                    reply = ftp.getReplyCode()
                    raise UserException("Can't download the file '" + file.getName() + "', server says: " + reply + ".")
                task.log("File stream obtained successfully.")
                task.importer = HhDataImportProcess(task.contract_id, 0, istr, file_name + file_type, file.getSize())
                task.importer.run()
                messages = task.importer.getMessages()
                task.importer = None
                for message in messages:
                    task.log(message)

                if len(messages) > 0:
                    raise UserException("Problem loading file.")

                if not ftp.completePendingCommand():
                    raise UserException("Couldn't complete ftp transaction: " + ftp.getReplyString())
                contract = HhdcContract.getHhdcContract(task.contract_id)
                contract.setStateProperty(directory['last-import-key-name'], key)
                Hiber.commit()
            if len(files) == 0:
                task.log("No new files found.")
        Hiber.close()
        ftp.logout()
        task.log("Logged out.")
    except UserException, e:
        task.log("Problem " + str(e))
    except:
        e_info = sys.exc_info()
        tb = e_info[2]
        task.log("Unknown Exception " + str(e_info[0]) + str(e_info[1]) + str(tb) + " line number " + str(tb.tb_lineno))
    finally:
        if ftp is not None and ftp.isConnected():
            ftp.disconnect();
            task.log("Disconnected.")


class HhImportTask(TimerTask):

    def __init__(self, timer, contract):
        self.timer = timer
        self.lock = ReentrantLock()
        self.messages = []
        self.contract_id = contract.getId()
        self.importer = None
        self.date_formatter = SimpleDateFormat("yyyy-MM-dd HH:mm:ss 'Z'")
        self.date_formatter.setCalendar(MonadDate.getCalendar())

    def log(self, message):
        self.messages.insert(0, self.date_formatter.format(Date()) + " - " + message)
        if len(self.messages) > 1000:
            del self.messages[-1]

    def get_status(self):
        if self.importer is None:
            return ''
        else:
            return self.importer.status()


    def is_locked(self):
        return self.lock.isLocked()


    def run(self):
        if self.lock.tryLock():
            try:
                import_hh_data(self)
            except:
                e_info = sys.exc_info()
                tb = e_info[2]
                task.log("Outer problem " + str(e_info[0]) + str(e_info[1]) + str(tb) + " line number " + str(tb.tb_lineno))
            finally:
                self.lock.unlock()


def _importer_task_key(contract):
    return "net.sf.chellow.hh_importer_task_" + str(contract.getId())


def get_hh_importer_task(ctx, contract):
    return ctx.getAttribute(_importer_task_key(contract))


def start_hh_importer_task(ctx, contract):
    existing_task = get_hh_importer_task(ctx, contract)
    if existing_task is None:
        timer = Timer("HH Importer Timer For " + str(contract.getId()), True)
        hh_importer_task = HhImportTask(timer, contract)
        timer.schedule(hh_importer_task, 0, 60 * 60 * 1000)
        ctx.setAttribute(_importer_task_key(contract), hh_importer_task)
    else:
        raise UserException("There's already an importer task for this contract")

def remove_hh_importer_task(ctx, contract):
    existing_task = get_hh_importer_task(ctx, contract)
    if existing_task is None:
        raise UserException("There isn't an importer task for this contract.")
    existing_task.cancel()
    if existing_task.is_locked():
        raise UserException("There's an import currently in progress.")
    
    ctx.setAttribute(_importer_task_key(contract), None)]]></value>
        <value><![CDATA[235]]></value>
        <value><![CDATA[2011-01-06T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[79]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[rcrc]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate, Configuration
from net.sf.chellow.billing import NonCoreContract
from java.util import Date, Timer, TimerTask, Calendar, Properties, GregorianCalendar, TimeZone, Locale
from java.util.concurrent.locks import ReentrantLock
from java.text import SimpleDateFormat
from net.sf.chellow.monad.types import MonadDate
from net.sf.chellow.monad import Hiber, UserException
from java.io import StringReader
from org.apache.commons.httpclient import HttpClient, NameValuePair, UsernamePasswordCredentials
from org.apache.commons.httpclient.methods import GetMethod, PostMethod
import sys
from com.Ostermiller.util import CSVParser


def hh(data_source, hh_data):
    rate_script = contract.rateScript(HhStartDate(hh_data[0]['start-date']))
    rates = data_source.rate(rate_script, 'rates')
    for datum in hh_data:
        datum['rcrc'] = rates.get(('%02d' % datum['utc-day']) + ' ' + ('%02d' % datum['utc-hour']) + ':' + ('%02d' % datum['utc-minute']) + ' Z', 0)


class RcrcTask(TimerTask):
    def __init__(self, timer):
        self.timer = timer
        self.lock = ReentrantLock()
        self.messages = []

        self.date_formatter = SimpleDateFormat("yyyy-MM-dd HH:mm 'Z'")
        self.date_formatter.setCalendar(MonadDate.getCalendar())

        self.date_parser = SimpleDateFormat("dd/MM/yyyy")
        self.date_parser.setCalendar(MonadDate.getCalendar())

        self.key_format = SimpleDateFormat("dd HH:mm 'Z'")
        self.key_format.setCalendar(MonadDate.getCalendar())

        self.ELEXON_PORTAL_USER_NAME_KEY = 'elexonportal.user.name'
        self.ELEXON_PORTAL_PASSWORD_KEY = 'elexonportal.password'

        self.ct_cal = GregorianCalendar(TimeZone.getTimeZone("Europe/London"), Locale.UK)


    def log(self, message):
        self.messages.insert(0, self.date_formatter.format(Date()) + " - " + message)
        if len(self.messages) > 1000:
            del self.messages[-1]


    def is_locked(self):
        return self.lock.isLocked()


    def run(self):
        if self.lock.tryLock():
            try:
                self.log("Starting to check RCRCs.")
                contract = NonCoreContract.getNonCoreContract('rcrc')
                latest_rate_script = Hiber.session().createQuery("from RateScript script where script.contract = :contract order by script.startDate.date desc").setEntity('contract', contract).setMaxResults(1).uniqueResult()

                cal = MonadDate.getCalendar()

                cal.setTime(latest_rate_script.getStartDate().getDate())
                cal.set(Calendar.DAY_OF_MONTH, 1)
                cal.set(Calendar.HOUR_OF_DAY, 0)
                cal.set(Calendar.MINUTE, 0)
                this_month_start = HhStartDate(cal.getTime())
                cal.add(Calendar.MONTH, 1)
                next_month_start = HhStartDate(cal.getTime())
                cal.add(Calendar.MONTH, 1)
                next_next_month_start = HhStartDate(cal.getTime())
                if Date().after(next_next_month_start.getDate()):
                    self.log("Checking to see if data is available from " + str(next_month_start) + " to " + str(next_next_month_start.getPrevious()) + " on Elexon Portal.")
                    config = Configuration.getConfiguration()
                    properties = Properties()
                    properties.load(StringReader(config.getProperties()))

                    user_name = properties.get(self.ELEXON_PORTAL_USER_NAME_KEY)
                    if user_name is None:
                        raise UserException("The property " + self.ELEXON_PORTAL_USER_NAME_KEY + " cannot be found in the configuration properties.")

                    password = properties.get(self.ELEXON_PORTAL_PASSWORD_KEY)
                    if password is None:
                        raise UserException("The property " + self.ELEXON_PORTAL_PASSWORD_KEY + " cannot be found in the configuration properties.")

                    client = HttpClient()

                    get_method = GetMethod('https://www.bsccentralservices.com/index.php/users/login')
                    get_method.releaseConnection()

                    post_method = PostMethod("https://www.bsccentralservices.com/index.php/users/login")
                    post_method.setRequestBody([NameValuePair("username", user_name), NameValuePair("password", password), NameValuePair('submLogin', 'Submit')])
                    response_code = client.executeMethod(post_method)
                    post_method.releaseConnection()

                    get_method = GetMethod('https://downloads.bsccentralservices.com/action_attachment_download.php?uid=96&filename=rcrc.csv')
                    client.executeMethod(get_method)
                    csv_is = get_method.getResponseBodyAsStream()
                    parser = CSVParser(csv_is)
                    values = parser.getLine()
                    values = parser.getLine()
                    month_rcrcs = {}
                    while values is not None:                        
                        date = self.date_parser.parse(values[0])
                        self.ct_cal.setTime(date)
                        hour, hour_fraction = divmod(int(values[2]) - 1, 2)
                        self.ct_cal.set(Calendar.HOUR_OF_DAY, hour)
                        self.ct_cal.set(Calendar.MINUTE, int(hour_fraction * 30))
                        hh_date = HhStartDate(self.ct_cal.getTime())
                        if not hh_date.before(next_month_start) and hh_date.before(next_next_month_start):
                            month_rcrcs[self.key_format.format(hh_date.getDate())] = values[3]
                        values = parser.getLine()
                    parser.close()
                    get_method.releaseConnection()
                    if str(self.key_format.format(next_next_month_start.getPrevious().getDate())) in month_rcrcs:
                        self.log("The whole month's data is there.")
                        script = "def rates():\n    return {\n" + ',\n'.join("'" + k + "': " + month_rcrcs[k] for k in sorted(month_rcrcs.keys())) + "}"
                        contract.insertRateScript(None, next_month_start, script)
                        self.log("Added new rate script.")
                    else:
                        self.log("There isn't a whole month there yet. The last date is " + sorted(month_rcrcs.keys())[-1])

            except:
                e_info = sys.exc_info()
                tb = e_info[2]
                self.log("Problem " + str(e_info[0]) + str(e_info[1]) + str(tb) + " line number " + str(tb.tb_lineno))
            finally:
                try:
                    self.lock.unlock()
                finally:
                    Hiber.close()
                    self.log("Finished checking RCRCs.")


RCRC_TASK_KEY = "net.sf.chellow.rcrc_task"


def get_rcrc_task(ctx):
    return ctx.getAttribute(RCRC_TASK_KEY)


def start_rcrc_task(ctx):
    existing_task = get_rcrc_task(ctx)
    if existing_task is None:
        timer = Timer("RCRC Task", True)
        rcrc_task = RcrcTask(timer)
        timer.schedule(rcrc_task, 0, 60 * 60 * 1000)
        ctx.setAttribute(RCRC_TASK_KEY, rcrc_task)
    else:
        raise UserException("There's already a RCRC task.")

def remove_rcrc_task(ctx):
    existing_task = get_rcrc_task(ctx)
    if existing_task is None:
        raise UserException("There isn't a RCRC task.")
    existing_task.cancel()
    if existing_task.is_locked():
        raise UserException("There's a RCRC import currently in progress.")
    
    ctx.setAttribute(RCRC_TASK_KEY, None)]]></value>
        <value><![CDATA[241]]></value>
        <value><![CDATA[2011-03-21T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[75]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[startup]]></value>
        <value><![CDATA[from net.sf.chellow.billing import NonCoreContract
from net.sf.chellow.monad import Hiber

computer_contract = NonCoreContract.getNonCoreContract('computer')
comterp = computer_contract.callFunction('create_comterp', [])

hh_importer_contract = NonCoreContract.getNonCoreContract('hh-importer')

def on_start_up(ctx):
    start_importer_f = comterp.get('contract_function')(hh_importer_contract, 'start_hh_importer_task')

    for contract in Hiber.session().createQuery("from HhdcContract contract order by contract.id").list():
        start_importer_f(ctx, contract)]]></value>
        <value><![CDATA[237]]></value>
        <value><![CDATA[2011-01-06T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[77]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[system-price]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate
from java.text import SimpleDateFormat
from java.util import Date, Timer, TimerTask, Calendar, GregorianCalendar, TimeZone, Locale
from java.util.concurrent.locks import ReentrantLock
from org.apache.commons.httpclient import HttpClient
from net.sf.chellow.billing import HhdcContract, NonCoreContract
from net.sf.chellow.hhimport import HhDataImportProcess
from net.sf.chellow.monad import Hiber, HttpException, InternalException, UserException
from net.sf.chellow.monad.types import MonadDate
from org.apache.commons.httpclient.methods import GetMethod
from com.Ostermiller.util import CSVParser
from javax.xml.parsers import DocumentBuilderFactory
from org.w3c.dom import Node
import sys


def hh(supply_source, whole_data):
    rate_script = contract.rateScript(whole_data['summary']['start-date'])
    ssps = supply_source.comterp.get('rate')(rate_script, 'ssps')
    for datum in whole_data['data']:
        datum['ssp'] = ssps.get(('%02d' % datum['utc-day']) + ' ' + ('%02d' % datum['utc-hour']) + ':' + ('%02d' % datum['utc-minute']) + ' Z')


class SystemPriceTask(TimerTask):
    def __init__(self, timer):
        self.timer = timer
        self.lock = ReentrantLock()
        self.messages = []
        self.importer = None

        self.date_formatter = SimpleDateFormat("yyyy-MM-dd HH:mm:ss 'Z'")
        self.date_formatter.setCalendar(MonadDate.getCalendar())
        self.get_format = SimpleDateFormat("yyyy-MM-dd")
        self.get_format.setCalendar(GregorianCalendar(TimeZone.getTimeZone("Europe/London"), Locale.UK))

        self.key_format = SimpleDateFormat("dd HH:mm 'Z'")
        self.key_format.setCalendar(MonadDate.getCalendar())


    def log(self, message):
        self.messages.insert(0, self.date_formatter.format(Date()) + " - " + message)
        if len(self.messages) > 1000:
            del self.messages[-1]


    def is_locked(self):
        return self.lock.isLocked()

    def hhs(self, ct_day_start, utc_month=None):
        day_url = "http://www.bmreports.com/bsp/additional/soapfunctions.php?element=SYSPRICE&dT=" + self.get_format.format(ct_day_start.getDate())

        self.log("Downloading data from " + day_url)

        dbf = DocumentBuilderFactory.newInstance()
        dbf.setNamespaceAware(True)
        db = dbf.newDocumentBuilder()
        doc = db.parse(day_url)
        doc_element = doc.getDocumentElement()
        elem_elements = doc_element.getElementsByTagName('ELEMENT')
        cal = MonadDate.getCalendar()
        prices = {}
        hh_start = ct_day_start
        for i in range(elem_elements.getLength()):
            vals = {}
            elem_element = elem_elements.item(i)
            elem_children = elem_element.getChildNodes()
            for j in range(elem_children.getLength()):
                elem_child = elem_children.item(j)
                if elem_child.getNodeType() == Node.ELEMENT_NODE:
                    node_name = elem_child.getTagName()
                    vals[elem_child.getTagName()] = elem_child.getTextContent()
            cal.setTime(hh_start.getDate())
            if utc_month is None or utc_month == cal.get(Calendar.MONTH):
                prices[self.key_format.format(hh_start.getDate())] = {'ssp': vals['SSP'], 'sbp': vals['SBP']}
            #self.log(str(hh_start))
            hh_start = hh_start.getNext()
        return prices


    def run(self):
        if self.lock.tryLock():
            try:
                self.log("Starting to check system prices.")
                contract = NonCoreContract.getNonCoreContract('system-price')

                latest_rate_script = Hiber.session().createQuery("from RateScript script where script.contract = :contract order by script.startDate.date desc").setEntity('contract', contract).setMaxResults(1).uniqueResult()
                ct_cal = GregorianCalendar(TimeZone.getTimeZone("Europe/London"), Locale.UK)
                cal = MonadDate.getCalendar()

                cal.setTime(latest_rate_script.getStartDate().getDate())
                cal.set(Calendar.DAY_OF_MONTH, 1)
                cal.set(Calendar.HOUR_OF_DAY, 0)
                cal.set(Calendar.MINUTE, 0)
                this_month_start = HhStartDate(cal.getTime())
                cal.add(Calendar.MONTH, 1)
                next_month_start = HhStartDate(cal.getTime())
                utc_next_month = cal.get(Calendar.MONTH)
                cal.add(Calendar.MONTH, 1)
                next_next_month_start = HhStartDate(cal.getTime())
                self.log("Is it after " + str(next_next_month_start) + "?")

                if Date().after(next_next_month_start.getDate()):
                    self.log("Checking to see if data is available on " + str(next_next_month_start) + " on bmreports.com.")
                    prices = self.hhs(next_next_month_start)
                    if len(prices) == 0:
                        self.log("Data isn't available on the bmreports.com yet.")
                    else:
                        self.log("Starting to download data from bmreports.com.")
                        prices = {}
                        ct_cal.setTime(next_month_start.getDate())
                        ct_cal.setTime(next_month_start.getDate())
                        ct_cal.set(Calendar.HOUR_OF_DAY, 0)
                        ct_cal.set(Calendar.MINUTE, 0)
                        ct_cal.add(Calendar.DAY_OF_MONTH, -1)
                        ct_day_start = HhStartDate(ct_cal.getTime())
                      
                        ct_cal.add(Calendar.DAY_OF_MONTH, 2)
                        ct_cal.add(Calendar.MONTH, 1)
                        ct_stop_date = HhStartDate(ct_cal.getTime())

                        ct_cal.setTime(ct_day_start.getDate())
                        while ct_day_start.before(ct_stop_date):
                            prices.update(self.hhs(ct_day_start, utc_next_month))
                            ct_cal.add(Calendar.DAY_OF_MONTH, 1)
                            ct_day_start = HhStartDate(ct_cal.getTime())

                        self.log("Finished downloading data from bmreports.com.")
                        script = "def ssps():\n    return {\n" + ',\n'.join("'" + k + "': " + prices[k]['ssp'] for k in sorted(prices.keys())) + "}"
                        contract.insertRateScript(None, next_month_start, script)
                        self.log("Added new rate script.")
                else:
                    self.log("Hasn't reached the end of the month yet.")
            except:
                e_info = sys.exc_info()
                tb = e_info[2]
                self.log("Outer problem " + str(e_info[0]) + str(e_info[1]) + str(tb) + " line number " + str(tb.tb_lineno))
            finally:
                try:
                    self.lock.unlock()
                finally:
                    Hiber.close()
                    self.log("Finished checking system prices.")


SYSTEM_PRICE_TASK_KEY = "net.sf.chellow.system_price_task"


def get_system_price_task(ctx):
    return ctx.getAttribute(SYSTEM_PRICE_TASK_KEY)


def start_system_price_task(ctx):
    existing_task = get_system_price_task(ctx)
    if existing_task is None:
        timer = Timer("System Price Task", True)
        system_price_task = SystemPriceTask(timer)
        timer.schedule(system_price_task, 0, 60 * 60 * 1000)
        ctx.setAttribute(SYSTEM_PRICE_TASK_KEY, system_price_task)
    else:
        raise UserException("There's already a system price task.")

def remove_system_price_task(ctx):
    existing_task = get_system_price_task(ctx)
    if existing_task is None:
        raise UserException("There isn't a system price task.")
    existing_task.cancel()
    if existing_task.is_locked():
        raise UserException("There's a system price import currently in progress.")
    
    ctx.setAttribute(SYSTEM_PRICE_TASK_KEY, None)]]></value>
        <value><![CDATA[239]]></value>
        <value><![CDATA[2010-04-01T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[61]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[tlms]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate, Configuration
from net.sf.chellow.billing import NonCoreContract
from java.util import Date, Timer, TimerTask, Calendar, Properties, GregorianCalendar, TimeZone, Locale
from java.util.concurrent.locks import ReentrantLock
from java.text import SimpleDateFormat
from net.sf.chellow.monad.types import MonadDate
from net.sf.chellow.monad import Hiber, UserException
from java.io import StringReader
from org.apache.commons.httpclient import HttpClient, NameValuePair, UsernamePasswordCredentials
from org.apache.commons.httpclient.methods import GetMethod, PostMethod
import sys
from com.Ostermiller.util import CSVParser


def hh(data_source, hh_data):
    rate_script = contract.rateScript(HhStartDate(hh_data[0]['start-date']))
    tlms = data_source.comterp.get('rate')(rate_script, 'tlms')
    for datum in hh_data:
        datum['tlm'] = tlms.get(('%02d' % datum['utc-day']) + ' ' + ('%02d' % datum['utc-hour']) + ':' + ('%02d' % datum['utc-minute']) + ' Z', 0)
        datum['nbp-kwh'] = datum['gsp-kwh'] * datum['tlm']


class TlmTask(TimerTask):
    def __init__(self, timer):
        self.timer = timer
        self.lock = ReentrantLock()
        self.messages = []

        self.date_formatter = SimpleDateFormat("yyyy-MM-dd HH:mm 'Z'")
        self.date_formatter.setCalendar(MonadDate.getCalendar())

        self.date_parser = SimpleDateFormat("dd/MM/yyyy")
        self.date_parser.setCalendar(MonadDate.getCalendar())

        self.key_format = SimpleDateFormat("dd HH:mm 'Z'")
        self.key_format.setCalendar(MonadDate.getCalendar())

        self.ELEXON_PORTAL_USER_NAME_KEY = 'elexonportal.user.name'
        self.ELEXON_PORTAL_PASSWORD_KEY = 'elexonportal.password'

        self.ct_cal = GregorianCalendar(TimeZone.getTimeZone("Europe/London"), Locale.UK)


    def log(self, message):
        self.messages.insert(0, self.date_formatter.format(Date()) + " - " + message)
        if len(self.messages) > 1000:
            del self.messages[-1]


    def is_locked(self):
        return self.lock.isLocked()


    def run(self):
        if self.lock.tryLock():
            try:
                self.log("Starting to check TLMs.")
                contract = NonCoreContract.getNonCoreContract('tlms')
                latest_rate_script = Hiber.session().createQuery("from RateScript script where script.contract = :contract order by script.startDate.date desc").setEntity('contract', contract).setMaxResults(1).uniqueResult()

                cal = MonadDate.getCalendar()

                cal.setTime(latest_rate_script.getStartDate().getDate())
                cal.set(Calendar.DAY_OF_MONTH, 1)
                cal.set(Calendar.HOUR_OF_DAY, 0)
                cal.set(Calendar.MINUTE, 0)
                this_month_start = HhStartDate(cal.getTime())
                cal.add(Calendar.MONTH, 1)
                next_month_start = HhStartDate(cal.getTime())
                cal.add(Calendar.MONTH, 1)
                next_next_month_start = HhStartDate(cal.getTime())
                if Date().after(next_next_month_start.getDate()):
                    self.log("Checking to see if data is available from " + str(next_month_start) + " to " + str(next_next_month_start.getPrevious()) + " on Elexon Portal.")
                    config = Configuration.getConfiguration()
                    properties = Properties()
                    properties.load(StringReader(config.getProperties()))

                    user_name = properties.get(self.ELEXON_PORTAL_USER_NAME_KEY)
                    if user_name is None:
                        raise UserException("The property " + self.ELEXON_PORTAL_USER_NAME_KEY + " cannot be found in the configuration properties.")

                    password = properties.get(self.ELEXON_PORTAL_PASSWORD_KEY)
                    if password is None:
                        raise UserException("The property " + self.ELEXON_PORTAL_PASSWORD_KEY + " cannot be found in the configuration properties.")

                    client = HttpClient()

                    get_method = GetMethod('https://www.bsccentralservices.com/index.php/users/login')
                    get_method.releaseConnection()

                    post_method = PostMethod("https://www.bsccentralservices.com/index.php/users/login")
                    post_method.setRequestBody([NameValuePair("username", user_name), NameValuePair("password", password), NameValuePair('submLogin', 'Submit')])
                    response_code = client.executeMethod(post_method)
                    post_method.releaseConnection()

                    get_method = GetMethod('https://downloads.bsccentralservices.com/action_attachment_download.php?uid=91&filename=tlm.csv')
                    client.executeMethod(get_method)
                    csv_is = get_method.getResponseBodyAsStream()
                    parser = CSVParser(csv_is)
                    values = parser.getLine()
                    values = parser.getLine()
                    month_tlms = {}
                    while values is not None:                        
                        date = self.date_parser.parse(values[0])
                        self.ct_cal.setTime(date)
                        hour, hour_fraction = divmod(int(values[2]) - 1, 2)
                        self.ct_cal.set(Calendar.HOUR_OF_DAY, hour)
                        self.ct_cal.set(Calendar.MINUTE, int(hour_fraction * 30))
                        hh_date = HhStartDate(self.ct_cal.getTime())
                        if not hh_date.before(next_month_start) and hh_date.before(next_next_month_start):
                            month_tlms[self.key_format.format(hh_date.getDate())] = {'off-taking': values[3], 'delivering': values[4]}
                        values = parser.getLine()
                    parser.close()
                    get_method.releaseConnection()
                    if str(self.key_format.format(next_next_month_start.getPrevious().getDate())) in month_tlms:
                        self.log("The whole month's data is there.")
                        script = "def tlms():\n    return {\n" + ',\n'.join("'" + k + "': " + month_tlms[k]['off-taking'] for k in sorted(month_tlms.keys())) + "}"
                        contract.insertRateScript(None, next_month_start, script)
                        self.log("Added new rate script.")
                    else:
                        self.log("There isn't a whole month there yet. The last date is " + sorted(month_tlms.keys())[-1])

            except:
                e_info = sys.exc_info()
                tb = e_info[2]
                self.log("Problem " + str(e_info[0]) + str(e_info[1]) + str(tb) + " line number " + str(tb.tb_lineno))
            finally:
                try:
                    self.lock.unlock()
                finally:
                    Hiber.close()
                    self.log("Finished checking TLMs.")


TLM_TASK_KEY = "net.sf.chellow.tlm_task"


def get_tlm_task(ctx):
    return ctx.getAttribute(TLM_TASK_KEY)


def start_tlm_task(ctx):
    existing_task = get_tlm_task(ctx)
    if existing_task is None:
        timer = Timer("TLM Task", True)
        tlm_task = TlmTask(timer)
        timer.schedule(tlm_task, 0, 60 * 60 * 1000)
        ctx.setAttribute(TLM_TASK_KEY, tlm_task)
    else:
        raise UserException("There's already a TLM task.")

def remove_tlm_task(ctx):
    existing_task = get_tlm_task(ctx)
    if existing_task is None:
        raise UserException("There isn't a TLM task.")
    existing_task.cancel()
    if existing_task.is_locked():
        raise UserException("There's a TLM import currently in progress.")
    
    ctx.setAttribute(TLM_TASK_KEY, None)]]></value>
        <value><![CDATA[145]]></value>
        <value><![CDATA[2000-04-01T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[def tlms():
    return {
'01 00:00 Z': 1.0082451,
'01 00:30 Z': 1.0082235,
'01 01:00 Z': 1.0082555,
'01 01:30 Z': 1.0082126,
'01 02:00 Z': 1.0082462,
'01 02:30 Z': 1.008023,
'01 03:00 Z': 1.0081234,
'01 03:30 Z': 1.0080151,
'01 04:00 Z': 1.00811,
'01 04:30 Z': 1.0081288,
'01 05:00 Z': 1.008761,
'01 05:30 Z': 1.0090999,
'01 06:00 Z': 1.0089146,
'01 06:30 Z': 1.0096268,
'01 07:00 Z': 1.0105701,
'01 07:30 Z': 1.0115187,
'01 08:00 Z': 1.0121907,
'01 08:30 Z': 1.0117528,
'01 09:00 Z': 1.0113634,
'01 09:30 Z': 1.0112735,
'01 10:00 Z': 1.0112825,
'01 10:30 Z': 1.0115292,
'01 11:00 Z': 1.0112158,
'01 11:30 Z': 1.0111736,
'01 12:00 Z': 1.0109998,
'01 12:30 Z': 1.0107526,
'01 13:00 Z': 1.011276,
'01 13:30 Z': 1.0109941,
'01 14:00 Z': 1.0107357,
'01 14:30 Z': 1.0106123,
'01 15:00 Z': 1.0096825,
'01 15:30 Z': 1.0095906,
'01 16:00 Z': 1.0099862,
'01 16:30 Z': 1.0102465,
'01 17:00 Z': 1.0107477,
'01 17:30 Z': 1.010656,
'01 18:00 Z': 1.0105737,
'01 18:30 Z': 1.0105163,
'01 19:00 Z': 1.0100228,
'01 19:30 Z': 1.0104587,
'01 20:00 Z': 1.010357,
'01 20:30 Z': 1.0099564,
'01 21:00 Z': 1.0101872,
'01 21:30 Z': 1.0095934,
'01 22:00 Z': 1.0091533,
'01 22:30 Z': 1.0087738,
'01 23:00 Z': 1.0081876,
'01 23:30 Z': 1.0083561,
'02 00:00 Z': 1.0083784,
'02 00:30 Z': 1.0085999,
'02 01:00 Z': 1.0086804,
'02 01:30 Z': 1.0084179,
'02 02:00 Z': 1.00851,
'02 02:30 Z': 1.0084139,
'02 03:00 Z': 1.0084857,
'02 03:30 Z': 1.0083999,
'02 04:00 Z': 1.0085224,
'02 04:30 Z': 1.0085669,
'02 05:00 Z': 1.0088107,
'02 05:30 Z': 1.0089272,
'02 06:00 Z': 1.0090154,
'02 06:30 Z': 1.0092071,
'02 07:00 Z': 1.0102191,
'02 07:30 Z': 1.0106789,
'02 08:00 Z': 1.0106284,
'02 08:30 Z': 1.0110875,
'02 09:00 Z': 1.0106033,
'02 09:30 Z': 1.0109123,
'02 10:00 Z': 1.0110051,
'02 10:30 Z': 1.0109837,
'02 11:00 Z': 1.0112582,
'02 11:30 Z': 1.0114393,
'02 12:00 Z': 1.0116898,
'02 12:30 Z': 1.0114662,
'02 13:00 Z': 1.0114172,
'02 13:30 Z': 1.0111769,
'02 14:00 Z': 1.0113644,
'02 14:30 Z': 1.0108544,
'02 15:00 Z': 1.0095326,
'02 15:30 Z': 1.0091257,
'02 16:00 Z': 1.0090008,
'02 16:30 Z': 1.0088492,
'02 17:00 Z': 1.0090147,
'02 17:30 Z': 1.009121,
'02 18:00 Z': 1.0092791,
'02 18:30 Z': 1.0093383,
'02 19:00 Z': 1.0095771,
'02 19:30 Z': 1.0100718,
'02 20:00 Z': 1.0102689,
'02 20:30 Z': 1.0097779,
'02 21:00 Z': 1.0098334,
'02 21:30 Z': 1.0093422,
'02 22:00 Z': 1.00901,
'02 22:30 Z': 1.0085958,
'02 23:00 Z': 1.0078032,
'02 23:30 Z': 1.0079369,
'03 00:00 Z': 1.0079548,
'03 00:30 Z': 1.008312,
'03 01:00 Z': 1.0080864,
'03 01:30 Z': 1.0080784,
'03 02:00 Z': 1.0081806,
'03 02:30 Z': 1.0083484,
'03 03:00 Z': 1.0087593,
'03 03:30 Z': 1.0087499,
'03 04:00 Z': 1.0086855,
'03 04:30 Z': 1.0087533,
'03 05:00 Z': 1.0086278,
'03 05:30 Z': 1.0087367,
'03 06:00 Z': 1.0087099,
'03 06:30 Z': 1.0085892,
'03 07:00 Z': 1.008491,
'03 07:30 Z': 1.0083043,
'03 08:00 Z': 1.0080715,
'03 08:30 Z': 1.0080859,
'03 09:00 Z': 1.0083848,
'03 09:30 Z': 1.0084985,
'03 10:00 Z': 1.0086475,
'03 10:30 Z': 1.0087038,
'03 11:00 Z': 1.008603,
'03 11:30 Z': 1.0085371,
'03 12:00 Z': 1.0086332,
'03 12:30 Z': 1.0086205,
'03 13:00 Z': 1.0084774,
'03 13:30 Z': 1.0084529,
'03 14:00 Z': 1.0085199,
'03 14:30 Z': 1.0084915,
'03 15:00 Z': 1.0084352,
'03 15:30 Z': 1.0085005,
'03 16:00 Z': 1.0082941,
'03 16:30 Z': 1.0082383,
'03 17:00 Z': 1.0084033,
'03 17:30 Z': 1.0085705,
'03 18:00 Z': 1.0085869,
'03 18:30 Z': 1.00854,
'03 19:00 Z': 1.0086779,
'03 19:30 Z': 1.0091045,
'03 20:00 Z': 1.0089839,
'03 20:30 Z': 1.0087836,
'03 21:00 Z': 1.0084426,
'03 21:30 Z': 1.0083627,
'03 22:00 Z': 1.0083545,
'03 22:30 Z': 1.0081189,
'03 23:00 Z': 1.008008,
'03 23:30 Z': 1.0080989,
'04 00:00 Z': 1.0082725,
'04 00:30 Z': 1.0085784,
'04 01:00 Z': 1.0084722,
'04 01:30 Z': 1.0082151,
'04 02:00 Z': 1.0083445,
'04 02:30 Z': 1.0083744,
'04 03:00 Z': 1.008494,
'04 03:30 Z': 1.0083402,
'04 04:00 Z': 1.0086225,
'04 04:30 Z': 1.0085578,
'04 05:00 Z': 1.0085469,
'04 05:30 Z': 1.0085168,
'04 06:00 Z': 1.0083133,
'04 06:30 Z': 1.008354,
'04 07:00 Z': 1.0080343,
'04 07:30 Z': 1.0078609,
'04 08:00 Z': 1.0077118,
'04 08:30 Z': 1.0076633,
'04 09:00 Z': 1.0078324,
'04 09:30 Z': 1.0079337,
'04 10:00 Z': 1.0078767,
'04 10:30 Z': 1.0077452,
'04 11:00 Z': 1.0077264,
'04 11:30 Z': 1.0077552,
'04 12:00 Z': 1.0079622,
'04 12:30 Z': 1.0079735,
'04 13:00 Z': 1.0077815,
'04 13:30 Z': 1.0075161,
'04 14:00 Z': 1.007524,
'04 14:30 Z': 1.0074969,
'04 15:00 Z': 1.0075353,
'04 15:30 Z': 1.0074886,
'04 16:00 Z': 1.0075258,
'04 16:30 Z': 1.0074835,
'04 17:00 Z': 1.0074392,
'04 17:30 Z': 1.0074277,
'04 18:00 Z': 1.0074601,
'04 18:30 Z': 1.0073649,
'04 19:00 Z': 1.0076154,
'04 19:30 Z': 1.0078464,
'04 20:00 Z': 1.008319,
'04 20:30 Z': 1.0084435,
'04 21:00 Z': 1.0082223,
'04 21:30 Z': 1.0078084,
'04 22:00 Z': 1.0078666,
'04 22:30 Z': 1.0076084,
'04 23:00 Z': 1.0071537,
'04 23:30 Z': 1.0072501,
'05 00:00 Z': 1.0074637,
'05 00:30 Z': 1.0076518,
'05 01:00 Z': 1.0077497,
'05 01:30 Z': 1.0078236,
'05 02:00 Z': 1.0080947,
'05 02:30 Z': 1.0082681,
'05 03:00 Z': 1.008178,
'05 03:30 Z': 1.0085821,
'05 04:00 Z': 1.0088516,
'05 04:30 Z': 1.0091958,
'05 05:00 Z': 1.0094026,
'05 05:30 Z': 1.009771,
'05 06:00 Z': 1.0099064,
'05 06:30 Z': 1.0099679,
'05 07:00 Z': 1.0100328,
'05 07:30 Z': 1.0102772,
'05 08:00 Z': 1.0098787,
'05 08:30 Z': 1.0094505,
'05 09:00 Z': 1.0093024,
'05 09:30 Z': 1.0090217,
'05 10:00 Z': 1.0086161,
'05 10:30 Z': 1.008508,
'05 11:00 Z': 1.0084053,
'05 11:30 Z': 1.0083258,
'05 12:00 Z': 1.0083341,
'05 12:30 Z': 1.0083884,
'05 13:00 Z': 1.0081797,
'05 13:30 Z': 1.008185,
'05 14:00 Z': 1.0083037,
'05 14:30 Z': 1.0085969,
'05 15:00 Z': 1.0086311,
'05 15:30 Z': 1.0088282,
'05 16:00 Z': 1.0089129,
'05 16:30 Z': 1.0089011,
'05 17:00 Z': 1.0091581,
'05 17:30 Z': 1.0093117,
'05 18:00 Z': 1.0093667,
'05 18:30 Z': 1.0093544,
'05 19:00 Z': 1.0094301,
'05 19:30 Z': 1.009992,
'05 20:00 Z': 1.0103823,
'05 20:30 Z': 1.0109127,
'05 21:00 Z': 1.010035,
'05 21:30 Z': 1.0101889,
'05 22:00 Z': 1.0107642,
'05 22:30 Z': 1.0109174,
'05 23:00 Z': 1.0102249,
'05 23:30 Z': 1.0107054,
'06 00:00 Z': 1.0106533,
'06 00:30 Z': 1.0111094,
'06 01:00 Z': 1.0107406,
'06 01:30 Z': 1.0104921,
'06 02:00 Z': 1.0107186,
'06 02:30 Z': 1.0102395,
'06 03:00 Z': 1.0099277,
'06 03:30 Z': 1.0100692,
'06 04:00 Z': 1.0105448,
'06 04:30 Z': 1.0108994,
'06 05:00 Z': 1.0112656,
'06 05:30 Z': 1.0112129,
'06 06:00 Z': 1.0109017,
'06 06:30 Z': 1.0108106,
'06 07:00 Z': 1.0118654,
'06 07:30 Z': 1.0118773,
'06 08:00 Z': 1.0118998,
'06 08:30 Z': 1.0118286,
'06 09:00 Z': 1.0114636,
'06 09:30 Z': 1.0113753,
'06 10:00 Z': 1.0108123,
'06 10:30 Z': 1.0108257,
'06 11:00 Z': 1.0111401,
'06 11:30 Z': 1.0104959,
'06 12:00 Z': 1.0105868,
'06 12:30 Z': 1.0107975,
'06 13:00 Z': 1.0108349,
'06 13:30 Z': 1.0106735,
'06 14:00 Z': 1.0109027,
'06 14:30 Z': 1.0107259,
'06 15:00 Z': 1.0105738,
'06 15:30 Z': 1.0104715,
'06 16:00 Z': 1.0102855,
'06 16:30 Z': 1.0102113,
'06 17:00 Z': 1.0104735,
'06 17:30 Z': 1.0102662,
'06 18:00 Z': 1.0103076,
'06 18:30 Z': 1.010219,
'06 19:00 Z': 1.0105684,
'06 19:30 Z': 1.0104739,
'06 20:00 Z': 1.010941,
'06 20:30 Z': 1.0099562,
'06 21:00 Z': 1.0102585,
'06 21:30 Z': 1.0096089,
'06 22:00 Z': 1.0094418,
'06 22:30 Z': 1.0092733,
'06 23:00 Z': 1.0093036,
'06 23:30 Z': 1.0090416,
'07 00:00 Z': 1.0089476,
'07 00:30 Z': 1.0094423,
'07 01:00 Z': 1.0093081,
'07 01:30 Z': 1.009032,
'07 02:00 Z': 1.0088359,
'07 02:30 Z': 1.0087307,
'07 03:00 Z': 1.0082998,
'07 03:30 Z': 1.0081821,
'07 04:00 Z': 1.0083787,
'07 04:30 Z': 1.0085828,
'07 05:00 Z': 1.0089264,
'07 05:30 Z': 1.0089138,
'07 06:00 Z': 1.0100338,
'07 06:30 Z': 1.0105578,
'07 07:00 Z': 1.0114599,
'07 07:30 Z': 1.0121031,
'07 08:00 Z': 1.0125464,
'07 08:30 Z': 1.0126748,
'07 09:00 Z': 1.0130635,
'07 09:30 Z': 1.0126432,
'07 10:00 Z': 1.0127258,
'07 10:30 Z': 1.012917,
'07 11:00 Z': 1.0129653,
'07 11:30 Z': 1.0126203,
'07 12:00 Z': 1.0126972,
'07 12:30 Z': 1.0124093,
'07 13:00 Z': 1.0124132,
'07 13:30 Z': 1.0127096,
'07 14:00 Z': 1.0120346,
'07 14:30 Z': 1.0114261,
'07 15:00 Z': 1.010202,
'07 15:30 Z': 1.0104746,
'07 16:00 Z': 1.0103689,
'07 16:30 Z': 1.0105801,
'07 17:00 Z': 1.0103761,
'07 17:30 Z': 1.0103632,
'07 18:00 Z': 1.0101761,
'07 18:30 Z': 1.0099219,
'07 19:00 Z': 1.0102527,
'07 19:30 Z': 1.0106257,
'07 20:00 Z': 1.0105392,
'07 20:30 Z': 1.0097198,
'07 21:00 Z': 1.0095065,
'07 21:30 Z': 1.0093797,
'07 22:00 Z': 1.0091553,
'07 22:30 Z': 1.0086934,
'07 23:00 Z': 1.0079662,
'07 23:30 Z': 1.0076438,
'08 00:00 Z': 1.0076535,
'08 00:30 Z': 1.0076768,
'08 01:00 Z': 1.0077206,
'08 01:30 Z': 1.0078967,
'08 02:00 Z': 1.0077579,
'08 02:30 Z': 1.0077318,
'08 03:00 Z': 1.0073762,
'08 03:30 Z': 1.0070826,
'08 04:00 Z': 1.0073224,
'08 04:30 Z': 1.0074471,
'08 05:00 Z': 1.0082624,
'08 05:30 Z': 1.0082127,
'08 06:00 Z': 1.0087922,
'08 06:30 Z': 1.0095369,
'08 07:00 Z': 1.0105027,
'08 07:30 Z': 1.0109787,
'08 08:00 Z': 1.0112371,
'08 08:30 Z': 1.0112154,
'08 09:00 Z': 1.0112355,
'08 09:30 Z': 1.0112122,
'08 10:00 Z': 1.0110116,
'08 10:30 Z': 1.0110316,
'08 11:00 Z': 1.0109992,
'08 11:30 Z': 1.0106834,
'08 12:00 Z': 1.0108619,
'08 12:30 Z': 1.0112469,
'08 13:00 Z': 1.0112956,
'08 13:30 Z': 1.0109607,
'08 14:00 Z': 1.0111381,
'08 14:30 Z': 1.011086,
'08 15:00 Z': 1.0109206,
'08 15:30 Z': 1.01085,
'08 16:00 Z': 1.0106889,
'08 16:30 Z': 1.009673,
'08 17:00 Z': 1.0095871,
'08 17:30 Z': 1.0096046,
'08 18:00 Z': 1.0095646,
'08 18:30 Z': 1.0093896,
'08 19:00 Z': 1.0085843,
'08 19:30 Z': 1.0088416,
'08 20:00 Z': 1.0090997,
'08 20:30 Z': 1.008623,
'08 21:00 Z': 1.0090026,
'08 21:30 Z': 1.0083037,
'08 22:00 Z': 1.0082995,
'08 22:30 Z': 1.0083492,
'08 23:00 Z': 1.00758,
'08 23:30 Z': 1.0072869,
'09 00:00 Z': 1.0073747,
'09 00:30 Z': 1.0075476,
'09 01:00 Z': 1.0074216,
'09 01:30 Z': 1.0072658,
'09 02:00 Z': 1.0075234,
'09 02:30 Z': 1.007405,
'09 03:00 Z': 1.0075507,
'09 03:30 Z': 1.0075533,
'09 04:00 Z': 1.007556,
'09 04:30 Z': 1.0075172,
'09 05:00 Z': 1.0078945,
'09 05:30 Z': 1.0083229,
'09 06:00 Z': 1.0084768,
'09 06:30 Z': 1.0088933,
'09 07:00 Z': 1.009201,
'09 07:30 Z': 1.0095005,
'09 08:00 Z': 1.0093731,
'09 08:30 Z': 1.0094108,
'09 09:00 Z': 1.0089569,
'09 09:30 Z': 1.0087811,
'09 10:00 Z': 1.0089227,
'09 10:30 Z': 1.0088245,
'09 11:00 Z': 1.0088148,
'09 11:30 Z': 1.008692,
'09 12:00 Z': 1.0083509,
'09 12:30 Z': 1.0082012,
'09 13:00 Z': 1.008615,
'09 13:30 Z': 1.0087153,
'09 14:00 Z': 1.0088018,
'09 14:30 Z': 1.008638,
'09 15:00 Z': 1.0083372,
'09 15:30 Z': 1.0083069,
'09 16:00 Z': 1.0084246,
'09 16:30 Z': 1.0084401,
'09 17:00 Z': 1.0083803,
'09 17:30 Z': 1.0083158,
'09 18:00 Z': 1.0083019,
'09 18:30 Z': 1.0082681,
'09 19:00 Z': 1.0086791,
'09 19:30 Z': 1.0088152,
'09 20:00 Z': 1.008462,
'09 20:30 Z': 1.0086303,
'09 21:00 Z': 1.0083709,
'09 21:30 Z': 1.0080925,
'09 22:00 Z': 1.008196,
'09 22:30 Z': 1.0082954,
'09 23:00 Z': 1.007814,
'09 23:30 Z': 1.0076733,
'10 00:00 Z': 1.0077448,
'10 00:30 Z': 1.0078575,
'10 01:00 Z': 1.0076815,
'10 01:30 Z': 1.0076985,
'10 02:00 Z': 1.0079234,
'10 02:30 Z': 1.008096,
'10 03:00 Z': 1.0083202,
'10 03:30 Z': 1.0083081,
'10 04:00 Z': 1.0082224,
'10 04:30 Z': 1.0083089,
'10 05:00 Z': 1.008285,
'10 05:30 Z': 1.0081074,
'10 06:00 Z': 1.008145,
'10 06:30 Z': 1.0081478,
'10 07:00 Z': 1.0085207,
'10 07:30 Z': 1.008638,
'10 08:00 Z': 1.0089735,
'10 08:30 Z': 1.0085956,
'10 09:00 Z': 1.0081766,
'10 09:30 Z': 1.0083069,
'10 10:00 Z': 1.0084546,
'10 10:30 Z': 1.0084182,
'10 11:00 Z': 1.0084772,
'10 11:30 Z': 1.0084476,
'10 12:00 Z': 1.0086548,
'10 12:30 Z': 1.0083926,
'10 13:00 Z': 1.0083534,
'10 13:30 Z': 1.0083499,
'10 14:00 Z': 1.0082509,
'10 14:30 Z': 1.0080876,
'10 15:00 Z': 1.0077919,
'10 15:30 Z': 1.0077768,
'10 16:00 Z': 1.0079049,
'10 16:30 Z': 1.008172,
'10 17:00 Z': 1.0081928,
'10 17:30 Z': 1.0083123,
'10 18:00 Z': 1.0081094,
'10 18:30 Z': 1.0080844,
'10 19:00 Z': 1.0081186,
'10 19:30 Z': 1.0083248,
'10 20:00 Z': 1.0084875,
'10 20:30 Z': 1.0086776,
'10 21:00 Z': 1.0084087,
'10 21:30 Z': 1.0085619,
'10 22:00 Z': 1.0088641,
'10 22:30 Z': 1.008584,
'10 23:00 Z': 1.0078482,
'10 23:30 Z': 1.0077002,
'11 00:00 Z': 1.0078128,
'11 00:30 Z': 1.0078096,
'11 01:00 Z': 1.0078322,
'11 01:30 Z': 1.0077404,
'11 02:00 Z': 1.0080472,
'11 02:30 Z': 1.0080737,
'11 03:00 Z': 1.0082717,
'11 03:30 Z': 1.0080359,
'11 04:00 Z': 1.0081015,
'11 04:30 Z': 1.0081196,
'11 05:00 Z': 1.0081221,
'11 05:30 Z': 1.0081192,
'11 06:00 Z': 1.0082272,
'11 06:30 Z': 1.0083615,
'11 07:00 Z': 1.0083953,
'11 07:30 Z': 1.0082104,
'11 08:00 Z': 1.0080452,
'11 08:30 Z': 1.0080709,
'11 09:00 Z': 1.0083086,
'11 09:30 Z': 1.0084516,
'11 10:00 Z': 1.0083963,
'11 10:30 Z': 1.0083367,
'11 11:00 Z': 1.0082702,
'11 11:30 Z': 1.0083903,
'11 12:00 Z': 1.0082528,
'11 12:30 Z': 1.0089749,
'11 13:00 Z': 1.0089816,
'11 13:30 Z': 1.0085274,
'11 14:00 Z': 1.00862,
'11 14:30 Z': 1.0087399,
'11 15:00 Z': 1.0086057,
'11 15:30 Z': 1.0086534,
'11 16:00 Z': 1.0086168,
'11 16:30 Z': 1.0086067,
'11 17:00 Z': 1.0087535,
'11 17:30 Z': 1.0087682,
'11 18:00 Z': 1.0086314,
'11 18:30 Z': 1.0086154,
'11 19:00 Z': 1.0085857,
'11 19:30 Z': 1.0086948,
'11 20:00 Z': 1.008908,
'11 20:30 Z': 1.0088808,
'11 21:00 Z': 1.0088302,
'11 21:30 Z': 1.0084153,
'11 22:00 Z': 1.0082934,
'11 22:30 Z': 1.0080665,
'11 23:00 Z': 1.0081635,
'11 23:30 Z': 1.0080707,
'12 00:00 Z': 1.0080309,
'12 00:30 Z': 1.0082187,
'12 01:00 Z': 1.008131,
'12 01:30 Z': 1.0080181,
'12 02:00 Z': 1.0080337,
'12 02:30 Z': 1.00803,
'12 03:00 Z': 1.0081513,
'12 03:30 Z': 1.0080941,
'12 04:00 Z': 1.0081606,
'12 04:30 Z': 1.0081944,
'12 05:00 Z': 1.0088676,
'12 05:30 Z': 1.0091192,
'12 06:00 Z': 1.00946,
'12 06:30 Z': 1.0099397,
'12 07:00 Z': 1.0097607,
'12 07:30 Z': 1.0099143,
'12 08:00 Z': 1.0099882,
'12 08:30 Z': 1.0101663,
'12 09:00 Z': 1.0100989,
'12 09:30 Z': 1.0100498,
'12 10:00 Z': 1.0102238,
'12 10:30 Z': 1.0101902,
'12 11:00 Z': 1.0104388,
'12 11:30 Z': 1.0103466,
'12 12:00 Z': 1.0103874,
'12 12:30 Z': 1.0105873,
'12 13:00 Z': 1.0104297,
'12 13:30 Z': 1.0103483,
'12 14:00 Z': 1.0104285,
'12 14:30 Z': 1.0102623,
'12 15:00 Z': 1.0098553,
'12 15:30 Z': 1.0099871,
'12 16:00 Z': 1.0101949,
'12 16:30 Z': 1.0105042,
'12 17:00 Z': 1.0105169,
'12 17:30 Z': 1.0104429,
'12 18:00 Z': 1.0102748,
'12 18:30 Z': 1.0101366,
'12 19:00 Z': 1.0097535,
'12 19:30 Z': 1.0096522,
'12 20:00 Z': 1.0101874,
'12 20:30 Z': 1.0100677,
'12 21:00 Z': 1.0099175,
'12 21:30 Z': 1.0094775,
'12 22:00 Z': 1.0090722,
'12 22:30 Z': 1.0087973,
'12 23:00 Z': 1.0082542,
'12 23:30 Z': 1.0081826,
'13 00:00 Z': 1.0080184,
'13 00:30 Z': 1.0081357,
'13 01:00 Z': 1.0081383,
'13 01:30 Z': 1.008093,
'13 02:00 Z': 1.0079196,
'13 02:30 Z': 1.0076486,
'13 03:00 Z': 1.0076115,
'13 03:30 Z': 1.007641,
'13 04:00 Z': 1.007784,
'13 04:30 Z': 1.007712,
'13 05:00 Z': 1.0084281,
'13 05:30 Z': 1.0083963,
'13 06:00 Z': 1.0086011,
'13 06:30 Z': 1.0092481,
'13 07:00 Z': 1.0102015,
'13 07:30 Z': 1.0099043,
'13 08:00 Z': 1.0096592,
'13 08:30 Z': 1.0094544,
'13 09:00 Z': 1.0094819,
'13 09:30 Z': 1.0095396,
'13 10:00 Z': 1.0095149,
'13 10:30 Z': 1.0094853,
'13 11:00 Z': 1.0094199,
'13 11:30 Z': 1.0094278,
'13 12:00 Z': 1.009477,
'13 12:30 Z': 1.0094745,
'13 13:00 Z': 1.0095002,
'13 13:30 Z': 1.0094269,
'13 14:00 Z': 1.0092821,
'13 14:30 Z': 1.0091204,
'13 15:00 Z': 1.008699,
'13 15:30 Z': 1.008556,
'13 16:00 Z': 1.0083906,
'13 16:30 Z': 1.0086713,
'13 17:00 Z': 1.0085893,
'13 17:30 Z': 1.0087586,
'13 18:00 Z': 1.0088827,
'13 18:30 Z': 1.0090172,
'13 19:00 Z': 1.0096417,
'13 19:30 Z': 1.0097006,
'13 20:00 Z': 1.009509,
'13 20:30 Z': 1.0088877,
'13 21:00 Z': 1.0088831,
'13 21:30 Z': 1.0086162,
'13 22:00 Z': 1.0087387,
'13 22:30 Z': 1.0084554,
'13 23:00 Z': 1.0073519,
'13 23:30 Z': 1.0074112,
'14 00:00 Z': 1.0073582,
'14 00:30 Z': 1.007389,
'14 01:00 Z': 1.007377,
'14 01:30 Z': 1.0070562,
'14 02:00 Z': 1.0072726,
'14 02:30 Z': 1.0073624,
'14 03:00 Z': 1.0074027,
'14 03:30 Z': 1.0074182,
'14 04:00 Z': 1.0075,
'14 04:30 Z': 1.0076885,
'14 05:00 Z': 1.0082274,
'14 05:30 Z': 1.0085656,
'14 06:00 Z': 1.0090735,
'14 06:30 Z': 1.0095514,
'14 07:00 Z': 1.0096342,
'14 07:30 Z': 1.0097088,
'14 08:00 Z': 1.009549,
'14 08:30 Z': 1.009467,
'14 09:00 Z': 1.009685,
'14 09:30 Z': 1.0092438,
'14 10:00 Z': 1.0092259,
'14 10:30 Z': 1.0093738,
'14 11:00 Z': 1.0095233,
'14 11:30 Z': 1.0095454,
'14 12:00 Z': 1.0097741,
'14 12:30 Z': 1.00974,
'14 13:00 Z': 1.0097268,
'14 13:30 Z': 1.0095149,
'14 14:00 Z': 1.009867,
'14 14:30 Z': 1.0094392,
'14 15:00 Z': 1.0088428,
'14 15:30 Z': 1.008586,
'14 16:00 Z': 1.0082416,
'14 16:30 Z': 1.0082567,
'14 17:00 Z': 1.0084014,
'14 17:30 Z': 1.0084579,
'14 18:00 Z': 1.0085033,
'14 18:30 Z': 1.0084037,
'14 19:00 Z': 1.0086966,
'14 19:30 Z': 1.0087338,
'14 20:00 Z': 1.0087206,
'14 20:30 Z': 1.0084978,
'14 21:00 Z': 1.0088225,
'14 21:30 Z': 1.0085746,
'14 22:00 Z': 1.0085227,
'14 22:30 Z': 1.0085696,
'14 23:00 Z': 1.0081114,
'14 23:30 Z': 1.0082585,
'15 00:00 Z': 1.0084468,
'15 00:30 Z': 1.0085539,
'15 01:00 Z': 1.0087152,
'15 01:30 Z': 1.0085456,
'15 02:00 Z': 1.0088747,
'15 02:30 Z': 1.0085864,
'15 03:00 Z': 1.008691,
'15 03:30 Z': 1.0086073,
'15 04:00 Z': 1.0087672,
'15 04:30 Z': 1.0086919,
'15 05:00 Z': 1.0094889,
'15 05:30 Z': 1.009397,
'15 06:00 Z': 1.0092631,
'15 06:30 Z': 1.0094455,
'15 07:00 Z': 1.009768,
'15 07:30 Z': 1.0095556,
'15 08:00 Z': 1.009248,
'15 08:30 Z': 1.0092221,
'15 09:00 Z': 1.009421,
'15 09:30 Z': 1.0094955,
'15 10:00 Z': 1.0096972,
'15 10:30 Z': 1.0096224,
'15 11:00 Z': 1.0094485,
'15 11:30 Z': 1.0093878,
'15 12:00 Z': 1.009418,
'15 12:30 Z': 1.0093223,
'15 13:00 Z': 1.0095196,
'15 13:30 Z': 1.0096683,
'15 14:00 Z': 1.0099721,
'15 14:30 Z': 1.0100251,
'15 15:00 Z': 1.0092716,
'15 15:30 Z': 1.009036,
'15 16:00 Z': 1.0089467,
'15 16:30 Z': 1.0089463,
'15 17:00 Z': 1.0090412,
'15 17:30 Z': 1.0090736,
'15 18:00 Z': 1.00944,
'15 18:30 Z': 1.0093359,
'15 19:00 Z': 1.0093101,
'15 19:30 Z': 1.0093025,
'15 20:00 Z': 1.0096133,
'15 20:30 Z': 1.0096211,
'15 21:00 Z': 1.0099465,
'15 21:30 Z': 1.0097935,
'15 22:00 Z': 1.0096293,
'15 22:30 Z': 1.0095397,
'15 23:00 Z': 1.0085975,
'15 23:30 Z': 1.0088919,
'16 00:00 Z': 1.0093003,
'16 00:30 Z': 1.0091644,
'16 01:00 Z': 1.0093439,
'16 01:30 Z': 1.0089403,
'16 02:00 Z': 1.0089995,
'16 02:30 Z': 1.0088571,
'16 03:00 Z': 1.0089198,
'16 03:30 Z': 1.0088846,
'16 04:00 Z': 1.009136,
'16 04:30 Z': 1.0091383,
'16 05:00 Z': 1.0104631,
'16 05:30 Z': 1.0108596,
'16 06:00 Z': 1.0109496,
'16 06:30 Z': 1.0112271,
'16 07:00 Z': 1.0108366,
'16 07:30 Z': 1.0108469,
'16 08:00 Z': 1.0110686,
'16 08:30 Z': 1.0111933,
'16 09:00 Z': 1.0108295,
'16 09:30 Z': 1.0110608,
'16 10:00 Z': 1.0113696,
'16 10:30 Z': 1.0111558,
'16 11:00 Z': 1.0108089,
'16 11:30 Z': 1.0107112,
'16 12:00 Z': 1.0109321,
'16 12:30 Z': 1.0111596,
'16 13:00 Z': 1.0115009,
'16 13:30 Z': 1.0117554,
'16 14:00 Z': 1.0117494,
'16 14:30 Z': 1.011113,
'16 15:00 Z': 1.0102397,
'16 15:30 Z': 1.0101216,
'16 16:00 Z': 1.0105234,
'16 16:30 Z': 1.0104224,
'16 17:00 Z': 1.0107924,
'16 17:30 Z': 1.0107367,
'16 18:00 Z': 1.0106008,
'16 18:30 Z': 1.0104396,
'16 19:00 Z': 1.0100287,
'16 19:30 Z': 1.0099098,
'16 20:00 Z': 1.0095084,
'16 20:30 Z': 1.0097691,
'16 21:00 Z': 1.0108544,
'16 21:30 Z': 1.0110211,
'16 22:00 Z': 1.0110844,
'16 22:30 Z': 1.0103196,
'16 23:00 Z': 1.0084574,
'16 23:30 Z': 1.0085826,
'17 00:00 Z': 1.0087178,
'17 00:30 Z': 1.0086535,
'17 01:00 Z': 1.0086202,
'17 01:30 Z': 1.0084393,
'17 02:00 Z': 1.0085651,
'17 02:30 Z': 1.0085706,
'17 03:00 Z': 1.0087318,
'17 03:30 Z': 1.0084903,
'17 04:00 Z': 1.0085075,
'17 04:30 Z': 1.0083716,
'17 05:00 Z': 1.0085026,
'17 05:30 Z': 1.0084225,
'17 06:00 Z': 1.0087984,
'17 06:30 Z': 1.0091216,
'17 07:00 Z': 1.0100362,
'17 07:30 Z': 1.0103256,
'17 08:00 Z': 1.0108892,
'17 08:30 Z': 1.0100997,
'17 09:00 Z': 1.0102893,
'17 09:30 Z': 1.0102537,
'17 10:00 Z': 1.0100145,
'17 10:30 Z': 1.0096312,
'17 11:00 Z': 1.0096762,
'17 11:30 Z': 1.0097694,
'17 12:00 Z': 1.0097883,
'17 12:30 Z': 1.0097121,
'17 13:00 Z': 1.0095967,
'17 13:30 Z': 1.0096,
'17 14:00 Z': 1.0095189,
'17 14:30 Z': 1.0093106,
'17 15:00 Z': 1.0094979,
'17 15:30 Z': 1.0096082,
'17 16:00 Z': 1.0096139,
'17 16:30 Z': 1.0095993,
'17 17:00 Z': 1.0095141,
'17 17:30 Z': 1.0096767,
'17 18:00 Z': 1.0100169,
'17 18:30 Z': 1.0098427,
'17 19:00 Z': 1.0098767,
'17 19:30 Z': 1.010059,
'17 20:00 Z': 1.0104365,
'17 20:30 Z': 1.0106725,
'17 21:00 Z': 1.0108108,
'17 21:30 Z': 1.0105383,
'17 22:00 Z': 1.0099454,
'17 22:30 Z': 1.0099006,
'17 23:00 Z': 1.0091245,
'17 23:30 Z': 1.009023,
'18 00:00 Z': 1.0089287,
'18 00:30 Z': 1.0092236,
'18 01:00 Z': 1.0093606,
'18 01:30 Z': 1.0090311,
'18 02:00 Z': 1.0090783,
'18 02:30 Z': 1.0088832,
'18 03:00 Z': 1.0087686,
'18 03:30 Z': 1.0085588,
'18 04:00 Z': 1.0085671,
'18 04:30 Z': 1.0088504,
'18 05:00 Z': 1.0089818,
'18 05:30 Z': 1.0091402,
'18 06:00 Z': 1.0092878,
'18 06:30 Z': 1.0092883,
'18 07:00 Z': 1.0093075,
'18 07:30 Z': 1.0094417,
'18 08:00 Z': 1.0099211,
'18 08:30 Z': 1.0102806,
'18 09:00 Z': 1.0099534,
'18 09:30 Z': 1.0096946,
'18 10:00 Z': 1.0098307,
'18 10:30 Z': 1.0098368,
'18 11:00 Z': 1.0104615,
'18 11:30 Z': 1.0104706,
'18 12:00 Z': 1.0104231,
'18 12:30 Z': 1.010263,
'18 13:00 Z': 1.0097062,
'18 13:30 Z': 1.0091216,
'18 14:00 Z': 1.0091144,
'18 14:30 Z': 1.0090204,
'18 15:00 Z': 1.0090062,
'18 15:30 Z': 1.009062,
'18 16:00 Z': 1.009077,
'18 16:30 Z': 1.0091397,
'18 17:00 Z': 1.0097058,
'18 17:30 Z': 1.0096021,
'18 18:00 Z': 1.0095045,
'18 18:30 Z': 1.009278,
'18 19:00 Z': 1.0094018,
'18 19:30 Z': 1.0095371,
'18 20:00 Z': 1.010454,
'18 20:30 Z': 1.0104428,
'18 21:00 Z': 1.0103504,
'18 21:30 Z': 1.0098373,
'18 22:00 Z': 1.0097609,
'18 22:30 Z': 1.0091725,
'18 23:00 Z': 1.0092307,
'18 23:30 Z': 1.0089084,
'19 00:00 Z': 1.0089413,
'19 00:30 Z': 1.0091835,
'19 01:00 Z': 1.0090729,
'19 01:30 Z': 1.0090415,
'19 02:00 Z': 1.0091166,
'19 02:30 Z': 1.0091998,
'19 03:00 Z': 1.0092197,
'19 03:30 Z': 1.0093098,
'19 04:00 Z': 1.009352,
'19 04:30 Z': 1.0092579,
'19 05:00 Z': 1.0101821,
'19 05:30 Z': 1.0103104,
'19 06:00 Z': 1.0102489,
'19 06:30 Z': 1.0106198,
'19 07:00 Z': 1.0107574,
'19 07:30 Z': 1.0104167,
'19 08:00 Z': 1.0098747,
'19 08:30 Z': 1.0096905,
'19 09:00 Z': 1.0099495,
'19 09:30 Z': 1.0098789,
'19 10:00 Z': 1.0099154,
'19 10:30 Z': 1.0099658,
'19 11:00 Z': 1.0099707,
'19 11:30 Z': 1.0099576,
'19 12:00 Z': 1.010128,
'19 12:30 Z': 1.0100442,
'19 13:00 Z': 1.0094939,
'19 13:30 Z': 1.0092149,
'19 14:00 Z': 1.0092031,
'19 14:30 Z': 1.0090317,
'19 15:00 Z': 1.0084826,
'19 15:30 Z': 1.0085075,
'19 16:00 Z': 1.0089604,
'19 16:30 Z': 1.0091894,
'19 17:00 Z': 1.0093619,
'19 17:30 Z': 1.0090247,
'19 18:00 Z': 1.0093282,
'19 18:30 Z': 1.009753,
'19 19:00 Z': 1.0096893,
'19 19:30 Z': 1.0097091,
'19 20:00 Z': 1.0098664,
'19 20:30 Z': 1.0099734,
'19 21:00 Z': 1.0096879,
'19 21:30 Z': 1.0096497,
'19 22:00 Z': 1.0096533,
'19 22:30 Z': 1.0090631,
'19 23:00 Z': 1.0082088,
'19 23:30 Z': 1.0083949,
'20 00:00 Z': 1.0084041,
'20 00:30 Z': 1.0087802,
'20 01:00 Z': 1.0086678,
'20 01:30 Z': 1.0082111,
'20 02:00 Z': 1.0082446,
'20 02:30 Z': 1.0081127,
'20 03:00 Z': 1.0081569,
'20 03:30 Z': 1.0082805,
'20 04:00 Z': 1.0086411,
'20 04:30 Z': 1.0086687,
'20 05:00 Z': 1.0090899,
'20 05:30 Z': 1.0089928,
'20 06:00 Z': 1.0086518,
'20 06:30 Z': 1.0087893,
'20 07:00 Z': 1.0093187,
'20 07:30 Z': 1.0097887,
'20 08:00 Z': 1.0104319,
'20 08:30 Z': 1.0106274,
'20 09:00 Z': 1.0112343,
'20 09:30 Z': 1.011167,
'20 10:00 Z': 1.0114165,
'20 10:30 Z': 1.0111338,
'20 11:00 Z': 1.010521,
'20 11:30 Z': 1.0103233,
'20 12:00 Z': 1.0103946,
'20 12:30 Z': 1.0104275,
'20 13:00 Z': 1.0099218,
'20 13:30 Z': 1.0096684,
'20 14:00 Z': 1.0099192,
'20 14:30 Z': 1.0099613,
'20 15:00 Z': 1.0092149,
'20 15:30 Z': 1.0088347,
'20 16:00 Z': 1.0087344,
'20 16:30 Z': 1.0088101,
'20 17:00 Z': 1.0090109,
'20 17:30 Z': 1.0091406,
'20 18:00 Z': 1.0091677,
'20 18:30 Z': 1.009088,
'20 19:00 Z': 1.0089724,
'20 19:30 Z': 1.0089084,
'20 20:00 Z': 1.0088637,
'20 20:30 Z': 1.0090044,
'20 21:00 Z': 1.00898,
'20 21:30 Z': 1.008778,
'20 22:00 Z': 1.0092738,
'20 22:30 Z': 1.0088321,
'20 23:00 Z': 1.0086138,
'20 23:30 Z': 1.0087666,
'21 00:00 Z': 1.008916,
'21 00:30 Z': 1.0088876,
'21 01:00 Z': 1.008798,
'21 01:30 Z': 1.0086917,
'21 02:00 Z': 1.0086036,
'21 02:30 Z': 1.008549,
'21 03:00 Z': 1.0085692,
'21 03:30 Z': 1.0085734,
'21 04:00 Z': 1.008803,
'21 04:30 Z': 1.008651,
'21 05:00 Z': 1.0091131,
'21 05:30 Z': 1.0093649,
'21 06:00 Z': 1.0092666,
'21 06:30 Z': 1.0095669,
'21 07:00 Z': 1.0099468,
'21 07:30 Z': 1.0100408,
'21 08:00 Z': 1.0103858,
'21 08:30 Z': 1.0103047,
'21 09:00 Z': 1.0097722,
'21 09:30 Z': 1.009408,
'21 10:00 Z': 1.0090958,
'21 10:30 Z': 1.0092026,
'21 11:00 Z': 1.009095,
'21 11:30 Z': 1.0091942,
'21 12:00 Z': 1.009319,
'21 12:30 Z': 1.0092943,
'21 13:00 Z': 1.0088583,
'21 13:30 Z': 1.0086129,
'21 14:00 Z': 1.0085077,
'21 14:30 Z': 1.0085493,
'21 15:00 Z': 1.0086198,
'21 15:30 Z': 1.0085331,
'21 16:00 Z': 1.0085677,
'21 16:30 Z': 1.0085762,
'21 17:00 Z': 1.008582,
'21 17:30 Z': 1.0088252,
'21 18:00 Z': 1.0087601,
'21 18:30 Z': 1.0087681,
'21 19:00 Z': 1.0087623,
'21 19:30 Z': 1.0089608,
'21 20:00 Z': 1.0089899,
'21 20:30 Z': 1.0092348,
'21 21:00 Z': 1.0088337,
'21 21:30 Z': 1.0088066,
'21 22:00 Z': 1.0086688,
'21 22:30 Z': 1.008509,
'21 23:00 Z': 1.0089221,
'21 23:30 Z': 1.0087813,
'22 00:00 Z': 1.0086708,
'22 00:30 Z': 1.0089142,
'22 01:00 Z': 1.0084834,
'22 01:30 Z': 1.0083709,
'22 02:00 Z': 1.0083924,
'22 02:30 Z': 1.0084264,
'22 03:00 Z': 1.0084972,
'22 03:30 Z': 1.0084493,
'22 04:00 Z': 1.0086494,
'22 04:30 Z': 1.0087473,
'22 05:00 Z': 1.0089215,
'22 05:30 Z': 1.008987,
'22 06:00 Z': 1.009001,
'22 06:30 Z': 1.0098085,
'22 07:00 Z': 1.0103818,
'22 07:30 Z': 1.010856,
'22 08:00 Z': 1.0110385,
'22 08:30 Z': 1.0109958,
'22 09:00 Z': 1.0113967,
'22 09:30 Z': 1.0113119,
'22 10:00 Z': 1.0109943,
'22 10:30 Z': 1.0107443,
'22 11:00 Z': 1.0108671,
'22 11:30 Z': 1.0110165,
'22 12:00 Z': 1.0110616,
'22 12:30 Z': 1.0110967,
'22 13:00 Z': 1.0109266,
'22 13:30 Z': 1.0106527,
'22 14:00 Z': 1.0106229,
'22 14:30 Z': 1.0106048,
'22 15:00 Z': 1.0102269,
'22 15:30 Z': 1.0105096,
'22 16:00 Z': 1.010854,
'22 16:30 Z': 1.0107033,
'22 17:00 Z': 1.0103635,
'22 17:30 Z': 1.0102422,
'22 18:00 Z': 1.0102536,
'22 18:30 Z': 1.0103536,
'22 19:00 Z': 1.0105162,
'22 19:30 Z': 1.0104214,
'22 20:00 Z': 1.0099732,
'22 20:30 Z': 1.0101164,
'22 21:00 Z': 1.0100476,
'22 21:30 Z': 1.0098631,
'22 22:00 Z': 1.010169,
'22 22:30 Z': 1.0099413,
'22 23:00 Z': 1.0089494,
'22 23:30 Z': 1.0090733,
'23 00:00 Z': 1.0088418,
'23 00:30 Z': 1.0089255,
'23 01:00 Z': 1.0089069,
'23 01:30 Z': 1.0087923,
'23 02:00 Z': 1.0089039,
'23 02:30 Z': 1.0088951,
'23 03:00 Z': 1.0090449,
'23 03:30 Z': 1.0089829,
'23 04:00 Z': 1.0088257,
'23 04:30 Z': 1.0088961,
'23 05:00 Z': 1.0090945,
'23 05:30 Z': 1.0099361,
'23 06:00 Z': 1.0101422,
'23 06:30 Z': 1.01022,
'23 07:00 Z': 1.0106489,
'23 07:30 Z': 1.0108368,
'23 08:00 Z': 1.0110115,
'23 08:30 Z': 1.0109052,
'23 09:00 Z': 1.0109115,
'23 09:30 Z': 1.0108493,
'23 10:00 Z': 1.0109974,
'23 10:30 Z': 1.0109637,
'23 11:00 Z': 1.0110803,
'23 11:30 Z': 1.0110335,
'23 12:00 Z': 1.0110484,
'23 12:30 Z': 1.0108392,
'23 13:00 Z': 1.0108669,
'23 13:30 Z': 1.0108672,
'23 14:00 Z': 1.0109143,
'23 14:30 Z': 1.011071,
'23 15:00 Z': 1.0098906,
'23 15:30 Z': 1.0098761,
'23 16:00 Z': 1.0098961,
'23 16:30 Z': 1.0100665,
'23 17:00 Z': 1.0101136,
'23 17:30 Z': 1.0100807,
'23 18:00 Z': 1.0100082,
'23 18:30 Z': 1.0099355,
'23 19:00 Z': 1.0097305,
'23 19:30 Z': 1.0095411,
'23 20:00 Z': 1.0095268,
'23 20:30 Z': 1.0102108,
'23 21:00 Z': 1.010456,
'23 21:30 Z': 1.0100143,
'23 22:00 Z': 1.0101512,
'23 22:30 Z': 1.009566,
'23 23:00 Z': 1.0088892,
'23 23:30 Z': 1.0089908,
'24 00:00 Z': 1.0091415,
'24 00:30 Z': 1.009295,
'24 01:00 Z': 1.0092484,
'24 01:30 Z': 1.0091354,
'24 02:00 Z': 1.0091343,
'24 02:30 Z': 1.009142,
'24 03:00 Z': 1.0091613,
'24 03:30 Z': 1.0092113,
'24 04:00 Z': 1.0093916,
'24 04:30 Z': 1.0091365,
'24 05:00 Z': 1.0090794,
'24 05:30 Z': 1.0092233,
'24 06:00 Z': 1.0090694,
'24 06:30 Z': 1.0086755,
'24 07:00 Z': 1.0086465,
'24 07:30 Z': 1.0091358,
'24 08:00 Z': 1.0099288,
'24 08:30 Z': 1.0102229,
'24 09:00 Z': 1.0096351,
'24 09:30 Z': 1.0095453,
'24 10:00 Z': 1.0094912,
'24 10:30 Z': 1.0087088,
'24 11:00 Z': 1.0088294,
'24 11:30 Z': 1.0086304,
'24 12:00 Z': 1.0085759,
'24 12:30 Z': 1.0085377,
'24 13:00 Z': 1.008528,
'24 13:30 Z': 1.0085073,
'24 14:00 Z': 1.0082463,
'24 14:30 Z': 1.0081449,
'24 15:00 Z': 1.0081582,
'24 15:30 Z': 1.0080495,
'24 16:00 Z': 1.0080249,
'24 16:30 Z': 1.0080948,
'24 17:00 Z': 1.0082797,
'24 17:30 Z': 1.0083145,
'24 18:00 Z': 1.0083571,
'24 18:30 Z': 1.0083368,
'24 19:00 Z': 1.0088338,
'24 19:30 Z': 1.0088794,
'24 20:00 Z': 1.0089024,
'24 20:30 Z': 1.008895,
'24 21:00 Z': 1.0087595,
'24 21:30 Z': 1.0087132,
'24 22:00 Z': 1.0088189,
'24 22:30 Z': 1.0085725,
'24 23:00 Z': 1.0082401,
'24 23:30 Z': 1.0084081,
'25 00:00 Z': 1.0086484,
'25 00:30 Z': 1.0085502,
'25 01:00 Z': 1.0087256,
'25 01:30 Z': 1.0085638,
'25 02:00 Z': 1.0091417,
'25 02:30 Z': 1.0093104,
'25 03:00 Z': 1.0096519,
'25 03:30 Z': 1.0097554,
'25 04:00 Z': 1.0097369,
'25 04:30 Z': 1.0101545,
'25 05:00 Z': 1.0104033,
'25 05:30 Z': 1.0104497,
'25 06:00 Z': 1.0102501,
'25 06:30 Z': 1.0100907,
'25 07:00 Z': 1.0096434,
'25 07:30 Z': 1.009883,
'25 08:00 Z': 1.0099183,
'25 08:30 Z': 1.0100474,
'25 09:00 Z': 1.0095791,
'25 09:30 Z': 1.0095441,
'25 10:00 Z': 1.0096365,
'25 10:30 Z': 1.0095101,
'25 11:00 Z': 1.0095725,
'25 11:30 Z': 1.0095453,
'25 12:00 Z': 1.0096394,
'25 12:30 Z': 1.0096917,
'25 13:00 Z': 1.0093878,
'25 13:30 Z': 1.0094407,
'25 14:00 Z': 1.0093271,
'25 14:30 Z': 1.009206,
'25 15:00 Z': 1.0089268,
'25 15:30 Z': 1.0088727,
'25 16:00 Z': 1.0090163,
'25 16:30 Z': 1.0090163,
'25 17:00 Z': 1.0090486,
'25 17:30 Z': 1.009146,
'25 18:00 Z': 1.0092924,
'25 18:30 Z': 1.0093197,
'25 19:00 Z': 1.0091781,
'25 19:30 Z': 1.0092878,
'25 20:00 Z': 1.0093968,
'25 20:30 Z': 1.0098858,
'25 21:00 Z': 1.0098395,
'25 21:30 Z': 1.0093607,
'25 22:00 Z': 1.0086794,
'25 22:30 Z': 1.0086704,
'25 23:00 Z': 1.008724,
'25 23:30 Z': 1.0087346,
'26 00:00 Z': 1.0082491,
'26 00:30 Z': 1.0083284,
'26 01:00 Z': 1.0080579,
'26 01:30 Z': 1.0079469,
'26 02:00 Z': 1.0081284,
'26 02:30 Z': 1.0083857,
'26 03:00 Z': 1.0083082,
'26 03:30 Z': 1.0081637,
'26 04:00 Z': 1.0084241,
'26 04:30 Z': 1.0083223,
'26 05:00 Z': 1.0081105,
'26 05:30 Z': 1.0090399,
'26 06:00 Z': 1.0091923,
'26 06:30 Z': 1.0092449,
'26 07:00 Z': 1.0092854,
'26 07:30 Z': 1.0097088,
'26 08:00 Z': 1.0096906,
'26 08:30 Z': 1.0098191,
'26 09:00 Z': 1.0099123,
'26 09:30 Z': 1.0100711,
'26 10:00 Z': 1.0099326,
'26 10:30 Z': 1.0098223,
'26 11:00 Z': 1.010034,
'26 11:30 Z': 1.0099593,
'26 12:00 Z': 1.0100428,
'26 12:30 Z': 1.0101953,
'26 13:00 Z': 1.0101955,
'26 13:30 Z': 1.0100768,
'26 14:00 Z': 1.0101479,
'26 14:30 Z': 1.0105082,
'26 15:00 Z': 1.0096885,
'26 15:30 Z': 1.0093447,
'26 16:00 Z': 1.0096229,
'26 16:30 Z': 1.0098518,
'26 17:00 Z': 1.0096423,
'26 17:30 Z': 1.0096194,
'26 18:00 Z': 1.0095031,
'26 18:30 Z': 1.0095321,
'26 19:00 Z': 1.0094664,
'26 19:30 Z': 1.0093442,
'26 20:00 Z': 1.0092352,
'26 20:30 Z': 1.0093719,
'26 21:00 Z': 1.008962,
'26 21:30 Z': 1.0087314,
'26 22:00 Z': 1.0087607,
'26 22:30 Z': 1.0085631,
'26 23:00 Z': 1.0075077,
'26 23:30 Z': 1.0075915,
'27 00:00 Z': 1.007761,
'27 00:30 Z': 1.007964,
'27 01:00 Z': 1.0079732,
'27 01:30 Z': 1.0076396,
'27 02:00 Z': 1.0078324,
'27 02:30 Z': 1.0078603,
'27 03:00 Z': 1.0080991,
'27 03:30 Z': 1.0080758,
'27 04:00 Z': 1.0079624,
'27 04:30 Z': 1.0079834,
'27 05:00 Z': 1.0080726,
'27 05:30 Z': 1.0088318,
'27 06:00 Z': 1.0087191,
'27 06:30 Z': 1.009266,
'27 07:00 Z': 1.0100985,
'27 07:30 Z': 1.0104512,
'27 08:00 Z': 1.0103976,
'27 08:30 Z': 1.0103122,
'27 09:00 Z': 1.0101905,
'27 09:30 Z': 1.0101737,
'27 10:00 Z': 1.0101537,
'27 10:30 Z': 1.0101899,
'27 11:00 Z': 1.0104903,
'27 11:30 Z': 1.010326,
'27 12:00 Z': 1.0103114,
'27 12:30 Z': 1.0104441,
'27 13:00 Z': 1.010407,
'27 13:30 Z': 1.0103425,
'27 14:00 Z': 1.0101787,
'27 14:30 Z': 1.0097311,
'27 15:00 Z': 1.0098767,
'27 15:30 Z': 1.0098541,
'27 16:00 Z': 1.0097951,
'27 16:30 Z': 1.0097891,
'27 17:00 Z': 1.0096897,
'27 17:30 Z': 1.0100002,
'27 18:00 Z': 1.0104338,
'27 18:30 Z': 1.0101373,
'27 19:00 Z': 1.0099086,
'27 19:30 Z': 1.0096652,
'27 20:00 Z': 1.0089497,
'27 20:30 Z': 1.0090454,
'27 21:00 Z': 1.0089511,
'27 21:30 Z': 1.0091002,
'27 22:00 Z': 1.0092304,
'27 22:30 Z': 1.0087065,
'27 23:00 Z': 1.0081957,
'27 23:30 Z': 1.0080905,
'28 00:00 Z': 1.0075478,
'28 00:30 Z': 1.0075924,
'28 01:00 Z': 1.0074034,
'28 01:30 Z': 1.0069751,
'28 02:00 Z': 1.0071506,
'28 02:30 Z': 1.0071203,
'28 03:00 Z': 1.0072115,
'28 03:30 Z': 1.0074007,
'28 04:00 Z': 1.007716,
'28 04:30 Z': 1.0079487,
'28 05:00 Z': 1.0080847,
'28 05:30 Z': 1.0075269,
'28 06:00 Z': 1.0080965,
'28 06:30 Z': 1.0082063,
'28 07:00 Z': 1.008116,
'28 07:30 Z': 1.0090314,
'28 08:00 Z': 1.0101157,
'28 08:30 Z': 1.0098903,
'28 09:00 Z': 1.0100175,
'28 09:30 Z': 1.0101373,
'28 10:00 Z': 1.0098962,
'28 10:30 Z': 1.0098812,
'28 11:00 Z': 1.0100826,
'28 11:30 Z': 1.0101816,
'28 12:00 Z': 1.010198,
'28 12:30 Z': 1.0096778,
'28 13:00 Z': 1.0098748,
'28 13:30 Z': 1.0104828,
'28 14:00 Z': 1.0106221,
'28 14:30 Z': 1.0107348,
'28 15:00 Z': 1.0110804,
'28 15:30 Z': 1.0108981,
'28 16:00 Z': 1.0103926,
'28 16:30 Z': 1.0101961,
'28 17:00 Z': 1.0098183,
'28 17:30 Z': 1.0095547,
'28 18:00 Z': 1.0103342,
'28 18:30 Z': 1.0106038,
'28 19:00 Z': 1.0104496,
'28 19:30 Z': 1.0101187,
'28 20:00 Z': 1.0099727,
'28 20:30 Z': 1.0102395,
'28 21:00 Z': 1.0098524,
'28 21:30 Z': 1.0099011,
'28 22:00 Z': 1.0094896,
'28 22:30 Z': 1.0092195,
'28 23:00 Z': 1.0081626,
'28 23:30 Z': 1.0079844,
'29 00:00 Z': 1.0074375,
'29 00:30 Z': 1.0076781,
'29 01:00 Z': 1.0076021,
'29 01:30 Z': 1.0072458,
'29 02:00 Z': 1.0077506,
'29 02:30 Z': 1.0077846,
'29 03:00 Z': 1.0079673,
'29 03:30 Z': 1.0077665,
'29 04:00 Z': 1.0080529,
'29 04:30 Z': 1.0079095,
'29 05:00 Z': 1.0079439,
'29 05:30 Z': 1.0080448,
'29 06:00 Z': 1.0083073,
'29 06:30 Z': 1.0088758,
'29 07:00 Z': 1.008825,
'29 07:30 Z': 1.0091577,
'29 08:00 Z': 1.0090262,
'29 08:30 Z': 1.0089215,
'29 09:00 Z': 1.0101773,
'29 09:30 Z': 1.0105179,
'29 10:00 Z': 1.0101887,
'29 10:30 Z': 1.0100009,
'29 11:00 Z': 1.0099146,
'29 11:30 Z': 1.0101896,
'29 12:00 Z': 1.0104269,
'29 12:30 Z': 1.0107339,
'29 13:00 Z': 1.0102235,
'29 13:30 Z': 1.0103223,
'29 14:00 Z': 1.0106581,
'29 14:30 Z': 1.010661,
'29 15:00 Z': 1.0104941,
'29 15:30 Z': 1.0104114,
'29 16:00 Z': 1.0100211,
'29 16:30 Z': 1.0101215,
'29 17:00 Z': 1.0104983,
'29 17:30 Z': 1.0107417,
'29 18:00 Z': 1.0108269,
'29 18:30 Z': 1.0107634,
'29 19:00 Z': 1.0106528,
'29 19:30 Z': 1.0104519,
'29 20:00 Z': 1.0106131,
'29 20:30 Z': 1.0107792,
'29 21:00 Z': 1.0100095,
'29 21:30 Z': 1.0098258,
'29 22:00 Z': 1.0098328,
'29 22:30 Z': 1.0089781,
'29 23:00 Z': 1.0081072,
'29 23:30 Z': 1.0078216,
'30 00:00 Z': 1.0079256,
'30 00:30 Z': 1.0082308,
'30 01:00 Z': 1.0080151,
'30 01:30 Z': 1.0078983,
'30 02:00 Z': 1.008084,
'30 02:30 Z': 1.0083914,
'30 03:00 Z': 1.0083721,
'30 03:30 Z': 1.0080855,
'30 04:00 Z': 1.0078908,
'30 04:30 Z': 1.0079446,
'30 05:00 Z': 1.007567,
'30 05:30 Z': 1.0077393,
'30 06:00 Z': 1.0075149,
'30 06:30 Z': 1.0079197,
'30 07:00 Z': 1.0084924,
'30 07:30 Z': 1.0087061,
'30 08:00 Z': 1.0086176,
'30 08:30 Z': 1.0083887,
'30 09:00 Z': 1.0083329,
'30 09:30 Z': 1.0084271,
'30 10:00 Z': 1.0084623,
'30 10:30 Z': 1.0084622,
'30 11:00 Z': 1.0083909,
'30 11:30 Z': 1.008611,
'30 12:00 Z': 1.0085638,
'30 12:30 Z': 1.0084967,
'30 13:00 Z': 1.0083263,
'30 13:30 Z': 1.0084361,
'30 14:00 Z': 1.0087377,
'30 14:30 Z': 1.0086464,
'30 15:00 Z': 1.0087519,
'30 15:30 Z': 1.0088523,
'30 16:00 Z': 1.0087147,
'30 16:30 Z': 1.0084702,
'30 17:00 Z': 1.0087999,
'30 17:30 Z': 1.0088731,
'30 18:00 Z': 1.0089581,
'30 18:30 Z': 1.0090877,
'30 19:00 Z': 1.0093223,
'30 19:30 Z': 1.0092919,
'30 20:00 Z': 1.009259,
'30 20:30 Z': 1.009027,
'30 21:00 Z': 1.008759,
'30 21:30 Z': 1.0088493,
'30 22:00 Z': 1.0092182,
'30 22:30 Z': 1.009384,
'30 23:00 Z': 1.0087302,
'30 23:30 Z': 1.0086111}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[tlms]]></value>
        <value><![CDATA[129]]></value>
        <value><![CDATA[2010-05-01T00:00Z]]></value>
        <value><![CDATA[def tlms():
    return {
'01 00:00 Z': 1.0086029,
'01 00:30 Z': 1.0087394,
'01 01:00 Z': 1.0086848,
'01 01:30 Z': 1.0084606,
'01 02:00 Z': 1.0087521,
'01 02:30 Z': 1.0087074,
'01 03:00 Z': 1.0089451,
'01 03:30 Z': 1.0090514,
'01 04:00 Z': 1.0090471,
'01 04:30 Z': 1.0091963,
'01 05:00 Z': 1.0093981,
'01 05:30 Z': 1.0093837,
'01 06:00 Z': 1.0089301,
'01 06:30 Z': 1.0085227,
'01 07:00 Z': 1.0085895,
'01 07:30 Z': 1.0086532,
'01 08:00 Z': 1.0084924,
'01 08:30 Z': 1.0085874,
'01 09:00 Z': 1.0090828,
'01 09:30 Z': 1.0092304,
'01 10:00 Z': 1.0092894,
'01 10:30 Z': 1.0091382,
'01 11:00 Z': 1.0090394,
'01 11:30 Z': 1.0090976,
'01 12:00 Z': 1.0089566,
'01 12:30 Z': 1.0092148,
'01 13:00 Z': 1.0088844,
'01 13:30 Z': 1.0091266,
'01 14:00 Z': 1.009372,
'01 14:30 Z': 1.0093726,
'01 15:00 Z': 1.0093379,
'01 15:30 Z': 1.0094023,
'01 16:00 Z': 1.0093442,
'01 16:30 Z': 1.0094756,
'01 17:00 Z': 1.0096686,
'01 17:30 Z': 1.0099661,
'01 18:00 Z': 1.0100349,
'01 18:30 Z': 1.0099473,
'01 19:00 Z': 1.0101646,
'01 19:30 Z': 1.0103174,
'01 20:00 Z': 1.0104817,
'01 20:30 Z': 1.0106037,
'01 21:00 Z': 1.0101266,
'01 21:30 Z': 1.0103647,
'01 22:00 Z': 1.0103917,
'01 22:30 Z': 1.009817,
'01 23:00 Z': 1.0090967,
'01 23:30 Z': 1.0088423,
'02 00:00 Z': 1.0087651,
'02 00:30 Z': 1.0089799,
'02 01:00 Z': 1.0089911,
'02 01:30 Z': 1.008919,
'02 02:00 Z': 1.0091656,
'02 02:30 Z': 1.0093408,
'02 03:00 Z': 1.0098114,
'02 03:30 Z': 1.0099002,
'02 04:00 Z': 1.0098665,
'02 04:30 Z': 1.0098549,
'02 05:00 Z': 1.0100492,
'02 05:30 Z': 1.0100409,
'02 06:00 Z': 1.0097976,
'02 06:30 Z': 1.0095723,
'02 07:00 Z': 1.0095233,
'02 07:30 Z': 1.0093908,
'02 08:00 Z': 1.0091094,
'02 08:30 Z': 1.0088561,
'02 09:00 Z': 1.0085759,
'02 09:30 Z': 1.0084948,
'02 10:00 Z': 1.0089271,
'02 10:30 Z': 1.0094195,
'02 11:00 Z': 1.0092095,
'02 11:30 Z': 1.0093515,
'02 12:00 Z': 1.0093251,
'02 12:30 Z': 1.009256,
'02 13:00 Z': 1.0090484,
'02 13:30 Z': 1.0089283,
'02 14:00 Z': 1.0089238,
'02 14:30 Z': 1.0088161,
'02 15:00 Z': 1.0088193,
'02 15:30 Z': 1.008935,
'02 16:00 Z': 1.0089395,
'02 16:30 Z': 1.0087704,
'02 17:00 Z': 1.0088508,
'02 17:30 Z': 1.0088654,
'02 18:00 Z': 1.0088112,
'02 18:30 Z': 1.0088427,
'02 19:00 Z': 1.008713,
'02 19:30 Z': 1.0088431,
'02 20:00 Z': 1.0087564,
'02 20:30 Z': 1.0089855,
'02 21:00 Z': 1.0089221,
'02 21:30 Z': 1.0084423,
'02 22:00 Z': 1.0081205,
'02 22:30 Z': 1.0080011,
'02 23:00 Z': 1.0078762,
'02 23:30 Z': 1.0079517,
'03 00:00 Z': 1.0079008,
'03 00:30 Z': 1.0079943,
'03 01:00 Z': 1.008035,
'03 01:30 Z': 1.0079314,
'03 02:00 Z': 1.0080676,
'03 02:30 Z': 1.0081278,
'03 03:00 Z': 1.0082746,
'03 03:30 Z': 1.0083574,
'03 04:00 Z': 1.008391,
'03 04:30 Z': 1.0081534,
'03 05:00 Z': 1.0081487,
'03 05:30 Z': 1.0082176,
'03 06:00 Z': 1.0079293,
'03 06:30 Z': 1.0081705,
'03 07:00 Z': 1.0096464,
'03 07:30 Z': 1.0100042,
'03 08:00 Z': 1.0101219,
'03 08:30 Z': 1.0101951,
'03 09:00 Z': 1.0103468,
'03 09:30 Z': 1.0101904,
'03 10:00 Z': 1.0098671,
'03 10:30 Z': 1.0097664,
'03 11:00 Z': 1.0099528,
'03 11:30 Z': 1.0099709,
'03 12:00 Z': 1.0099411,
'03 12:30 Z': 1.0104647,
'03 13:00 Z': 1.0102598,
'03 13:30 Z': 1.0099472,
'03 14:00 Z': 1.0098932,
'03 14:30 Z': 1.0100211,
'03 15:00 Z': 1.0093779,
'03 15:30 Z': 1.0093883,
'03 16:00 Z': 1.0092926,
'03 16:30 Z': 1.0093922,
'03 17:00 Z': 1.0099205,
'03 17:30 Z': 1.0098415,
'03 18:00 Z': 1.0096065,
'03 18:30 Z': 1.0096552,
'03 19:00 Z': 1.0093607,
'03 19:30 Z': 1.0093325,
'03 20:00 Z': 1.009395,
'03 20:30 Z': 1.009612,
'03 21:00 Z': 1.0094538,
'03 21:30 Z': 1.0089246,
'03 22:00 Z': 1.0087389,
'03 22:30 Z': 1.0088018,
'03 23:00 Z': 1.0083327,
'03 23:30 Z': 1.0081901,
'04 00:00 Z': 1.0082614,
'04 00:30 Z': 1.0082177,
'04 01:00 Z': 1.0081715,
'04 01:30 Z': 1.0080873,
'04 02:00 Z': 1.0081532,
'04 02:30 Z': 1.0081392,
'04 03:00 Z': 1.0083671,
'04 03:30 Z': 1.0083496,
'04 04:00 Z': 1.0082659,
'04 04:30 Z': 1.0081673,
'04 05:00 Z': 1.008363,
'04 05:30 Z': 1.0083701,
'04 06:00 Z': 1.008972,
'04 06:30 Z': 1.0092667,
'04 07:00 Z': 1.0099276,
'04 07:30 Z': 1.0101026,
'04 08:00 Z': 1.0094534,
'04 08:30 Z': 1.0092631,
'04 09:00 Z': 1.0096285,
'04 09:30 Z': 1.0097958,
'04 10:00 Z': 1.0098568,
'04 10:30 Z': 1.0099011,
'04 11:00 Z': 1.0100428,
'04 11:30 Z': 1.0100226,
'04 12:00 Z': 1.0101301,
'04 12:30 Z': 1.0099273,
'04 13:00 Z': 1.0100976,
'04 13:30 Z': 1.0097358,
'04 14:00 Z': 1.0096209,
'04 14:30 Z': 1.0094029,
'04 15:00 Z': 1.0088344,
'04 15:30 Z': 1.0088458,
'04 16:00 Z': 1.00889,
'04 16:30 Z': 1.0089002,
'04 17:00 Z': 1.009058,
'04 17:30 Z': 1.0091603,
'04 18:00 Z': 1.0090446,
'04 18:30 Z': 1.0091808,
'04 19:00 Z': 1.0088894,
'04 19:30 Z': 1.0088236,
'04 20:00 Z': 1.0088555,
'04 20:30 Z': 1.0090057,
'04 21:00 Z': 1.0091377,
'04 21:30 Z': 1.0088801,
'04 22:00 Z': 1.0083396,
'04 22:30 Z': 1.0079939,
'04 23:00 Z': 1.0076888,
'04 23:30 Z': 1.0072481,
'05 00:00 Z': 1.0072809,
'05 00:30 Z': 1.00716,
'05 01:00 Z': 1.0072671,
'05 01:30 Z': 1.0072455,
'05 02:00 Z': 1.0073962,
'05 02:30 Z': 1.0074756,
'05 03:00 Z': 1.0076103,
'05 03:30 Z': 1.0073922,
'05 04:00 Z': 1.0076345,
'05 04:30 Z': 1.0074123,
'05 05:00 Z': 1.0074584,
'05 05:30 Z': 1.0076511,
'05 06:00 Z': 1.0081135,
'05 06:30 Z': 1.0082725,
'05 07:00 Z': 1.0087027,
'05 07:30 Z': 1.0091579,
'05 08:00 Z': 1.0094799,
'05 08:30 Z': 1.0095021,
'05 09:00 Z': 1.0088928,
'05 09:30 Z': 1.0088623,
'05 10:00 Z': 1.0089582,
'05 10:30 Z': 1.0090323,
'05 11:00 Z': 1.0088641,
'05 11:30 Z': 1.0086775,
'05 12:00 Z': 1.0088324,
'05 12:30 Z': 1.0090269,
'05 13:00 Z': 1.0091948,
'05 13:30 Z': 1.0091206,
'05 14:00 Z': 1.0090889,
'05 14:30 Z': 1.0090252,
'05 15:00 Z': 1.0090178,
'05 15:30 Z': 1.0091057,
'05 16:00 Z': 1.0090554,
'05 16:30 Z': 1.0089946,
'05 17:00 Z': 1.0089273,
'05 17:30 Z': 1.0090288,
'05 18:00 Z': 1.0091195,
'05 18:30 Z': 1.0093104,
'05 19:00 Z': 1.0093575,
'05 19:30 Z': 1.009318,
'05 20:00 Z': 1.0092589,
'05 20:30 Z': 1.0093345,
'05 21:00 Z': 1.0091368,
'05 21:30 Z': 1.0084262,
'05 22:00 Z': 1.0083044,
'05 22:30 Z': 1.0081723,
'05 23:00 Z': 1.0079878,
'05 23:30 Z': 1.0078284,
'06 00:00 Z': 1.007933,
'06 00:30 Z': 1.0082051,
'06 01:00 Z': 1.0080937,
'06 01:30 Z': 1.0080124,
'06 02:00 Z': 1.0080703,
'06 02:30 Z': 1.008179,
'06 03:00 Z': 1.0082328,
'06 03:30 Z': 1.0082719,
'06 04:00 Z': 1.0081744,
'06 04:30 Z': 1.0077793,
'06 05:00 Z': 1.0082373,
'06 05:30 Z': 1.0088002,
'06 06:00 Z': 1.0088621,
'06 06:30 Z': 1.0088347,
'06 07:00 Z': 1.0089929,
'06 07:30 Z': 1.0096414,
'06 08:00 Z': 1.0099987,
'06 08:30 Z': 1.0102611,
'06 09:00 Z': 1.0099988,
'06 09:30 Z': 1.0098325,
'06 10:00 Z': 1.0095692,
'06 10:30 Z': 1.0093759,
'06 11:00 Z': 1.0097239,
'06 11:30 Z': 1.00978,
'06 12:00 Z': 1.0099271,
'06 12:30 Z': 1.0098839,
'06 13:00 Z': 1.0096748,
'06 13:30 Z': 1.0095603,
'06 14:00 Z': 1.0093,
'06 14:30 Z': 1.0091663,
'06 15:00 Z': 1.008527,
'06 15:30 Z': 1.0085404,
'06 16:00 Z': 1.0086465,
'06 16:30 Z': 1.0087098,
'06 17:00 Z': 1.0088476,
'06 17:30 Z': 1.0087036,
'06 18:00 Z': 1.0087667,
'06 18:30 Z': 1.0090145,
'06 19:00 Z': 1.0089751,
'06 19:30 Z': 1.0087574,
'06 20:00 Z': 1.0083931,
'06 20:30 Z': 1.0085617,
'06 21:00 Z': 1.0088642,
'06 21:30 Z': 1.0086742,
'06 22:00 Z': 1.0085555,
'06 22:30 Z': 1.0083605,
'06 23:00 Z': 1.0075821,
'06 23:30 Z': 1.0072852,
'07 00:00 Z': 1.0071001,
'07 00:30 Z': 1.0069594,
'07 01:00 Z': 1.0069263,
'07 01:30 Z': 1.0070589,
'07 02:00 Z': 1.0071483,
'07 02:30 Z': 1.0072579,
'07 03:00 Z': 1.0075765,
'07 03:30 Z': 1.0077479,
'07 04:00 Z': 1.0076051,
'07 04:30 Z': 1.0075935,
'07 05:00 Z': 1.0075639,
'07 05:30 Z': 1.007247,
'07 06:00 Z': 1.0072248,
'07 06:30 Z': 1.0078324,
'07 07:00 Z': 1.0083431,
'07 07:30 Z': 1.0083947,
'07 08:00 Z': 1.0092165,
'07 08:30 Z': 1.0093429,
'07 09:00 Z': 1.008901,
'07 09:30 Z': 1.0091362,
'07 10:00 Z': 1.0088712,
'07 10:30 Z': 1.0087617,
'07 11:00 Z': 1.0085605,
'07 11:30 Z': 1.008793,
'07 12:00 Z': 1.0089489,
'07 12:30 Z': 1.0090601,
'07 13:00 Z': 1.0092017,
'07 13:30 Z': 1.0090925,
'07 14:00 Z': 1.0092449,
'07 14:30 Z': 1.0090938,
'07 15:00 Z': 1.0083896,
'07 15:30 Z': 1.0083497,
'07 16:00 Z': 1.0082241,
'07 16:30 Z': 1.0081877,
'07 17:00 Z': 1.0082523,
'07 17:30 Z': 1.0084609,
'07 18:00 Z': 1.008724,
'07 18:30 Z': 1.0089154,
'07 19:00 Z': 1.0088044,
'07 19:30 Z': 1.0088834,
'07 20:00 Z': 1.0089094,
'07 20:30 Z': 1.0090048,
'07 21:00 Z': 1.0086428,
'07 21:30 Z': 1.0085134,
'07 22:00 Z': 1.0081475,
'07 22:30 Z': 1.0076623,
'07 23:00 Z': 1.0069987,
'07 23:30 Z': 1.0069535,
'08 00:00 Z': 1.0070998,
'08 00:30 Z': 1.0071937,
'08 01:00 Z': 1.0072896,
'08 01:30 Z': 1.0073347,
'08 02:00 Z': 1.0075617,
'08 02:30 Z': 1.0076653,
'08 03:00 Z': 1.0077646,
'08 03:30 Z': 1.0078677,
'08 04:00 Z': 1.0080806,
'08 04:30 Z': 1.0081174,
'08 05:00 Z': 1.0082766,
'08 05:30 Z': 1.0081826,
'08 06:00 Z': 1.0079004,
'08 06:30 Z': 1.0077297,
'08 07:00 Z': 1.0076506,
'08 07:30 Z': 1.0073945,
'08 08:00 Z': 1.0074438,
'08 08:30 Z': 1.0074209,
'08 09:00 Z': 1.0074361,
'08 09:30 Z': 1.0072202,
'08 10:00 Z': 1.0073012,
'08 10:30 Z': 1.0074074,
'08 11:00 Z': 1.0075946,
'08 11:30 Z': 1.0075255,
'08 12:00 Z': 1.0075336,
'08 12:30 Z': 1.0074265,
'08 13:00 Z': 1.0074443,
'08 13:30 Z': 1.007509,
'08 14:00 Z': 1.0076862,
'08 14:30 Z': 1.0076842,
'08 15:00 Z': 1.0079007,
'08 15:30 Z': 1.007918,
'08 16:00 Z': 1.007945,
'08 16:30 Z': 1.0077297,
'08 17:00 Z': 1.0075539,
'08 17:30 Z': 1.007615,
'08 18:00 Z': 1.0077696,
'08 18:30 Z': 1.0079286,
'08 19:00 Z': 1.0081398,
'08 19:30 Z': 1.0086112,
'08 20:00 Z': 1.0089596,
'08 20:30 Z': 1.0090305,
'08 21:00 Z': 1.0087517,
'08 21:30 Z': 1.00839,
'08 22:00 Z': 1.0083528,
'08 22:30 Z': 1.0083055,
'08 23:00 Z': 1.0072876,
'08 23:30 Z': 1.0073702,
'09 00:00 Z': 1.0074978,
'09 00:30 Z': 1.0076427,
'09 01:00 Z': 1.0075725,
'09 01:30 Z': 1.0074421,
'09 02:00 Z': 1.0075135,
'09 02:30 Z': 1.0074755,
'09 03:00 Z': 1.0076339,
'09 03:30 Z': 1.0078428,
'09 04:00 Z': 1.0083169,
'09 04:30 Z': 1.0083999,
'09 05:00 Z': 1.0084707,
'09 05:30 Z': 1.0084595,
'09 06:00 Z': 1.008342,
'09 06:30 Z': 1.0081226,
'09 07:00 Z': 1.0079918,
'09 07:30 Z': 1.0080071,
'09 08:00 Z': 1.0078226,
'09 08:30 Z': 1.0080281,
'09 09:00 Z': 1.0080326,
'09 09:30 Z': 1.0081337,
'09 10:00 Z': 1.0082715,
'09 10:30 Z': 1.0086878,
'09 11:00 Z': 1.0086986,
'09 11:30 Z': 1.0088447,
'09 12:00 Z': 1.008636,
'09 12:30 Z': 1.0085553,
'09 13:00 Z': 1.0084626,
'09 13:30 Z': 1.0083326,
'09 14:00 Z': 1.0082126,
'09 14:30 Z': 1.0082927,
'09 15:00 Z': 1.0082715,
'09 15:30 Z': 1.0084335,
'09 16:00 Z': 1.0083873,
'09 16:30 Z': 1.0086771,
'09 17:00 Z': 1.0083256,
'09 17:30 Z': 1.0081507,
'09 18:00 Z': 1.0083071,
'09 18:30 Z': 1.0083,
'09 19:00 Z': 1.0082099,
'09 19:30 Z': 1.0081554,
'09 20:00 Z': 1.0079748,
'09 20:30 Z': 1.0083387,
'09 21:00 Z': 1.0083137,
'09 21:30 Z': 1.0080026,
'09 22:00 Z': 1.0079411,
'09 22:30 Z': 1.0075972,
'09 23:00 Z': 1.007782,
'09 23:30 Z': 1.0078248,
'10 00:00 Z': 1.0077062,
'10 00:30 Z': 1.0076393,
'10 01:00 Z': 1.0077159,
'10 01:30 Z': 1.007645,
'10 02:00 Z': 1.0077586,
'10 02:30 Z': 1.0075993,
'10 03:00 Z': 1.0075485,
'10 03:30 Z': 1.007605,
'10 04:00 Z': 1.0077656,
'10 04:30 Z': 1.0077353,
'10 05:00 Z': 1.0078054,
'10 05:30 Z': 1.0079814,
'10 06:00 Z': 1.008226,
'10 06:30 Z': 1.0083813,
'10 07:00 Z': 1.0082947,
'10 07:30 Z': 1.0087746,
'10 08:00 Z': 1.0089017,
'10 08:30 Z': 1.0090161,
'10 09:00 Z': 1.009253,
'10 09:30 Z': 1.0093519,
'10 10:00 Z': 1.0091806,
'10 10:30 Z': 1.0087564,
'10 11:00 Z': 1.0085553,
'10 11:30 Z': 1.0084895,
'10 12:00 Z': 1.008407,
'10 12:30 Z': 1.008458,
'10 13:00 Z': 1.0084545,
'10 13:30 Z': 1.0082292,
'10 14:00 Z': 1.0083088,
'10 14:30 Z': 1.0084176,
'10 15:00 Z': 1.0075861,
'10 15:30 Z': 1.0073849,
'10 16:00 Z': 1.0073276,
'10 16:30 Z': 1.0074358,
'10 17:00 Z': 1.0074265,
'10 17:30 Z': 1.0074094,
'10 18:00 Z': 1.0077018,
'10 18:30 Z': 1.0076905,
'10 19:00 Z': 1.0076381,
'10 19:30 Z': 1.0076471,
'10 20:00 Z': 1.0075132,
'10 20:30 Z': 1.0075374,
'10 21:00 Z': 1.007491,
'10 21:30 Z': 1.0074225,
'10 22:00 Z': 1.00758,
'10 22:30 Z': 1.0076835,
'10 23:00 Z': 1.0074583,
'10 23:30 Z': 1.0072756,
'11 00:00 Z': 1.0071585,
'11 00:30 Z': 1.0073568,
'11 01:00 Z': 1.0073057,
'11 01:30 Z': 1.0071162,
'11 02:00 Z': 1.0074077,
'11 02:30 Z': 1.007449,
'11 03:00 Z': 1.00755,
'11 03:30 Z': 1.0075413,
'11 04:00 Z': 1.0073504,
'11 04:30 Z': 1.007381,
'11 05:00 Z': 1.0073403,
'11 05:30 Z': 1.0074193,
'11 06:00 Z': 1.0073027,
'11 06:30 Z': 1.0075278,
'11 07:00 Z': 1.0078899,
'11 07:30 Z': 1.0079092,
'11 08:00 Z': 1.0078304,
'11 08:30 Z': 1.0077743,
'11 09:00 Z': 1.0078554,
'11 09:30 Z': 1.0079144,
'11 10:00 Z': 1.0078318,
'11 10:30 Z': 1.0078582,
'11 11:00 Z': 1.0077782,
'11 11:30 Z': 1.0078154,
'11 12:00 Z': 1.0078775,
'11 12:30 Z': 1.0078385,
'11 13:00 Z': 1.0078979,
'11 13:30 Z': 1.0078896,
'11 14:00 Z': 1.0078749,
'11 14:30 Z': 1.0079709,
'11 15:00 Z': 1.0078273,
'11 15:30 Z': 1.0078791,
'11 16:00 Z': 1.007913,
'11 16:30 Z': 1.0080421,
'11 17:00 Z': 1.0081959,
'11 17:30 Z': 1.0081793,
'11 18:00 Z': 1.0080369,
'11 18:30 Z': 1.0079193,
'11 19:00 Z': 1.0074953,
'11 19:30 Z': 1.0073778,
'11 20:00 Z': 1.007307,
'11 20:30 Z': 1.0074246,
'11 21:00 Z': 1.007922,
'11 21:30 Z': 1.0077869,
'11 22:00 Z': 1.0075409,
'11 22:30 Z': 1.007789,
'11 23:00 Z': 1.0078107,
'11 23:30 Z': 1.007604,
'12 00:00 Z': 1.0077885,
'12 00:30 Z': 1.0077509,
'12 01:00 Z': 1.0075227,
'12 01:30 Z': 1.0074683,
'12 02:00 Z': 1.0074955,
'12 02:30 Z': 1.0075773,
'12 03:00 Z': 1.0077261,
'12 03:30 Z': 1.0077766,
'12 04:00 Z': 1.0078944,
'12 04:30 Z': 1.0078172,
'12 05:00 Z': 1.0081768,
'12 05:30 Z': 1.0082725,
'12 06:00 Z': 1.0085694,
'12 06:30 Z': 1.00887,
'12 07:00 Z': 1.0091402,
'12 07:30 Z': 1.0087872,
'12 08:00 Z': 1.0086581,
'12 08:30 Z': 1.0083927,
'12 09:00 Z': 1.0085622,
'12 09:30 Z': 1.0086383,
'12 10:00 Z': 1.0084668,
'12 10:30 Z': 1.0084031,
'12 11:00 Z': 1.0082187,
'12 11:30 Z': 1.0081173,
'12 12:00 Z': 1.0080413,
'12 12:30 Z': 1.0080092,
'12 13:00 Z': 1.0078931,
'12 13:30 Z': 1.0079118,
'12 14:00 Z': 1.0081268,
'12 14:30 Z': 1.0081074,
'12 15:00 Z': 1.0077403,
'12 15:30 Z': 1.0076415,
'12 16:00 Z': 1.007643,
'12 16:30 Z': 1.0077485,
'12 17:00 Z': 1.008053,
'12 17:30 Z': 1.007796,
'12 18:00 Z': 1.0083791,
'12 18:30 Z': 1.00832,
'12 19:00 Z': 1.0082956,
'12 19:30 Z': 1.0081488,
'12 20:00 Z': 1.0078557,
'12 20:30 Z': 1.0077374,
'12 21:00 Z': 1.0081443,
'12 21:30 Z': 1.0075669,
'12 22:00 Z': 1.00756,
'12 22:30 Z': 1.0074584,
'12 23:00 Z': 1.0072264,
'12 23:30 Z': 1.0071927,
'13 00:00 Z': 1.0073395,
'13 00:30 Z': 1.0073977,
'13 01:00 Z': 1.0074277,
'13 01:30 Z': 1.0073284,
'13 02:00 Z': 1.0074944,
'13 02:30 Z': 1.0075738,
'13 03:00 Z': 1.0080133,
'13 03:30 Z': 1.0079803,
'13 04:00 Z': 1.0079893,
'13 04:30 Z': 1.0081238,
'13 05:00 Z': 1.0079383,
'13 05:30 Z': 1.0079793,
'13 06:00 Z': 1.0077015,
'13 06:30 Z': 1.0077764,
'13 07:00 Z': 1.0078668,
'13 07:30 Z': 1.0078178,
'13 08:00 Z': 1.0075648,
'13 08:30 Z': 1.0074889,
'13 09:00 Z': 1.0076669,
'13 09:30 Z': 1.0079052,
'13 10:00 Z': 1.007816,
'13 10:30 Z': 1.0077789,
'13 11:00 Z': 1.0081802,
'13 11:30 Z': 1.0083882,
'13 12:00 Z': 1.0084587,
'13 12:30 Z': 1.0081823,
'13 13:00 Z': 1.0084975,
'13 13:30 Z': 1.008496,
'13 14:00 Z': 1.0084985,
'13 14:30 Z': 1.0084382,
'13 15:00 Z': 1.0082263,
'13 15:30 Z': 1.0082892,
'13 16:00 Z': 1.0084362,
'13 16:30 Z': 1.0085267,
'13 17:00 Z': 1.0086328,
'13 17:30 Z': 1.008163,
'13 18:00 Z': 1.0080971,
'13 18:30 Z': 1.0084393,
'13 19:00 Z': 1.008797,
'13 19:30 Z': 1.0085874,
'13 20:00 Z': 1.0086516,
'13 20:30 Z': 1.0087489,
'13 21:00 Z': 1.0088606,
'13 21:30 Z': 1.0084241,
'13 22:00 Z': 1.0080984,
'13 22:30 Z': 1.0076765,
'13 23:00 Z': 1.0078925,
'13 23:30 Z': 1.0079583,
'14 00:00 Z': 1.0081068,
'14 00:30 Z': 1.0083352,
'14 01:00 Z': 1.0083761,
'14 01:30 Z': 1.0083019,
'14 02:00 Z': 1.0082935,
'14 02:30 Z': 1.0083509,
'14 03:00 Z': 1.008614,
'14 03:30 Z': 1.0085916,
'14 04:00 Z': 1.008681,
'14 04:30 Z': 1.0084548,
'14 05:00 Z': 1.0082157,
'14 05:30 Z': 1.0082698,
'14 06:00 Z': 1.0082905,
'14 06:30 Z': 1.0086038,
'14 07:00 Z': 1.0087777,
'14 07:30 Z': 1.0087654,
'14 08:00 Z': 1.0085964,
'14 08:30 Z': 1.0085275,
'14 09:00 Z': 1.0083192,
'14 09:30 Z': 1.0083048,
'14 10:00 Z': 1.0082862,
'14 10:30 Z': 1.0082826,
'14 11:00 Z': 1.0084557,
'14 11:30 Z': 1.0084215,
'14 12:00 Z': 1.00846,
'14 12:30 Z': 1.008457,
'14 13:00 Z': 1.0084133,
'14 13:30 Z': 1.0082746,
'14 14:00 Z': 1.0082659,
'14 14:30 Z': 1.0081538,
'14 15:00 Z': 1.0079215,
'14 15:30 Z': 1.0079769,
'14 16:00 Z': 1.00786,
'14 16:30 Z': 1.0078522,
'14 17:00 Z': 1.007849,
'14 17:30 Z': 1.0079021,
'14 18:00 Z': 1.007953,
'14 18:30 Z': 1.0079865,
'14 19:00 Z': 1.0085869,
'14 19:30 Z': 1.0086293,
'14 20:00 Z': 1.0083105,
'14 20:30 Z': 1.0084624,
'14 21:00 Z': 1.0086643,
'14 21:30 Z': 1.0085757,
'14 22:00 Z': 1.0085007,
'14 22:30 Z': 1.0080048,
'14 23:00 Z': 1.0075719,
'14 23:30 Z': 1.0076517,
'15 00:00 Z': 1.0076486,
'15 00:30 Z': 1.0075535,
'15 01:00 Z': 1.0075201,
'15 01:30 Z': 1.0074189,
'15 02:00 Z': 1.0080074,
'15 02:30 Z': 1.0080619,
'15 03:00 Z': 1.0082423,
'15 03:30 Z': 1.0080812,
'15 04:00 Z': 1.0082834,
'15 04:30 Z': 1.0085463,
'15 05:00 Z': 1.0087222,
'15 05:30 Z': 1.0084573,
'15 06:00 Z': 1.0081335,
'15 06:30 Z': 1.0080864,
'15 07:00 Z': 1.0079162,
'15 07:30 Z': 1.0081888,
'15 08:00 Z': 1.0080683,
'15 08:30 Z': 1.0080572,
'15 09:00 Z': 1.0081374,
'15 09:30 Z': 1.0082416,
'15 10:00 Z': 1.0083589,
'15 10:30 Z': 1.0081649,
'15 11:00 Z': 1.0081803,
'15 11:30 Z': 1.0083735,
'15 12:00 Z': 1.0081372,
'15 12:30 Z': 1.0082123,
'15 13:00 Z': 1.0075831,
'15 13:30 Z': 1.0075572,
'15 14:00 Z': 1.0076012,
'15 14:30 Z': 1.0075129,
'15 15:00 Z': 1.0072915,
'15 15:30 Z': 1.0073916,
'15 16:00 Z': 1.0073406,
'15 16:30 Z': 1.0073824,
'15 17:00 Z': 1.0074143,
'15 17:30 Z': 1.0078381,
'15 18:00 Z': 1.0078266,
'15 18:30 Z': 1.0079242,
'15 19:00 Z': 1.0077279,
'15 19:30 Z': 1.0077206,
'15 20:00 Z': 1.0078198,
'15 20:30 Z': 1.0081873,
'15 21:00 Z': 1.0088504,
'15 21:30 Z': 1.0087744,
'15 22:00 Z': 1.0082343,
'15 22:30 Z': 1.0084125,
'15 23:00 Z': 1.0083883,
'15 23:30 Z': 1.0082803,
'16 00:00 Z': 1.0083967,
'16 00:30 Z': 1.0085194,
'16 01:00 Z': 1.0086517,
'16 01:30 Z': 1.0087832,
'16 02:00 Z': 1.0088445,
'16 02:30 Z': 1.0089339,
'16 03:00 Z': 1.0093979,
'16 03:30 Z': 1.009548,
'16 04:00 Z': 1.0094259,
'16 04:30 Z': 1.0092969,
'16 05:00 Z': 1.0098436,
'16 05:30 Z': 1.0098922,
'16 06:00 Z': 1.0097512,
'16 06:30 Z': 1.0095589,
'16 07:00 Z': 1.0089373,
'16 07:30 Z': 1.0088903,
'16 08:00 Z': 1.0083954,
'16 08:30 Z': 1.0083995,
'16 09:00 Z': 1.0085079,
'16 09:30 Z': 1.0084059,
'16 10:00 Z': 1.0084773,
'16 10:30 Z': 1.0084615,
'16 11:00 Z': 1.0089488,
'16 11:30 Z': 1.0087699,
'16 12:00 Z': 1.0088146,
'16 12:30 Z': 1.0088857,
'16 13:00 Z': 1.0085807,
'16 13:30 Z': 1.0084192,
'16 14:00 Z': 1.0084959,
'16 14:30 Z': 1.0084533,
'16 15:00 Z': 1.0083975,
'16 15:30 Z': 1.0083508,
'16 16:00 Z': 1.0083456,
'16 16:30 Z': 1.0082422,
'16 17:00 Z': 1.0084684,
'16 17:30 Z': 1.008653,
'16 18:00 Z': 1.0092836,
'16 18:30 Z': 1.0092625,
'16 19:00 Z': 1.0091994,
'16 19:30 Z': 1.0092055,
'16 20:00 Z': 1.0091233,
'16 20:30 Z': 1.0091098,
'16 21:00 Z': 1.0092829,
'16 21:30 Z': 1.0089894,
'16 22:00 Z': 1.0083711,
'16 22:30 Z': 1.0079622,
'16 23:00 Z': 1.0078668,
'16 23:30 Z': 1.0075725,
'17 00:00 Z': 1.0075857,
'17 00:30 Z': 1.0077627,
'17 01:00 Z': 1.0077513,
'17 01:30 Z': 1.0078759,
'17 02:00 Z': 1.0081056,
'17 02:30 Z': 1.0082298,
'17 03:00 Z': 1.0083326,
'17 03:30 Z': 1.0083951,
'17 04:00 Z': 1.0084424,
'17 04:30 Z': 1.0084539,
'17 05:00 Z': 1.0082088,
'17 05:30 Z': 1.0081868,
'17 06:00 Z': 1.0079054,
'17 06:30 Z': 1.0079998,
'17 07:00 Z': 1.0083964,
'17 07:30 Z': 1.0087129,
'17 08:00 Z': 1.0089781,
'17 08:30 Z': 1.008939,
'17 09:00 Z': 1.0086197,
'17 09:30 Z': 1.008474,
'17 10:00 Z': 1.0084489,
'17 10:30 Z': 1.008616,
'17 11:00 Z': 1.0086794,
'17 11:30 Z': 1.0086983,
'17 12:00 Z': 1.0086528,
'17 12:30 Z': 1.0087455,
'17 13:00 Z': 1.0085904,
'17 13:30 Z': 1.0087111,
'17 14:00 Z': 1.0089251,
'17 14:30 Z': 1.0086508,
'17 15:00 Z': 1.0084995,
'17 15:30 Z': 1.0079262,
'17 16:00 Z': 1.0079366,
'17 16:30 Z': 1.0081071,
'17 17:00 Z': 1.0080356,
'17 17:30 Z': 1.0084465,
'17 18:00 Z': 1.0086983,
'17 18:30 Z': 1.0091515,
'17 19:00 Z': 1.0089766,
'17 19:30 Z': 1.0091812,
'17 20:00 Z': 1.0090689,
'17 20:30 Z': 1.0089895,
'17 21:00 Z': 1.0095403,
'17 21:30 Z': 1.0095674,
'17 22:00 Z': 1.009073,
'17 22:30 Z': 1.0087948,
'17 23:00 Z': 1.008518,
'17 23:30 Z': 1.0084131,
'18 00:00 Z': 1.0082552,
'18 00:30 Z': 1.0080403,
'18 01:00 Z': 1.0081276,
'18 01:30 Z': 1.0081836,
'18 02:00 Z': 1.0082685,
'18 02:30 Z': 1.0083528,
'18 03:00 Z': 1.0084879,
'18 03:30 Z': 1.0085059,
'18 04:00 Z': 1.0084241,
'18 04:30 Z': 1.0084015,
'18 05:00 Z': 1.0086927,
'18 05:30 Z': 1.0086355,
'18 06:00 Z': 1.0082507,
'18 06:30 Z': 1.0083635,
'18 07:00 Z': 1.0090099,
'18 07:30 Z': 1.0094445,
'18 08:00 Z': 1.0096934,
'18 08:30 Z': 1.0096593,
'18 09:00 Z': 1.0097243,
'18 09:30 Z': 1.0100129,
'18 10:00 Z': 1.0099617,
'18 10:30 Z': 1.0098655,
'18 11:00 Z': 1.0096506,
'18 11:30 Z': 1.0097683,
'18 12:00 Z': 1.0104604,
'18 12:30 Z': 1.0107198,
'18 13:00 Z': 1.0107917,
'18 13:30 Z': 1.0107658,
'18 14:00 Z': 1.0106767,
'18 14:30 Z': 1.0101562,
'18 15:00 Z': 1.0096169,
'18 15:30 Z': 1.0095134,
'18 16:00 Z': 1.0096997,
'18 16:30 Z': 1.0093523,
'18 17:00 Z': 1.0091873,
'18 17:30 Z': 1.0095259,
'18 18:00 Z': 1.0095939,
'18 18:30 Z': 1.0092512,
'18 19:00 Z': 1.0089556,
'18 19:30 Z': 1.0088135,
'18 20:00 Z': 1.0087494,
'18 20:30 Z': 1.0087533,
'18 21:00 Z': 1.0095033,
'18 21:30 Z': 1.0098499,
'18 22:00 Z': 1.0091725,
'18 22:30 Z': 1.0086899,
'18 23:00 Z': 1.0083165,
'18 23:30 Z': 1.0081938,
'19 00:00 Z': 1.008221,
'19 00:30 Z': 1.0082952,
'19 01:00 Z': 1.0082457,
'19 01:30 Z': 1.0081083,
'19 02:00 Z': 1.0083016,
'19 02:30 Z': 1.0083956,
'19 03:00 Z': 1.0086513,
'19 03:30 Z': 1.0087477,
'19 04:00 Z': 1.0088971,
'19 04:30 Z': 1.0090091,
'19 05:00 Z': 1.0090568,
'19 05:30 Z': 1.0088648,
'19 06:00 Z': 1.008621,
'19 06:30 Z': 1.0088113,
'19 07:00 Z': 1.0091977,
'19 07:30 Z': 1.0093046,
'19 08:00 Z': 1.0091724,
'19 08:30 Z': 1.0091965,
'19 09:00 Z': 1.0098884,
'19 09:30 Z': 1.0097803,
'19 10:00 Z': 1.0097866,
'19 10:30 Z': 1.0098611,
'19 11:00 Z': 1.0100148,
'19 11:30 Z': 1.00959,
'19 12:00 Z': 1.009534,
'19 12:30 Z': 1.0095803,
'19 13:00 Z': 1.0096124,
'19 13:30 Z': 1.0093858,
'19 14:00 Z': 1.009306,
'19 14:30 Z': 1.0090492,
'19 15:00 Z': 1.0085244,
'19 15:30 Z': 1.0082891,
'19 16:00 Z': 1.008382,
'19 16:30 Z': 1.0084925,
'19 17:00 Z': 1.0086537,
'19 17:30 Z': 1.0089217,
'19 18:00 Z': 1.0090381,
'19 18:30 Z': 1.0090314,
'19 19:00 Z': 1.008919,
'19 19:30 Z': 1.0090837,
'19 20:00 Z': 1.0090198,
'19 20:30 Z': 1.0089454,
'19 21:00 Z': 1.0094194,
'19 21:30 Z': 1.0091888,
'19 22:00 Z': 1.0094005,
'19 22:30 Z': 1.0093923,
'19 23:00 Z': 1.0083559,
'19 23:30 Z': 1.0080629,
'20 00:00 Z': 1.008306,
'20 00:30 Z': 1.0083581,
'20 01:00 Z': 1.0083437,
'20 01:30 Z': 1.0083557,
'20 02:00 Z': 1.008513,
'20 02:30 Z': 1.0085739,
'20 03:00 Z': 1.0087841,
'20 03:30 Z': 1.0087284,
'20 04:00 Z': 1.0088684,
'20 04:30 Z': 1.0089661,
'20 05:00 Z': 1.0094357,
'20 05:30 Z': 1.0092244,
'20 06:00 Z': 1.0091235,
'20 06:30 Z': 1.0097122,
'20 07:00 Z': 1.0101006,
'20 07:30 Z': 1.0104677,
'20 08:00 Z': 1.0105009,
'20 08:30 Z': 1.0104303,
'20 09:00 Z': 1.0100401,
'20 09:30 Z': 1.0097603,
'20 10:00 Z': 1.0098494,
'20 10:30 Z': 1.0097641,
'20 11:00 Z': 1.009846,
'20 11:30 Z': 1.0098704,
'20 12:00 Z': 1.0100071,
'20 12:30 Z': 1.0101539,
'20 13:00 Z': 1.0100287,
'20 13:30 Z': 1.0099282,
'20 14:00 Z': 1.0100556,
'20 14:30 Z': 1.0098906,
'20 15:00 Z': 1.0091457,
'20 15:30 Z': 1.0091484,
'20 16:00 Z': 1.0091998,
'20 16:30 Z': 1.0093548,
'20 17:00 Z': 1.009389,
'20 17:30 Z': 1.0093462,
'20 18:00 Z': 1.0095034,
'20 18:30 Z': 1.0095533,
'20 19:00 Z': 1.0094317,
'20 19:30 Z': 1.0094586,
'20 20:00 Z': 1.0096767,
'20 20:30 Z': 1.009709,
'20 21:00 Z': 1.0095954,
'20 21:30 Z': 1.0094313,
'20 22:00 Z': 1.0093409,
'20 22:30 Z': 1.0093461,
'20 23:00 Z': 1.009131,
'20 23:30 Z': 1.008828,
'21 00:00 Z': 1.008699,
'21 00:30 Z': 1.0086521,
'21 01:00 Z': 1.0085618,
'21 01:30 Z': 1.0084758,
'21 02:00 Z': 1.0086493,
'21 02:30 Z': 1.008883,
'21 03:00 Z': 1.0090557,
'21 03:30 Z': 1.0090726,
'21 04:00 Z': 1.0091303,
'21 04:30 Z': 1.0092039,
'21 05:00 Z': 1.0094536,
'21 05:30 Z': 1.0094631,
'21 06:00 Z': 1.0099404,
'21 06:30 Z': 1.0103642,
'21 07:00 Z': 1.010392,
'21 07:30 Z': 1.0106179,
'21 08:00 Z': 1.0108037,
'21 08:30 Z': 1.0113481,
'21 09:00 Z': 1.0110213,
'21 09:30 Z': 1.0110473,
'21 10:00 Z': 1.0109416,
'21 10:30 Z': 1.0105098,
'21 11:00 Z': 1.0103779,
'21 11:30 Z': 1.010349,
'21 12:00 Z': 1.0102269,
'21 12:30 Z': 1.0100351,
'21 13:00 Z': 1.0098999,
'21 13:30 Z': 1.0097177,
'21 14:00 Z': 1.0099001,
'21 14:30 Z': 1.00972,
'21 15:00 Z': 1.0091184,
'21 15:30 Z': 1.0092166,
'21 16:00 Z': 1.0093687,
'21 16:30 Z': 1.0098314,
'21 17:00 Z': 1.0098988,
'21 17:30 Z': 1.0096907,
'21 18:00 Z': 1.0097964,
'21 18:30 Z': 1.0096949,
'21 19:00 Z': 1.0097203,
'21 19:30 Z': 1.0097097,
'21 20:00 Z': 1.0094246,
'21 20:30 Z': 1.0094,
'21 21:00 Z': 1.0097573,
'21 21:30 Z': 1.0097731,
'21 22:00 Z': 1.0094838,
'21 22:30 Z': 1.0090083,
'21 23:00 Z': 1.0080027,
'21 23:30 Z': 1.0078406,
'22 00:00 Z': 1.0083384,
'22 00:30 Z': 1.0084284,
'22 01:00 Z': 1.0085079,
'22 01:30 Z': 1.0085397,
'22 02:00 Z': 1.0086541,
'22 02:30 Z': 1.0089613,
'22 03:00 Z': 1.0089722,
'22 03:30 Z': 1.0090382,
'22 04:00 Z': 1.0091836,
'22 04:30 Z': 1.0093371,
'22 05:00 Z': 1.009409,
'22 05:30 Z': 1.0093283,
'22 06:00 Z': 1.0089005,
'22 06:30 Z': 1.0085786,
'22 07:00 Z': 1.0082964,
'22 07:30 Z': 1.0080773,
'22 08:00 Z': 1.0076704,
'22 08:30 Z': 1.0076917,
'22 09:00 Z': 1.0079719,
'22 09:30 Z': 1.0080654,
'22 10:00 Z': 1.0079605,
'22 10:30 Z': 1.0077842,
'22 11:00 Z': 1.0077736,
'22 11:30 Z': 1.0074867,
'22 12:00 Z': 1.0074554,
'22 12:30 Z': 1.0074299,
'22 13:00 Z': 1.0075187,
'22 13:30 Z': 1.007476,
'22 14:00 Z': 1.0076034,
'22 14:30 Z': 1.0075508,
'22 15:00 Z': 1.0076237,
'22 15:30 Z': 1.007633,
'22 16:00 Z': 1.0078115,
'22 16:30 Z': 1.0081065,
'22 17:00 Z': 1.0082563,
'22 17:30 Z': 1.0083583,
'22 18:00 Z': 1.0082814,
'22 18:30 Z': 1.0081469,
'22 19:00 Z': 1.0078601,
'22 19:30 Z': 1.0076905,
'22 20:00 Z': 1.0076829,
'22 20:30 Z': 1.0076888,
'22 21:00 Z': 1.0074248,
'22 21:30 Z': 1.007374,
'22 22:00 Z': 1.0072089,
'22 22:30 Z': 1.007108,
'22 23:00 Z': 1.0071363,
'22 23:30 Z': 1.0072621,
'23 00:00 Z': 1.0080135,
'23 00:30 Z': 1.0086599,
'23 01:00 Z': 1.0087841,
'23 01:30 Z': 1.0089125,
'23 02:00 Z': 1.0090085,
'23 02:30 Z': 1.0088384,
'23 03:00 Z': 1.0092271,
'23 03:30 Z': 1.0091576,
'23 04:00 Z': 1.0093254,
'23 04:30 Z': 1.0092405,
'23 05:00 Z': 1.0094175,
'23 05:30 Z': 1.009394,
'23 06:00 Z': 1.0091035,
'23 06:30 Z': 1.0092085,
'23 07:00 Z': 1.0088976,
'23 07:30 Z': 1.0086738,
'23 08:00 Z': 1.0082861,
'23 08:30 Z': 1.0083278,
'23 09:00 Z': 1.0083513,
'23 09:30 Z': 1.0084881,
'23 10:00 Z': 1.0085511,
'23 10:30 Z': 1.0090069,
'23 11:00 Z': 1.0089588,
'23 11:30 Z': 1.0087705,
'23 12:00 Z': 1.0086829,
'23 12:30 Z': 1.0084778,
'23 13:00 Z': 1.0083063,
'23 13:30 Z': 1.00805,
'23 14:00 Z': 1.0081474,
'23 14:30 Z': 1.0083003,
'23 15:00 Z': 1.0084984,
'23 15:30 Z': 1.0085592,
'23 16:00 Z': 1.0086817,
'23 16:30 Z': 1.0087461,
'23 17:00 Z': 1.0088012,
'23 17:30 Z': 1.008803,
'23 18:00 Z': 1.0088783,
'23 18:30 Z': 1.0090626,
'23 19:00 Z': 1.0089835,
'23 19:30 Z': 1.0087566,
'23 20:00 Z': 1.0083066,
'23 20:30 Z': 1.0082406,
'23 21:00 Z': 1.0082902,
'23 21:30 Z': 1.0086573,
'23 22:00 Z': 1.0086,
'23 22:30 Z': 1.0082704,
'23 23:00 Z': 1.0079797,
'23 23:30 Z': 1.0084244,
'24 00:00 Z': 1.0086519,
'24 00:30 Z': 1.0087607,
'24 01:00 Z': 1.0087387,
'24 01:30 Z': 1.0084576,
'24 02:00 Z': 1.0084505,
'24 02:30 Z': 1.0087194,
'24 03:00 Z': 1.0085975,
'24 03:30 Z': 1.0083123,
'24 04:00 Z': 1.0082194,
'24 04:30 Z': 1.0083575,
'24 05:00 Z': 1.008382,
'24 05:30 Z': 1.0083592,
'24 06:00 Z': 1.0082189,
'24 06:30 Z': 1.0080185,
'24 07:00 Z': 1.0081178,
'24 07:30 Z': 1.0083301,
'24 08:00 Z': 1.0087204,
'24 08:30 Z': 1.0091211,
'24 09:00 Z': 1.0099078,
'24 09:30 Z': 1.0099004,
'24 10:00 Z': 1.0098212,
'24 10:30 Z': 1.0100157,
'24 11:00 Z': 1.0103335,
'24 11:30 Z': 1.0100993,
'24 12:00 Z': 1.0105006,
'24 12:30 Z': 1.0104967,
'24 13:00 Z': 1.010578,
'24 13:30 Z': 1.0106532,
'24 14:00 Z': 1.010737,
'24 14:30 Z': 1.0106533,
'24 15:00 Z': 1.0103381,
'24 15:30 Z': 1.0101337,
'24 16:00 Z': 1.0103462,
'24 16:30 Z': 1.0105133,
'24 17:00 Z': 1.0103159,
'24 17:30 Z': 1.0098803,
'24 18:00 Z': 1.0100078,
'24 18:30 Z': 1.0097617,
'24 19:00 Z': 1.0093183,
'24 19:30 Z': 1.0093463,
'24 20:00 Z': 1.0089499,
'24 20:30 Z': 1.008933,
'24 21:00 Z': 1.009088,
'24 21:30 Z': 1.0093195,
'24 22:00 Z': 1.00881,
'24 22:30 Z': 1.0084625,
'24 23:00 Z': 1.0084393,
'24 23:30 Z': 1.0084438,
'25 00:00 Z': 1.0083418,
'25 00:30 Z': 1.0085499,
'25 01:00 Z': 1.008562,
'25 01:30 Z': 1.0084978,
'25 02:00 Z': 1.0088191,
'25 02:30 Z': 1.0089944,
'25 03:00 Z': 1.0092163,
'25 03:30 Z': 1.0089873,
'25 04:00 Z': 1.0092466,
'25 04:30 Z': 1.0089957,
'25 05:00 Z': 1.0089129,
'25 05:30 Z': 1.0089543,
'25 06:00 Z': 1.0086182,
'25 06:30 Z': 1.0084035,
'25 07:00 Z': 1.008565,
'25 07:30 Z': 1.0088447,
'25 08:00 Z': 1.0088455,
'25 08:30 Z': 1.0091587,
'25 09:00 Z': 1.0090495,
'25 09:30 Z': 1.0091116,
'25 10:00 Z': 1.0091536,
'25 10:30 Z': 1.0090799,
'25 11:00 Z': 1.008955,
'25 11:30 Z': 1.0089244,
'25 12:00 Z': 1.0088514,
'25 12:30 Z': 1.0086917,
'25 13:00 Z': 1.0087062,
'25 13:30 Z': 1.0085406,
'25 14:00 Z': 1.0084483,
'25 14:30 Z': 1.0083659,
'25 15:00 Z': 1.0081547,
'25 15:30 Z': 1.0082893,
'25 16:00 Z': 1.00812,
'25 16:30 Z': 1.0080382,
'25 17:00 Z': 1.0082168,
'25 17:30 Z': 1.0082046,
'25 18:00 Z': 1.008243,
'25 18:30 Z': 1.0081095,
'25 19:00 Z': 1.0077569,
'25 19:30 Z': 1.0077965,
'25 20:00 Z': 1.0082487,
'25 20:30 Z': 1.0082643,
'25 21:00 Z': 1.0082854,
'25 21:30 Z': 1.0081803,
'25 22:00 Z': 1.0079896,
'25 22:30 Z': 1.0079705,
'25 23:00 Z': 1.0079385,
'25 23:30 Z': 1.0078094,
'26 00:00 Z': 1.0079846,
'26 00:30 Z': 1.008134,
'26 01:00 Z': 1.0081289,
'26 01:30 Z': 1.0080095,
'26 02:00 Z': 1.0082537,
'26 02:30 Z': 1.0085379,
'26 03:00 Z': 1.0088064,
'26 03:30 Z': 1.0087558,
'26 04:00 Z': 1.0085799,
'26 04:30 Z': 1.0085625,
'26 05:00 Z': 1.008565,
'26 05:30 Z': 1.0086705,
'26 06:00 Z': 1.0085247,
'26 06:30 Z': 1.0084914,
'26 07:00 Z': 1.0083245,
'26 07:30 Z': 1.0083726,
'26 08:00 Z': 1.0081413,
'26 08:30 Z': 1.0083073,
'26 09:00 Z': 1.0080162,
'26 09:30 Z': 1.0080867,
'26 10:00 Z': 1.0080529,
'26 10:30 Z': 1.0081184,
'26 11:00 Z': 1.0081254,
'26 11:30 Z': 1.0082532,
'26 12:00 Z': 1.0084219,
'26 12:30 Z': 1.0085328,
'26 13:00 Z': 1.0085928,
'26 13:30 Z': 1.0085373,
'26 14:00 Z': 1.0086327,
'26 14:30 Z': 1.0083965,
'26 15:00 Z': 1.00824,
'26 15:30 Z': 1.0083439,
'26 16:00 Z': 1.0082231,
'26 16:30 Z': 1.0082638,
'26 17:00 Z': 1.0084078,
'26 17:30 Z': 1.0082637,
'26 18:00 Z': 1.0087267,
'26 18:30 Z': 1.0089532,
'26 19:00 Z': 1.0092829,
'26 19:30 Z': 1.0095081,
'26 20:00 Z': 1.0097319,
'26 20:30 Z': 1.0098034,
'26 21:00 Z': 1.0094764,
'26 21:30 Z': 1.0091232,
'26 22:00 Z': 1.0091091,
'26 22:30 Z': 1.0092826,
'26 23:00 Z': 1.0087596,
'26 23:30 Z': 1.0085869,
'27 00:00 Z': 1.0085945,
'27 00:30 Z': 1.0086061,
'27 01:00 Z': 1.0086639,
'27 01:30 Z': 1.0085504,
'27 02:00 Z': 1.0086512,
'27 02:30 Z': 1.0088397,
'27 03:00 Z': 1.0089342,
'27 03:30 Z': 1.0089507,
'27 04:00 Z': 1.008834,
'27 04:30 Z': 1.0090452,
'27 05:00 Z': 1.008881,
'27 05:30 Z': 1.0087646,
'27 06:00 Z': 1.0085574,
'27 06:30 Z': 1.0083945,
'27 07:00 Z': 1.0082162,
'27 07:30 Z': 1.0082766,
'27 08:00 Z': 1.0086805,
'27 08:30 Z': 1.008787,
'27 09:00 Z': 1.0082909,
'27 09:30 Z': 1.0085098,
'27 10:00 Z': 1.0084902,
'27 10:30 Z': 1.0084963,
'27 11:00 Z': 1.008421,
'27 11:30 Z': 1.0083361,
'27 12:00 Z': 1.0083632,
'27 12:30 Z': 1.0083346,
'27 13:00 Z': 1.008452,
'27 13:30 Z': 1.0083986,
'27 14:00 Z': 1.0085281,
'27 14:30 Z': 1.0084623,
'27 15:00 Z': 1.0081214,
'27 15:30 Z': 1.0081837,
'27 16:00 Z': 1.0083107,
'27 16:30 Z': 1.0082838,
'27 17:00 Z': 1.0080744,
'27 17:30 Z': 1.007997,
'27 18:00 Z': 1.0081489,
'27 18:30 Z': 1.0084461,
'27 19:00 Z': 1.0086304,
'27 19:30 Z': 1.0088721,
'27 20:00 Z': 1.0087276,
'27 20:30 Z': 1.0083486,
'27 21:00 Z': 1.0082117,
'27 21:30 Z': 1.0082274,
'27 22:00 Z': 1.008158,
'27 22:30 Z': 1.0081427,
'27 23:00 Z': 1.0076676,
'27 23:30 Z': 1.0079039,
'28 00:00 Z': 1.0082047,
'28 00:30 Z': 1.0082665,
'28 01:00 Z': 1.0083598,
'28 01:30 Z': 1.00832,
'28 02:00 Z': 1.0085422,
'28 02:30 Z': 1.0086182,
'28 03:00 Z': 1.0086957,
'28 03:30 Z': 1.0086528,
'28 04:00 Z': 1.0084371,
'28 04:30 Z': 1.0084202,
'28 05:00 Z': 1.0084224,
'28 05:30 Z': 1.0081731,
'28 06:00 Z': 1.0083302,
'28 06:30 Z': 1.0086603,
'28 07:00 Z': 1.0087784,
'28 07:30 Z': 1.008881,
'28 08:00 Z': 1.008708,
'28 08:30 Z': 1.0087652,
'28 09:00 Z': 1.0084944,
'28 09:30 Z': 1.0085327,
'28 10:00 Z': 1.0086434,
'28 10:30 Z': 1.00878,
'28 11:00 Z': 1.0087513,
'28 11:30 Z': 1.0087083,
'28 12:00 Z': 1.0087373,
'28 12:30 Z': 1.0087675,
'28 13:00 Z': 1.0088325,
'28 13:30 Z': 1.0083723,
'28 14:00 Z': 1.008038,
'28 14:30 Z': 1.0082052,
'28 15:00 Z': 1.0080283,
'28 15:30 Z': 1.0081475,
'28 16:00 Z': 1.0080585,
'28 16:30 Z': 1.0082092,
'28 17:00 Z': 1.0081948,
'28 17:30 Z': 1.0082443,
'28 18:00 Z': 1.0083975,
'28 18:30 Z': 1.0084941,
'28 19:00 Z': 1.0082996,
'28 19:30 Z': 1.0083637,
'28 20:00 Z': 1.0082972,
'28 20:30 Z': 1.0082763,
'28 21:00 Z': 1.0084814,
'28 21:30 Z': 1.0085249,
'28 22:00 Z': 1.008406,
'28 22:30 Z': 1.0083549,
'28 23:00 Z': 1.0080577,
'28 23:30 Z': 1.0081583,
'29 00:00 Z': 1.0083766,
'29 00:30 Z': 1.0084581,
'29 01:00 Z': 1.0085275,
'29 01:30 Z': 1.0085003,
'29 02:00 Z': 1.0087094,
'29 02:30 Z': 1.0087814,
'29 03:00 Z': 1.0089565,
'29 03:30 Z': 1.0090847,
'29 04:00 Z': 1.0091294,
'29 04:30 Z': 1.009219,
'29 05:00 Z': 1.0094826,
'29 05:30 Z': 1.0098249,
'29 06:00 Z': 1.0097189,
'29 06:30 Z': 1.0095272,
'29 07:00 Z': 1.0094836,
'29 07:30 Z': 1.0095667,
'29 08:00 Z': 1.0098009,
'29 08:30 Z': 1.010322,
'29 09:00 Z': 1.0108433,
'29 09:30 Z': 1.0106389,
'29 10:00 Z': 1.0103896,
'29 10:30 Z': 1.0106659,
'29 11:00 Z': 1.0105003,
'29 11:30 Z': 1.0106644,
'29 12:00 Z': 1.0107884,
'29 12:30 Z': 1.0104575,
'29 13:00 Z': 1.0104106,
'29 13:30 Z': 1.0102119,
'29 14:00 Z': 1.0102329,
'29 14:30 Z': 1.0100855,
'29 15:00 Z': 1.0100355,
'29 15:30 Z': 1.0099491,
'29 16:00 Z': 1.0099011,
'29 16:30 Z': 1.0097243,
'29 17:00 Z': 1.0094892,
'29 17:30 Z': 1.009389,
'29 18:00 Z': 1.0090403,
'29 18:30 Z': 1.0088887,
'29 19:00 Z': 1.0087482,
'29 19:30 Z': 1.008827,
'29 20:00 Z': 1.0089865,
'29 20:30 Z': 1.0089631,
'29 21:00 Z': 1.0087479,
'29 21:30 Z': 1.0087641,
'29 22:00 Z': 1.008697,
'29 22:30 Z': 1.008697,
'29 23:00 Z': 1.0085875,
'29 23:30 Z': 1.008675,
'30 00:00 Z': 1.0090145,
'30 00:30 Z': 1.0091824,
'30 01:00 Z': 1.0095274,
'30 01:30 Z': 1.0096814,
'30 02:00 Z': 1.0100897,
'30 02:30 Z': 1.0100935,
'30 03:00 Z': 1.0102365,
'30 03:30 Z': 1.010089,
'30 04:00 Z': 1.0100643,
'30 04:30 Z': 1.010039,
'30 05:00 Z': 1.0096679,
'30 05:30 Z': 1.0096412,
'30 06:00 Z': 1.0094998,
'30 06:30 Z': 1.0092988,
'30 07:00 Z': 1.0090568,
'30 07:30 Z': 1.0089727,
'30 08:00 Z': 1.0086744,
'30 08:30 Z': 1.0081991,
'30 09:00 Z': 1.0083223,
'30 09:30 Z': 1.0081913,
'30 10:00 Z': 1.0081838,
'30 10:30 Z': 1.0082795,
'30 11:00 Z': 1.0084577,
'30 11:30 Z': 1.0085206,
'30 12:00 Z': 1.0085549,
'30 12:30 Z': 1.0085747,
'30 13:00 Z': 1.008243,
'30 13:30 Z': 1.0079058,
'30 14:00 Z': 1.0080185,
'30 14:30 Z': 1.0079728,
'30 15:00 Z': 1.0080595,
'30 15:30 Z': 1.0079537,
'30 16:00 Z': 1.0080263,
'30 16:30 Z': 1.0079117,
'30 17:00 Z': 1.008078,
'30 17:30 Z': 1.0080874,
'30 18:00 Z': 1.0081358,
'30 18:30 Z': 1.0079434,
'30 19:00 Z': 1.0076374,
'30 19:30 Z': 1.0075797,
'30 20:00 Z': 1.0076203,
'30 20:30 Z': 1.0074487,
'30 21:00 Z': 1.0075202,
'30 21:30 Z': 1.007528,
'30 22:00 Z': 1.0075183,
'30 22:30 Z': 1.0073431,
'30 23:00 Z': 1.0077501,
'30 23:30 Z': 1.0081042,
'31 00:00 Z': 1.0087525,
'31 00:30 Z': 1.008847,
'31 01:00 Z': 1.0089517,
'31 01:30 Z': 1.009061,
'31 02:00 Z': 1.0091093,
'31 02:30 Z': 1.008982,
'31 03:00 Z': 1.0091691,
'31 03:30 Z': 1.009447,
'31 04:00 Z': 1.0096279,
'31 04:30 Z': 1.009342,
'31 05:00 Z': 1.0091051,
'31 05:30 Z': 1.009189,
'31 06:00 Z': 1.0088692,
'31 06:30 Z': 1.0084246,
'31 07:00 Z': 1.0087062,
'31 07:30 Z': 1.0087957,
'31 08:00 Z': 1.0086972,
'31 08:30 Z': 1.0088877,
'31 09:00 Z': 1.0085915,
'31 09:30 Z': 1.0083167,
'31 10:00 Z': 1.0083239,
'31 10:30 Z': 1.0082433,
'31 11:00 Z': 1.0082447,
'31 11:30 Z': 1.0082279,
'31 12:00 Z': 1.0083084,
'31 12:30 Z': 1.0083636,
'31 13:00 Z': 1.008649,
'31 13:30 Z': 1.0087925,
'31 14:00 Z': 1.0086937,
'31 14:30 Z': 1.0086223,
'31 15:00 Z': 1.0083855,
'31 15:30 Z': 1.0081161,
'31 16:00 Z': 1.0082271,
'31 16:30 Z': 1.0083473,
'31 17:00 Z': 1.0083729,
'31 17:30 Z': 1.0084349,
'31 18:00 Z': 1.0087107,
'31 18:30 Z': 1.0086792,
'31 19:00 Z': 1.008469,
'31 19:30 Z': 1.0086234,
'31 20:00 Z': 1.0085466,
'31 20:30 Z': 1.008644,
'31 21:00 Z': 1.0087498,
'31 21:30 Z': 1.0089035,
'31 22:00 Z': 1.0087703,
'31 22:30 Z': 1.0082618,
'31 23:00 Z': 1.0080446,
'31 23:30 Z': 1.0084197}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[45]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[POOL]]></value>
        <value><![CDATA[TRIAD]]></value>
        <value><![CDATA[from net.sf.chellow.billing import NonCoreContract
from net.sf.chellow.physical import HhStartDate, MpanCore
from net.sf.chellow.monad.types import MonadDate
from java.util import Calendar
from java.lang import System

def get_triad_dates(date, data_source):
    rate_script = contract.rateScript(date)
    return data_source.rate(rate_script, 'triad_dates')


def triad(bill, dso_contract, month_begin, month_end, data_source, rate_period='monthly'):
     #data_source.pw.println("starting triad " + str(System.currentTimeMillis() - timing) + "month begin " + str(month_begin) + " month end " + str(month_end) + " " + str(dso_contract.getId()))


    triad_rates_contract = NonCoreContract.getNonCoreContract('triad-rates')

    utc_cal = MonadDate.getCalendar()
    utc_cal.setTime(month_begin.getDate())
    month_num = utc_cal.get(Calendar.MONTH)

    # Get start of last financial year
    while utc_cal.get(Calendar.MONTH) != Calendar.APRIL:
        utc_cal.add(Calendar.MONTH, -1)
    financial_year_start = HhStartDate(utc_cal.getTime())
    utc_cal.add(Calendar.YEAR, -1)
    last_financial_year_start = HhStartDate(utc_cal.getTime())
    utc_cal.add(Calendar.YEAR, 2)
    utc_cal.add(Calendar.MINUTE, -30)
    financial_year_finish = HhStartDate(utc_cal.getTime())

    triad_dates = []
    earliest_triad = None
    for dt in get_triad_dates(last_financial_year_start, data_source):
        utc_cal.setTime(dt.getDate())
        utc_cal.add(Calendar.YEAR, 1)
        triad_dates.append(HhStartDate(utc_cal.getTime()))
        if earliest_triad is None or dt.before(earliest_triad):
            earliest_triad = dt

    #data_source.pw.println("triad dates " + str(triad_dates))
    est_triad_kws = [data_source.create_whole_data(t_date, t_date, financial_year_start)['data'][0] for t_date in triad_dates]

    #pw.println("finished getting data " + str(System.currentTimeMillis() - timing))
    if data_source.site_id is None:
        generation = data_source.supply.getGeneration(earliest_triad)
        if generation is None or (generation.getPc().getCode() != 0) or generation.getChannel(data_source.is_import, True) is None:
            triad_rate_script = NonCoreContract.getNonCoreContract("TRIAD Estimates").rateScript(month_begin)
            triad_estimates = data_source.rate(triad_rate_script, 'triad_estimates')
            if data_source.id in triad_estimates:
                est_triad_kw = triad_estimates[data_source.id]
            else:
                est_triad_kw = 0.85 * data_source.summary['max-msp-kwh'] * 2
            for est_datum in est_triad_kws:
                est_datum['msp-kw'] = est_triad_kw
                est_datum['gsp-kw'] = est_datum['msp-kw'] * est_datum['laf']
    
    triad_calc(bill, 'triad-estimate', triad_rates_contract, est_triad_kws, financial_year_start, financial_year_finish, data_source, month_begin)

    est_triad_gbp = bill['triad-estimate-rate'] * bill['triad-estimate-gsp-kw']

    if rate_period == 'monthly':
        interval_type = Calendar.MONTH
        total_intervals = 12

        est_intervals = 1
        bill['triad-estimate-months'] = est_intervals
    else:
        utc_cal.setTime(financial_year_finish.getDate())
        total_intervals = 0
        while utc_cal.getTime().after(financial_year_start.getDate()):
            total_intervals += 1
            utc_cal.add(Calendar.DAY_OF_MONTH, -1)
        interval_type = Calendar.DAY_OF_MONTH

        est_intervals = data_source.summary['days']
        bill['triad-estimate-days'] = est_intervals

    bill['triad-estimate-gbp'] = est_triad_gbp / total_intervals * est_intervals

    if month_num == Calendar.MARCH and not data_source.is_new:
        #T1 Date, T1 MSP kW, T1 Status, T1 LAF, T1 GSP kW, T2 Date, T2 MSP kW, T2 Status, T2 LAF, T2 GSP kW, T3 Date, T3 MSP kW, T3 Status, T3 LAF, T3 GSP kW, GSP kW, GBP
        #data_source.pw.println('t dates ' + str(get_triad_dates(month_begin, data_source)))
        triad_kws = [data_source.create_whole_data(t_date, t_date, data_source.forecast_date)['data'][0] for t_date in get_triad_dates(month_begin, data_source)]

        triad = triad_calc(bill, 'triad-actual', triad_rates_contract, triad_kws, financial_year_start, financial_year_finish, data_source, month_begin)
        bill['triad-actual-gbp'] = bill['triad-actual-rate'] * bill['triad-actual-gsp-kw']

        utc_cal.setTime(month_end.getDate())
        sup_gen = data_source.supply.getGeneration(HhStartDate(utc_cal.getTime()))
        est_intervals = 0
        march_intervals = 0
        if rate_period == 'monthly':
            interval_type = Calendar.MONTH
        else:
            interval_type = Calendar.DAY_OF_MONTH
        while sup_gen is not None and utc_cal.getTime().after(financial_year_start.getDate()) :
            est_intervals += 1                
            utc_cal.add(interval_type, -1)
            if HhStartDate(utc_cal.getTime()).after(sup_gen.getFinishDate()):
                sup_gen = sup.getGeneration(HhStartDate(utc_cal.getTime()))
        if rate_period == 'monthly':
            bill['triad-all-estimates-months'] = est_intervals
        else:
            bill['triad-all-estimates-days'] = est_intervals
        bill['triad-all-estimates-gbp'] = est_triad_gbp / total_intervals * est_intervals * -1

    #data_source.pw.println("finished triad " + str(System.currentTimeMillis() - timing))

def triad_calc(bill, prefix, triad_rates_contract, triad_data, financial_year_start, financial_year_finish, data_source, month_begin):
    gsp_kw = 0
    for i in range(len(triad_data)):
        triad_hh = triad_data[i]
        triad_prefix = prefix + '-' + str(i)
        bill[triad_prefix + '-date'] = HhStartDate(triad_hh['hist-start-date'])
        bill[triad_prefix + '-msp-kw'] = triad_hh['msp-kw']
        bill[triad_prefix + '-status'] = triad_hh['status']
        bill[triad_prefix + '-laf'] = triad_hh['laf']
        bill[triad_prefix + '-gsp-kw'] = triad_hh['gsp-kw']
        gsp_kw += triad_hh['gsp-kw']

    bill[prefix + '-gsp-kw'] = gsp_kw / 3

    if prefix == 'triad-actual':
        cal = MonadDate.getCalendar()
        tot_rate = 0
        for rate_script in triad_rates_contract.rateScripts(financial_year_start, financial_year_finish):
            cal.setTime(rate_script.getStartDate().getDate())
            start_month = cal.get(Calendar.MONTH)
            if start_month < Calendar.APRIL:
                start_month += 12
            rate_finish_date = rate_script.getFinishDate()
            if rate_finish_date is None:
                cal.setTime(financial_year_finish.getDate())
            else:
                cal.setTime(rate_script.getFinishDate().getDate())
            finish_month = cal.get(Calendar.MONTH)
            if finish_month < Calendar.APRIL:
                finish_month += 12
            tot_rate += float(finish_month - start_month + 1) * data_source.rate(rate_script, 'hh_demand_gbp_per_kw')[data_source.dso_code]
        rate = tot_rate / float(12)
    else:
        rate_script = triad_rates_contract.rateScript(month_begin)
        rate = data_source.rate(rate_script, 'hh_demand_gbp_per_kw')[data_source.dso_code]

    bill[prefix + '-rate'] = rate]]></value>
        <value><![CDATA[147]]></value>
        <value><![CDATA[2005-04-01T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def triad_dates():
    return [HhStartDate("2005-11-28T17:00Z"), HhStartDate("2006-01-05T17:00Z"), HhStartDate("2006-02-03T17:30Z")]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[TRIAD]]></value>
        <value><![CDATA[73]]></value>
        <value><![CDATA[2006-04-01T00:00Z]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def triad_dates():
    return [HhStartDate("2007-01-23T17:00Z"), HhStartDate("2006-12-20T17:00Z"), HhStartDate("2007-02-08T17:30Z")]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[TRIAD]]></value>
        <value><![CDATA[75]]></value>
        <value><![CDATA[2007-04-01T00:00Z]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def triad_dates():
    return [HhStartDate("2007-12-17T17:00Z"), HhStartDate("2008-01-03T17:00Z"), HhStartDate("2007-11-26T17:00Z")]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[TRIAD]]></value>
        <value><![CDATA[77]]></value>
        <value><![CDATA[2008-04-01T00:00Z]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def triad_dates():
    return [HhStartDate("2009-01-06T17:00Z"), HhStartDate("2008-12-01T17:00Z"), HhStartDate("2008-12-15T17:00Z")]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[TRIAD]]></value>
        <value><![CDATA[79]]></value>
        <value><![CDATA[2009-04-01T00:00Z]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def triad_dates():
    return [HhStartDate("2010-01-07T17:00Z"), HhStartDate("2010-01-25T17:00Z"), HhStartDate("2009-12-15T17:00Z")]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[TRIAD]]></value>
        <value><![CDATA[81]]></value>
        <value><![CDATA[2010-04-01T00:00Z]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def triad_dates():
    return [HhStartDate("2011-01-07T17:00Z"), HhStartDate("2011-01-25T17:00Z"), HhStartDate("2010-12-15T17:00Z")]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[TRIAD]]></value>
        <value><![CDATA[249]]></value>
        <value><![CDATA[2011-04-01T00:00Z]]></value>
        <value><![CDATA[from net.sf.chellow.physical import HhStartDate

def triad_dates():
    return [HhStartDate("2010-12-07T17:00Z"), HhStartDate("2010-12-20T17:00Z"), HhStartDate("2011-01-06T17:00Z")]]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[69]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[CALB]]></value>
        <value><![CDATA[triad-rates]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[219]]></value>
        <value><![CDATA[2000-01-01T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[def hh_demand_gbp_per_kw():
    return {
        '14': 17.807318,
        '20': 21.100281,
        '22': 23.77056}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[triad-rates]]></value>
        <value><![CDATA[221]]></value>
        <value><![CDATA[2007-04-01T00:00Z]]></value>
        <value><![CDATA[def hh_demand_gbp_per_kw():
    return {
        '14': 17.807318,
        '20': 21.100281,
        '22': 23.77056}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[triad-rates]]></value>
        <value><![CDATA[223]]></value>
        <value><![CDATA[2008-04-01T00:00Z]]></value>
        <value><![CDATA[def hh_demand_gbp_per_kw():
    return {
        '14': 19.147817,
        '20': 22.194810,
        '22': 25.212997}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[triad-rates]]></value>
        <value><![CDATA[225]]></value>
        <value><![CDATA[2009-04-01T00:00Z]]></value>
        <value><![CDATA[def hh_demand_gbp_per_kw():
    return {
        '14': 20.526611,
        '20': 24.471461,
        '22': 25.631634}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[triad-rates]]></value>
        <value><![CDATA[227]]></value>
        <value><![CDATA[2010-04-01T00:00Z]]></value>
        <value><![CDATA[def hh_demand_gbp_per_kw():
    return {
        '14': 22.692635,
        '20': 25.494450,
        '22': 26.057832}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract-rate-script]]></value>
        <value><![CDATA[triad-rates]]></value>
        <value><![CDATA[229]]></value>
        <value><![CDATA[2010-12-01T00:00Z]]></value>
        <value><![CDATA[def hh_demand_gbp_per_kw():
    return {
        '14': 20.665831,
        '20': 23.467647,
        '22': 24.031029}]]></value>
    </line>
    <line>
        <value><![CDATA[insert]]></value>
        <value><![CDATA[non-core-contract]]></value>
        <value><![CDATA[47]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[POOL]]></value>
        <value><![CDATA[vat]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[149]]></value>
        <value><![CDATA[2010-03-25T00:00Z]]></value>
        <value><![CDATA[]]></value>
        <value><![CDATA[]]></value>
    </line>
</csv>